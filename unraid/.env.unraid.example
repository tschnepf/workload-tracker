# Unraid Compose project .env (example)
# Copy to your Unraid project .env path (e.g.,
#   /boot/config/plugins/compose.manager/projects/workload-tracker/.env)
# and fill in the secrets and host-specific values. Do not commit real secrets.

# --- Project metadata ---
COMPOSE_PROJECT_NAME=workload-tracker

# LAN host IP for convenience features (optional; used by settings to build CORS defaults)
# HOST_IP=10.20.30.2

# --- Database (containerized Postgres) ---
POSTGRES_DB=workload_tracker
POSTGRES_USER=workload_user
POSTGRES_PASSWORD=CHANGE_ME_DB_PASSWORD

# --- Redis ---
REDIS_PASSWORD=CHANGE_ME_REDIS_PASSWORD

# --- Frontend (Vite) build args passed via compose build args ---
# With SWAG proxying /api to the backend, use a relative base so the SPA and API share origin.
FRONTEND_API_URL=/api
# Under HTTPS, prefer cookie-based refresh flow
FRONTEND_COOKIE_REFRESH_AUTH=true

# --- Backend (Django) runtime settings ---
# Enable cookie-based refresh and enforce HTTPS in production behind SWAG
COOKIE_REFRESH_AUTH=true
SECURE_SSL_REDIRECT=true

# Hosts and CSRF for your public domain (no quotes, no spaces in ALLOWED_HOSTS)
ALLOWED_HOSTS=smc-projects.com,www.smc-projects.com
CSRF_TRUSTED_ORIGINS=https://smc-projects.com,https://www.smc-projects.com

# Optional CORS knobs (normally not needed when using same-origin /api through SWAG)
# CORS_ALLOWED_ORIGINS=
# CORS_ALLOW_ALL_ORIGINS=false

# Sentry (optional)
# SENTRY_DSN=

# Notes:
# - After changing FRONTEND_* values, rebuild the frontend image:
#     docker compose -f docker-compose.unraid.yml build frontend && \
#     docker compose -f docker-compose.unraid.yml up -d frontend
# - Backend picks up env changes on restart:
#     docker compose -f docker-compose.unraid.yml up -d backend

