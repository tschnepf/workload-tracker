# === Application Settings ===
APP_NAME=workload-tracker
DEBUG=true
SECRET_KEY=dev-secret-key-change-in-production
ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend

# === Database Settings ===
POSTGRES_DB=workload_tracker
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_HOST=db
POSTGRES_PORT=5432
DATABASE_URL=postgresql://postgres:postgres@db:5432/workload_tracker

# === Port Configuration ===
BACKEND_PORT=8000
FRONTEND_PORT=3000

# === API Settings ===
API_BASE_URL=http://localhost:8000/api
VITE_API_URL=http://localhost:8000/api

# === Default Admin (Dev Only) ===
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@example.com
DJANGO_SUPERUSER_PASSWORD=admin123

# === Docker Settings ===
COMPOSE_PROJECT_NAME=workload-tracker
DOCKER_BUILDKIT=1

# === Security Feature Flags ===
# Use httpOnly cookie to store refresh token (backend + frontend must both enable)
COOKIE_REFRESH_AUTH=false
LOGIN_PROTECTION=false

# === Login protection (django-axes) ===
# Number of failed attempts before lockout
AXES_FAILURE_LIMIT=5
# Lockout cooloff period in hours (can be fractional)
AXES_COOLOFF_TIME=1
# Comma-separated list of usernames that are never locked out (e.g., admin emails)
AXES_NEVER_LOCKOUT_USERNAMES=
# Comma-separated list of CIDR ranges that bypass lockout checks (e.g., 10.0.0.0/8)
AXES_ALLOWED_CIDR_NETS=
# Email ADMINS on lockout events (requires Django email config + ADMINS)
AXES_ALERT_ADMINS=false

# === CORS/CSRF (optional overrides) ===
# Comma-separated list of allowed origins for CORS
# CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
# Comma-separated list for CSRF trusted origins
# CSRF_TRUSTED_ORIGINS=http://localhost,http://127.0.0.1

# === Frontend Flags ===
VITE_COOKIE_REFRESH_AUTH=false

# === Sentry (frontend) ===
# Upload sourcemaps during CI build only (recommended)
SENTRY_UPLOAD=false
VITE_SENTRY_ORG=
VITE_SENTRY_PROJECT=
VITE_SENTRY_AUTH_TOKEN=
VITE_APP_VERSION=dev

# === Content Security Policy ===
# Enable/disable CSP header injection (handled by Django middleware)
CSP_ENABLED=true
# Start in report-only mode to collect violations without breaking users
CSP_REPORT_ONLY=true
# Endpoint to receive CSP violation reports (relative or absolute)
CSP_REPORT_URI=/csp-report/

# === Celery (Background Jobs) ===
ASYNC_JOBS=false
# If not set, falls back to REDIS_URL used by the app (docker-compose provides REDIS_URL to backend)
CELERY_BROKER_URL=redis://redis:6379/1
CELERY_RESULT_BACKEND=redis://redis:6379/1
CELERY_TASK_ALWAYS_EAGER=false

# === Performance (Phase 3) ===
# Keep DB connections alive (seconds)
DB_CONN_MAX_AGE=60
# Enable connection health checks (recommended in production)
DB_CONN_HEALTH_CHECKS=true
# Enable shortâ€‘TTL caching for heavy aggregate endpoints
SHORT_TTL_AGGREGATES=false
# Optional TTLs (seconds)
# DEPT_DESC_CACHE_TTL=300
# AGGREGATE_CACHE_TTL=15
