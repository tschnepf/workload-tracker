{"version":3,"file":"index.7JAYijj2.js","sources":["../../src/pages/Assignments/AssignmentList.tsx","../../src/pages/Assignments/AssignmentForm.tsx","../../src/components/ui/Toast.tsx","../../src/pages/Assignments/AssignmentGrid.tsx"],"sourcesContent":["/**\n * Assignment List Page - Dark mode table with assignment management\n * Chunk 3: Basic assignment CRUD with utilization display\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Assignment } from '@/types/models';\nimport { assignmentsApi } from '@/services/api';\nimport Layout from '@/components/layout/Layout';\nimport Button from '@/components/ui/Button';\nimport Card from '@/components/ui/Card';\nimport UtilizationBadge from '@/components/ui/UtilizationBadge';\n\nconst AssignmentList: React.FC = () => {\n  const navigate = useNavigate();\n  const [assignments, setAssignments] = useState<Assignment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadAssignments();\n  }, []);\n\n  const loadAssignments = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await assignmentsApi.list();\n      setAssignments(response.results || []);\n    } catch (err: any) {\n      setError(err.message || 'Failed to load assignments');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id: number, projectDisplayName: string, personName: string) => {\n    if (!window.confirm(`Remove ${personName} from ${projectDisplayName}?`)) {\n      return;\n    }\n\n    try {\n      await assignmentsApi.delete(id);\n      await loadAssignments(); // Reload the list\n    } catch (err: any) {\n      setError(err.message || 'Failed to delete assignment');\n    }\n  };\n\n  if (loading) {\n    return (\n      <Layout>\n        <Card className=\"bg-[#2d2d30] border-[#3e3e42] p-6\">\n          <div className=\"text-slate-300\">Loading assignments...</div>\n        </Card>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-[#cccccc]\">Project Assignments</h1>\n          <Button\n            variant=\"primary\"\n            onClick={() => navigate('/assignments/new')}\n          >\n            Create Assignment\n          </Button>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <Card className=\"bg-red-500/20 border-red-500/50 p-4\">\n            <div className=\"text-red-400\">{error}</div>\n          </Card>\n        )}\n\n        {/* Assignments Table */}\n        <Card className=\"bg-[#2d2d30] border-[#3e3e42] overflow-hidden\">\n          {assignments.length === 0 ? (\n            <div className=\"p-6 text-center\">\n              <div className=\"text-[#969696] mb-4\">No project assignments yet</div>\n              <Button\n                variant=\"primary\"\n                onClick={() => navigate('/assignments/new')}\n              >\n                Create First Assignment\n              </Button>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-[#3e3e42] border-b border-[#3e3e42]\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-[#cccccc] uppercase tracking-wider\">\n                      Person\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-[#cccccc] uppercase tracking-wider\">\n                      Project\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-[#cccccc] uppercase tracking-wider\">\n                      Allocation\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-[#cccccc] uppercase tracking-wider\">\n                      Created\n                    </th>\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-[#cccccc] uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-slate-600\">\n                  {assignments.map((assignment) => (\n                    <tr key={assignment.id} className=\"hover:bg-[#3e3e42]/50 transition-colors\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"font-medium text-[#cccccc]\">{assignment.personName}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-slate-300\">{assignment.projectDisplayName || assignment.projectName || 'No Project'}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <UtilizationBadge percentage={assignment.allocationPercentage} />\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-[#969696] text-sm\">\n                          {assignment.createdAt ? new Date(assignment.createdAt).toLocaleDateString() : '-'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm space-x-2\">\n                        <Button\n                          variant=\"secondary\"\n                          size=\"sm\"\n                          onClick={() => navigate(`/assignments/${assignment.id}/edit`)}\n                        >\n                          Edit\n                        </Button>\n                        <Button\n                          variant=\"danger\"\n                          size=\"sm\"\n                          onClick={() => handleDelete(assignment.id!, assignment.projectDisplayName!, assignment.personName!)}\n                        >\n                          Remove\n                        </Button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </Card>\n\n        {/* Summary */}\n        <Card className=\"bg-[#2d2d30] border-[#3e3e42] p-4\">\n          <div className=\"text-[#969696] text-sm\">\n            Total: <span className=\"text-[#cccccc] font-medium\">{assignments.length}</span> active assignments\n          </div>\n        </Card>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AssignmentList;","/**\n * Assignment Form - Create/Edit assignment with 12-week hour planning\n * RETROFIT: Changed from percentage to hours-per-week with 12-week timeline\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Person, Project, Department, PersonSkill, SkillTag } from '@/types/models';\nimport { assignmentsApi, peopleApi, projectsApi, departmentsApi, personSkillsApi, skillTagsApi } from '@/services/api';\nimport Layout from '@/components/layout/Layout';\nimport Button from '@/components/ui/Button';\nimport Card from '@/components/ui/Card';\nimport { useDebounce } from '@/hooks/useDebounce';\n\ninterface WeeklyHours {\n  [weekKey: string]: number;\n}\n\ninterface AssignmentFormData {\n  person: number | '';\n  project: number | '';\n  weeklyHours: WeeklyHours;\n}\n\n// Helper function to get the next 12 weeks starting from current week (Sunday)\nconst getNext12Weeks = (): string[] => {\n  const today = new Date();\n  const currentSunday = new Date(today);\n  currentSunday.setDate(today.getDate() - ((today.getDay()) % 7));\n  \n  const weeks: string[] = [];\n  for (let i = 0; i < 12; i++) {\n    const weekDate = new Date(currentSunday);\n    weekDate.setDate(currentSunday.getDate() + (i * 7));\n    weeks.push(weekDate.toISOString().split('T')[0]); // YYYY-MM-DD format\n  }\n  return weeks;\n};\n\n// Helper function to format week display\nconst formatWeekDisplay = (weekKey: string): string => {\n  const date = new Date(weekKey + 'T00:00:00');\n  const endDate = new Date(date);\n  endDate.setDate(date.getDate() + 6);\n  \n  const options: Intl.DateTimeFormatOptions = { month: 'short', day: 'numeric' };\n  return `${date.toLocaleDateString('en-US', options)} - ${endDate.toLocaleDateString('en-US', options)}`;\n};\n\n// Helper function to get department name for a person\nconst getDepartmentName = (person: Person, departments: Department[]): string => {\n  if (!person.department) return 'No Department';\n  const dept = departments.find(d => d.id === person.department);\n  return dept?.name || 'Unknown Department';\n};\n\n\nconst AssignmentForm: React.FC = () => {\n  const navigate = useNavigate();\n  const { id } = useParams<{ id: string }>();\n  const isEditing = !!id;\n\n  // Helper function to calculate skill match score\n  const calculateSkillMatchScore = (_person: Person, personSkills: PersonSkill[], requiredSkills: string[]): number => {\n    if (requiredSkills.length === 0) return 0;\n    \n    const personStrengths = personSkills\n      .filter(skill => skill.skillType === 'strength')\n      .map(skill => skill.skillTagName?.toLowerCase() || '');\n    \n    const matches = requiredSkills.filter(required => \n      personStrengths.some(strength => \n        strength.includes(required.toLowerCase()) || required.toLowerCase().includes(strength)\n      )\n    );\n    \n    return Math.round((matches.length / requiredSkills.length) * 100);\n  };\n\n  // Helper function to extract skills from input text - will be used when skills input is processed\n  const extractSkillsFromText = (text: string, availableSkills: SkillTag[]): string[] => {\n    if (!text.trim()) return [];\n    \n    const words = text.toLowerCase().split(/[,\\s]+/).filter(word => word.length > 2);\n    const foundSkills: string[] = [];\n    \n    // Match against existing skill names\n    availableSkills.forEach(skill => {\n      const skillName = skill.name.toLowerCase();\n      if (words.some(word => skillName.includes(word) || word.includes(skillName))) {\n        foundSkills.push(skill.name);\n      }\n    });\n    \n    // Also include explicit comma-separated values\n    text.split(',').forEach(skill => {\n      const trimmed = skill.trim();\n      if (trimmed.length > 2 && !foundSkills.some(existing => \n        existing.toLowerCase().includes(trimmed.toLowerCase())\n      )) {\n        foundSkills.push(trimmed);\n      }\n    });\n    \n    return foundSkills;\n  };\n\n  // Helper function to sort people by department and skill matching\n  const sortPeopleByDepartmentAndSkills = (\n    people: Person[], \n    selectedPersonId: number | string, \n    departments: Department[],\n    peopleSkills: Map<number, PersonSkill[]>,\n    requiredSkills: string[]\n  ): Person[] => {\n    if (!selectedPersonId && requiredSkills.length === 0) return people;\n    \n    const selectedPerson = people.find(p => p.id === Number(selectedPersonId));\n    const selectedDepartment = selectedPerson?.department;\n    \n    return [...people].sort((a, b) => {\n      // Calculate skill match scores\n      const aSkills = peopleSkills.get(a.id!) || [];\n      const bSkills = peopleSkills.get(b.id!) || [];\n      const aSkillScore = calculateSkillMatchScore(a, aSkills, requiredSkills);\n      const bSkillScore = calculateSkillMatchScore(b, bSkills, requiredSkills);\n      \n      // If we have required skills, prioritize skill matching\n      if (requiredSkills.length > 0) {\n        if (aSkillScore !== bSkillScore) {\n          return bSkillScore - aSkillScore;  // Higher skill score first\n        }\n      }\n      \n      // Same department as selected person comes next\n      if (selectedDepartment) {\n        const aDept = a.department;\n        const bDept = b.department;\n        \n        if (aDept === selectedDepartment && bDept !== selectedDepartment) return -1;\n        if (bDept === selectedDepartment && aDept !== selectedDepartment) return 1;\n      }\n      \n      // Then sort by department name\n      const aDeptName = getDepartmentName(a, departments);\n      const bDeptName = getDepartmentName(b, departments);\n      if (aDeptName !== bDeptName) return aDeptName.localeCompare(bDeptName);\n      \n      // Finally sort by person name\n      return a.name.localeCompare(b.name);\n    });\n  };\n\n  // Helper function to get skill mismatch warnings\n  const getSkillWarnings = (\n    person: Person, \n    personSkills: PersonSkill[], \n    requiredSkills: string[]\n  ): string[] => {\n    const warnings: string[] = [];\n    \n    if (requiredSkills.length === 0) return warnings;\n    \n    const personStrengths = personSkills\n      .filter(skill => skill.skillType === 'strength')\n      .map(skill => skill.skillTagName || '');\n    \n    const personDevelopment = personSkills\n      .filter(skill => skill.skillType === 'development')\n      .map(skill => skill.skillTagName || '');\n    \n    const matchedSkills = requiredSkills.filter(required => \n      personStrengths.some(strength => \n        strength.toLowerCase().includes(required.toLowerCase()) || required.toLowerCase().includes(strength.toLowerCase())\n      )\n    );\n    \n    const developmentMatches = requiredSkills.filter(required => \n      personDevelopment.some(dev => \n        dev.toLowerCase().includes(required.toLowerCase()) || required.toLowerCase().includes(dev.toLowerCase())\n      )\n    );\n    \n    const unmatchedSkills = requiredSkills.filter(required => \n      !matchedSkills.some(matched => matched.toLowerCase().includes(required.toLowerCase()))\n    );\n    \n    if (matchedSkills.length === 0 && requiredSkills.length > 0) {\n      warnings.push(`⚠️ No skill matches found for: ${requiredSkills.join(', ')}`);\n    }\n    \n    if (developmentMatches.length > 0) {\n      warnings.push(`📈 Development opportunity: ${person.name} is learning ${developmentMatches.join(', ')}`);\n    }\n    \n    if (unmatchedSkills.length > 0 && matchedSkills.length > 0) {\n      warnings.push(`⚠️ Missing skills: ${unmatchedSkills.join(', ')}`);\n    }\n    \n    return warnings;\n  };\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [departments, setDepartments] = useState<Department[]>([]);\n  const [peopleSkills, setPeopleSkills] = useState<Map<number, PersonSkill[]>>(new Map());\n  const [skillTags, setSkillTags] = useState<SkillTag[]>([]);\n  const [projectSkills, setProjectSkills] = useState<string[]>([]);  // Skills required for this project\n  const [availableWeeks] = useState<string[]>(getNext12Weeks());\n  const [formData, setFormData] = useState<AssignmentFormData>({\n    person: '',\n    project: '',\n    weeklyHours: {},\n  });\n  const [skillsInput, setSkillsInput] = useState<string>('');  // Skills required input field\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});\n  const [bulkHours, setBulkHours] = useState<number>(0);\n  const [personSearchText, setPersonSearchText] = useState('');\n  const [filteredPeople, setFilteredPeople] = useState<Person[]>([]);\n  const [showPersonDropdown, setShowPersonDropdown] = useState(false);\n  \n  // Debounced person search for better performance\n  const debouncedPersonSearch = useDebounce(personSearchText, 300);\n\n  useEffect(() => {\n    loadPeople();\n    loadProjects();\n    loadDepartments();\n    loadSkillsData();\n    if (isEditing && id) {\n      // Note: For simplicity in Chunk 3, we're not implementing edit mode\n      // This would require a get assignment endpoint\n    }\n  }, [isEditing, id]);\n\n  // Parse skills from input\n  useEffect(() => {\n    const skills = extractSkillsFromText(skillsInput, skillTags);\n    setProjectSkills(skills);\n  }, [skillsInput, skillTags, extractSkillsFromText]);\n\n  // Update filtered people when dependencies change\n  useEffect(() => {\n    if (people.length > 0) {\n      const sorted = sortPeopleByDepartmentAndSkills(people, formData.person, departments, peopleSkills, projectSkills);\n      setFilteredPeople(sorted);\n    }\n  }, [people, formData.person, departments, peopleSkills, projectSkills]);\n\n  // Sync search text with selected person\n  useEffect(() => {\n    if (formData.person) {\n      const selectedPerson = people.find(p => p.id === formData.person);\n      if (selectedPerson && personSearchText !== selectedPerson.name) {\n        setPersonSearchText(selectedPerson.name);\n      }\n    } else {\n      setPersonSearchText('');\n    }\n  }, [formData.person, people]);\n\n  const loadPeople = async () => {\n    try {\n      const response = await peopleApi.list();\n      const peopleList = response.results || [];\n      setPeople(peopleList);\n      setFilteredPeople(sortPeopleByDepartmentAndSkills(peopleList, formData.person, departments, peopleSkills, projectSkills));\n    } catch (err: any) {\n      setError('Failed to load people list');\n    }\n  };\n\n  const loadProjects = async () => {\n    try {\n      const projectsList = await projectsApi.listAll();\n      setProjects(projectsList);\n    } catch (err: any) {\n      setError('Failed to load projects list');\n    }\n  };\n\n  const loadDepartments = async () => {\n    try {\n      const response = await departmentsApi.list();\n      setDepartments(response.results || []);\n    } catch (err: any) {\n      console.error('Failed to load departments list:', err);\n      // Don't set error for departments as it's not critical for assignment creation\n    }\n  };\n\n  const loadSkillsData = async () => {\n    try {\n      // Load all skill tags for autocomplete\n      const skillTagsResponse = await skillTagsApi.list();\n      setSkillTags(skillTagsResponse.results || []);\n      \n      // Load people skills in batch\n      const skillsResponse = await personSkillsApi.list();\n      const skillsMap = new Map<number, PersonSkill[]>();\n      \n      // Group skills by person ID\n      (skillsResponse.results || []).forEach(skill => {\n        if (!skillsMap.has(skill.person)) {\n          skillsMap.set(skill.person, []);\n        }\n        skillsMap.get(skill.person)!.push(skill);\n      });\n      \n      setPeopleSkills(skillsMap);\n    } catch (err: any) {\n      console.error('Failed to load skills data:', err);\n      // Don't set error for skills as it's not critical for assignment creation\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {};\n\n    if (!formData.person) {\n      errors.person = 'Please select a person';\n    }\n\n    if (!formData.project) {\n      errors.project = 'Please select a project';\n    }\n\n    // Validate weekly hours\n    const totalHours = Object.values(formData.weeklyHours).reduce((sum, hours) => sum + hours, 0);\n    if (totalHours === 0) {\n      errors.weeklyHours = 'Please allocate at least some hours per week';\n    }\n\n    // Check if any week exceeds person capacity\n    if (formData.person) {\n      const selectedPerson = people.find(p => p.id === formData.person);\n      if (selectedPerson) {\n        for (const [week, hours] of Object.entries(formData.weeklyHours)) {\n          if (hours > (selectedPerson.weeklyCapacity || 0)) {\n            errors[`week_${week}`] = `Hours for week ${formatWeekDisplay(week)} exceed capacity (${selectedPerson.weeklyCapacity || 0}h)`;\n          }\n        }\n      }\n    }\n\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const assignmentData = {\n        person: Number(formData.person),\n        project: Number(formData.project),\n        weeklyHours: formData.weeklyHours,\n      };\n\n      if (isEditing && id) {\n        await assignmentsApi.update(parseInt(id), assignmentData);\n      } else {\n        await assignmentsApi.create(assignmentData);\n      }\n\n      navigate('/assignments');\n    } catch (err: any) {\n      setError(err.message || `Failed to ${isEditing ? 'update' : 'create'} assignment`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (field: keyof AssignmentFormData, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Clear validation error when user starts typing\n    if (validationErrors[field]) {\n      setValidationErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const handleWeeklyHoursChange = (weekKey: string, hours: number) => {\n    setFormData(prev => ({\n      ...prev,\n      weeklyHours: {\n        ...prev.weeklyHours,\n        [weekKey]: Math.max(0, hours)\n      }\n    }));\n\n    // Clear week-specific validation errors\n    const weekErrorKey = `week_${weekKey}`;\n    if (validationErrors[weekErrorKey]) {\n      setValidationErrors(prev => ({ ...prev, [weekErrorKey]: '', weeklyHours: '' }));\n    }\n  };\n\n  const handleBulkSet = () => {\n    if (bulkHours >= 0) {\n      const newWeeklyHours: WeeklyHours = {};\n      availableWeeks.forEach(week => {\n        newWeeklyHours[week] = bulkHours;\n      });\n      setFormData(prev => ({ ...prev, weeklyHours: newWeeklyHours }));\n    }\n  };\n\n  const getTotalHours = (): number => {\n    return Object.values(formData.weeklyHours).reduce((sum, hours) => sum + hours, 0);\n  };\n\n  const getSelectedPersonCapacity = (): number => {\n    if (!formData.person) return 0;\n    const selectedPerson = people.find(p => p.id === formData.person);\n    return selectedPerson?.weeklyCapacity || 0;\n  };\n\n  // Handle immediate input update (no delay for UI feedback)\n  const handlePersonSearchChange = (value: string) => {\n    setPersonSearchText(value);\n    setShowPersonDropdown(true);\n    \n    // Clear validation error\n    if (validationErrors.person) {\n      setValidationErrors(prev => ({ ...prev, person: '' }));\n    }\n  };\n\n  // Perform actual search with debounced value\n  const performPersonSearch = (searchText: string) => {\n    const sorted = sortPeopleByDepartmentAndSkills(people, formData.person, departments, peopleSkills, projectSkills);\n    if (searchText.trim() === '') {\n      setFilteredPeople(sorted);\n    } else {\n      const filtered = sorted.filter(person =>\n        person.name.toLowerCase().includes(searchText.toLowerCase())\n      );\n      setFilteredPeople(filtered);\n    }\n  };\n\n  // Effect to trigger search when debounced value changes\n  useEffect(() => {\n    if (people.length > 0) {\n      performPersonSearch(debouncedPersonSearch);\n    }\n  }, [debouncedPersonSearch, people, departments, peopleSkills, projectSkills, formData.person]);\n\n  const selectPerson = (person: Person) => {\n    setFormData(prev => ({ ...prev, person: person.id! }));\n    setPersonSearchText(person.name);\n    setShowPersonDropdown(false);\n    setFilteredPeople(sortPeopleByDepartmentAndSkills(people, person.id!, departments, peopleSkills, projectSkills));\n  };\n\n  return (\n    <Layout>\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <h1 className=\"text-2xl font-bold text-[#cccccc]\">\n            {isEditing ? 'Edit Assignment' : 'Create New Assignment'}\n          </h1>\n          <p className=\"text-[#969696] mt-1\">\n            Assign a team member to a project with weekly hour allocations for the next 12 weeks\n          </p>\n          {formData.person && (\n            <div className=\"mt-2 text-sm text-slate-300\">\n              Total hours: <span className=\"font-semibold text-blue-400\">{getTotalHours()}h</span>\n              {' • '}\n              Selected person capacity: <span className=\"font-semibold text-green-400\">{getSelectedPersonCapacity()}h/week</span>\n            </div>\n          )}\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <Card className=\"bg-red-500/20 border-red-500/50 p-4 mb-6\">\n            <div className=\"text-red-400\">{error}</div>\n          </Card>\n        )}\n\n        {/* Form */}\n        <Card className=\"bg-[#2d2d30] border-[#3e3e42] p-6\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            \n            {/* Person Selection - Smart Autocomplete */}\n            <div className=\"relative\">\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-2\">\n                Person <span className=\"text-red-400\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                value={personSearchText}\n                onChange={(e) => handlePersonSearchChange(e.target.value)}\n                onFocus={() => setShowPersonDropdown(true)}\n                onBlur={() => {\n                  // Delay hiding to allow for click selection\n                  setTimeout(() => setShowPersonDropdown(false), 200);\n                }}\n                placeholder=\"Type to search people...\"\n                className=\"w-full px-3 py-2 rounded-md border text-sm transition-colors bg-[#3e3e42] border-[#3e3e42] text-[#cccccc] placeholder-[#969696] focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none\"\n              />\n              {validationErrors.person && (\n                <p className=\"text-sm text-red-400 mt-1\">{validationErrors.person}</p>\n              )}\n              \n              {/* Dropdown */}\n              {showPersonDropdown && filteredPeople.length > 0 && (\n                <div className=\"absolute z-50 w-full mt-1 bg-[#2d2d30] border border-[#3e3e42] rounded-md shadow-lg max-h-60 overflow-auto\">\n                  {filteredPeople.map((person) => {\n                    const isSelectedDepartment = formData.person && \n                      people.find(p => p.id === formData.person)?.department === person.department;\n                    const departmentName = getDepartmentName(person, departments);\n                    const personSkillsList = peopleSkills.get(person.id!) || [];\n                    const skillScore = calculateSkillMatchScore(person, personSkillsList, projectSkills);\n                    \n                    let prefix = '';\n                    if (skillScore >= 80) prefix = '🎯 ';  // Perfect match\n                    else if (skillScore >= 50) prefix = '⭐ ';  // Good match\n                    else if (isSelectedDepartment) prefix = '🏢 ';  // Same department\n                    \n                    const skillInfo = skillScore > 0 ? ` (${skillScore}% skill match)` : '';\n                    \n                    return (\n                      <div\n                        key={person.id}\n                        className=\"px-3 py-2 cursor-pointer hover:bg-[#3e3e42] text-[#cccccc] text-sm\"\n                        onClick={() => selectPerson(person)}\n                      >\n                        <div className=\"font-medium\">\n                          {prefix}{person.name}\n                        </div>\n                        <div className=\"text-xs text-[#969696]\">\n                          {departmentName} • {person.weeklyCapacity}h capacity{skillInfo}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n              \n              {/* Skills-Enhanced Assignment Insights */}\n              {formData.person && (\n                <div className=\"mt-3 space-y-3\">\n                  {(() => {\n                    const selectedPerson = people.find(p => p.id === Number(formData.person));\n                    if (!selectedPerson) return null;\n                    \n                    const personDept = getDepartmentName(selectedPerson, departments);\n                    const sameDeptCount = people.filter(p => p.department === selectedPerson.department).length - 1;\n                    const personSkillsList = peopleSkills.get(selectedPerson.id!) || [];\n                    const skillScore = calculateSkillMatchScore(selectedPerson, personSkillsList, projectSkills);\n                    const skillWarnings = getSkillWarnings(selectedPerson, personSkillsList, projectSkills);\n                    \n                    return (\n                      <>\n                        {/* Basic Info Panel */}\n                        <div className=\"p-3 bg-[#3e3e42]/30 rounded border border-[#3e3e42]\">\n                          <div className=\"text-sm\">\n                            <div className=\"text-[#cccccc] font-medium mb-1\">\n                              📊 Assignment Insights\n                            </div>\n                            <div className=\"text-[#969696]\">\n                              <div>Department: <span className=\"text-[#cccccc]\">{personDept}</span></div>\n                              <div>Capacity: <span className=\"text-[#cccccc]\">{selectedPerson.weeklyCapacity || 0}h/week</span></div>\n                              {projectSkills.length > 0 && (\n                                <div className={`mt-1 ${\n                                  skillScore >= 80 ? 'text-emerald-400' : \n                                  skillScore >= 50 ? 'text-blue-400' : \n                                  skillScore > 0 ? 'text-amber-400' : 'text-red-400'\n                                }`}>\n                                  🎯 Skill match: {skillScore}%\n                                </div>\n                              )}\n                              {sameDeptCount > 0 && (\n                                <div className=\"mt-1 text-blue-400\">\n                                  💡 {sameDeptCount} other people available in {personDept}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        \n                        {/* Skills Warnings */}\n                        {skillWarnings.length > 0 && (\n                          <div className=\"p-3 bg-amber-500/20 border border-amber-500/30 rounded\">\n                            <div className=\"text-sm\">\n                              <div className=\"text-amber-400 font-medium mb-1\">\n                                ⚠️ Skills Assessment\n                              </div>\n                              <div className=\"space-y-1\">\n                                {skillWarnings.map((warning, idx) => (\n                                  <div key={idx} className=\"text-amber-300 text-xs\">\n                                    {warning}\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                        \n                        {/* Person's Skills Display */}\n                        {personSkillsList.length > 0 && (\n                          <div className=\"p-3 bg-blue-500/10 border border-blue-500/30 rounded\">\n                            <div className=\"text-sm\">\n                              <div className=\"text-blue-400 font-medium mb-2\">\n                                💪 {selectedPerson.name}'s Skills\n                              </div>\n                              <div className=\"flex flex-wrap gap-1\">\n                                {personSkillsList\n                                  .filter(skill => skill.skillType === 'strength')\n                                  .slice(0, 5)\n                                  .map(skill => (\n                                    <span key={skill.id} className=\"px-2 py-1 bg-emerald-500/20 text-emerald-400 rounded text-xs\">\n                                      {skill.skillTagName}\n                                    </span>\n                                  ))\n                                }\n                                {personSkillsList.filter(skill => skill.skillType === 'strength').length > 5 && (\n                                  <span className=\"px-2 py-1 bg-slate-500/20 text-slate-400 rounded text-xs\">\n                                    +{personSkillsList.filter(skill => skill.skillType === 'strength').length - 5} more\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </>\n                    );\n                  })()}\n                </div>\n              )}\n            </div>\n\n            {/* Skills Input Field */}\n            <div>\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-2\">\n                Required Skills <span className=\"text-[#969696]\">(optional)</span>\n              </label>\n              <input\n                type=\"text\"\n                value={skillsInput}\n                onChange={(e) => setSkillsInput(e.target.value)}\n                placeholder=\"e.g., React, Python, Project Management, Heat Calculations\"\n                className=\"w-full px-3 py-2 rounded-md border text-sm transition-colors bg-[#3e3e42] border-[#3e3e42] text-[#cccccc] focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none\"\n              />\n              <p className=\"text-[#969696] text-sm mt-1\">\n                Enter skills needed for this assignment (comma-separated). This helps match the best person for the job.\n              </p>\n              {projectSkills.length > 0 && (\n                <div className=\"mt-2 flex flex-wrap gap-1\">\n                  <span className=\"text-xs text-[#969696]\">Detected skills:</span>\n                  {projectSkills.map((skill, idx) => (\n                    <span key={idx} className=\"px-2 py-1 bg-blue-500/20 text-blue-400 rounded text-xs\">\n                      {skill}\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Project Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-2\">\n                Project <span className=\"text-red-400\">*</span>\n              </label>\n              <select\n                value={formData.project}\n                onChange={(e) => handleChange('project', e.target.value)}\n                className=\"w-full px-3 py-2 rounded-md border text-sm transition-colors bg-[#3e3e42] border-[#3e3e42] text-[#cccccc] focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none\"\n              >\n                <option value=\"\">Select a project...</option>\n                {projects.map((project) => (\n                  <option key={project.id} value={project.id}>\n                    {project.name} ({project.client})\n                  </option>\n                ))}\n              </select>\n              {validationErrors.project && (\n                <p className=\"text-sm text-red-400 mt-1\">{validationErrors.project}</p>\n              )}\n              <p className=\"text-[#969696] text-sm mt-1\">\n                Select the project for this assignment\n              </p>\n              \n              {/* Department Collaboration Insights */}\n              {formData.person && formData.project && (\n                <div className=\"mt-3 p-3 bg-blue-500/10 rounded border border-blue-500/30\">\n                  {(() => {\n                    const selectedPerson = people.find(p => p.id === Number(formData.person));\n                    const selectedProject = projects.find(p => p.id === Number(formData.project));\n                    if (!selectedPerson || !selectedProject) return null;\n                    \n                    const sameDeptPeople = people.filter(p => \n                      p.department === selectedPerson.department && p.id !== selectedPerson.id\n                    );\n                    \n                    return (\n                      <div className=\"text-sm\">\n                        <div className=\"text-blue-400 font-medium mb-1\">\n                          🤝 Collaboration Opportunity\n                        </div>\n                        <div className=\"text-[#969696]\">\n                          Assigning <span className=\"text-[#cccccc]\">{selectedPerson.name}</span> from{' '}\n                          <span className=\"text-[#cccccc]\">{getDepartmentName(selectedPerson, departments)}</span> to{' '}\n                          <span className=\"text-[#cccccc]\">{selectedProject.name}</span>\n                          {sameDeptPeople.length > 0 && (\n                            <div className=\"mt-1\">\n                              Consider also involving: {sameDeptPeople.slice(0, 3).map(p => p.name).join(', ')}\n                              {sameDeptPeople.length > 3 && ` and ${sameDeptPeople.length - 3} others`}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })()}\n                </div>\n              )}\n            </div>\n\n            {/* Bulk Hours Setter */}\n            <div className=\"bg-[#3e3e42]/50 p-4 rounded-lg border border-[#3e3e42]\">\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-2\">\n                Quick Set All Weeks\n              </label>\n              <div className=\"flex gap-2 items-center\">\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"0.5\"\n                  value={bulkHours}\n                  onChange={(e) => setBulkHours(Math.max(0, parseFloat(e.target.value) || 0))}\n                  className=\"px-3 py-1 rounded border text-sm bg-slate-600 border-slate-500 text-[#cccccc] focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none w-20\"\n                  placeholder=\"0\"\n                />\n                <span className=\"text-slate-300 text-sm\">hours per week</span>\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  onClick={handleBulkSet}\n                  className=\"text-blue-400 hover:text-blue-300 px-3 py-1\"\n                >\n                  Apply to All\n                </Button>\n              </div>\n              <p className=\"text-[#969696] text-xs mt-1\">\n                Set the same hours for all 12 weeks, then adjust individual weeks as needed\n              </p>\n            </div>\n\n            {/* Weekly Hours Grid */}\n            <div>\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-3\">\n                Weekly Hours Allocation <span className=\"text-red-400\">*</span>\n              </label>\n              \n              {validationErrors.weeklyHours && (\n                <p className=\"text-sm text-red-400 mb-3\">{validationErrors.weeklyHours}</p>\n              )}\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n                {availableWeeks.map((weekKey) => {\n                  const weekError = validationErrors[`week_${weekKey}`];\n                  const currentHours = formData.weeklyHours[weekKey] || 0;\n                  const capacity = getSelectedPersonCapacity();\n                  const isOverCapacity = capacity > 0 && currentHours > capacity;\n                  \n                  return (\n                    <div\n                      key={weekKey}\n                      className={`p-3 rounded-lg border ${\n                        isOverCapacity \n                          ? 'bg-red-500/20 border-red-500/50' \n                          : 'bg-[#3e3e42] border-[#3e3e42]'\n                      }`}\n                    >\n                      <div className=\"text-xs text-slate-300 mb-1\">\n                        {formatWeekDisplay(weekKey)}\n                      </div>\n                      <div className=\"flex items-center gap-1\">\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          step=\"0.5\"\n                          value={currentHours}\n                          onChange={(e) => handleWeeklyHoursChange(weekKey, parseFloat(e.target.value) || 0)}\n                          className={`w-full px-2 py-1 text-sm rounded border ${\n                            isOverCapacity\n                              ? 'bg-red-900/50 border-red-500 text-red-300'\n                              : 'bg-slate-600 border-slate-500 text-[#cccccc]'\n                          } focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none`}\n                          placeholder=\"0\"\n                        />\n                        <span className=\"text-xs text-[#969696]\">h</span>\n                      </div>\n                      {weekError && (\n                        <p className=\"text-xs text-red-400 mt-1\">{weekError}</p>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n              \n              <p className=\"text-[#969696] text-sm mt-2\">\n                Enter hours per week for each of the next 12 weeks. Red highlighting indicates hours exceed the person's capacity.\n              </p>\n            </div>\n\n            {/* Form Actions */}\n            <div className=\"flex justify-between pt-4\">\n              <Button\n                type=\"button\"\n                variant=\"ghost\"\n                onClick={() => navigate('/assignments')}\n                disabled={loading}\n              >\n                Cancel\n              </Button>\n              \n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                disabled={loading}\n              >\n                {loading ? 'Saving...' : (isEditing ? 'Update Assignment' : 'Create Assignment')}\n              </Button>\n            </div>\n\n          </form>\n        </Card>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AssignmentForm;","/**\r\n * Toast notification component - Windows 11 style floating notification\r\n * Appears in lower right corner with proper shadow and elevation\r\n * Auto-dismisses after specified time with manual dismiss option\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface ToastProps {\r\n  message: string;\r\n  type?: 'info' | 'success' | 'warning' | 'error';\r\n  duration?: number; // in milliseconds\r\n  onDismiss: () => void;\r\n}\r\n\r\nconst Toast: React.FC<ToastProps> = ({ \r\n  message, \r\n  type = 'info', \r\n  duration = 15000, \r\n  onDismiss \r\n}) => {\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onDismiss();\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [duration, onDismiss]);\r\n\r\n  const getTypeStyles = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return {\r\n          border: 'border-emerald-400/40',\r\n          background: 'bg-emerald-500/10',\r\n          text: 'text-emerald-300'\r\n        };\r\n      case 'warning':\r\n        return {\r\n          border: 'border-orange-400/40',\r\n          background: 'bg-orange-500/10', \r\n          text: 'text-orange-300'\r\n        };\r\n      case 'error':\r\n        return {\r\n          border: 'border-red-400/40',\r\n          background: 'bg-red-500/10',\r\n          text: 'text-red-300'\r\n        };\r\n      default:\r\n        return {\r\n          border: 'border-blue-400/40',\r\n          background: 'bg-blue-500/10',\r\n          text: 'text-blue-300'\r\n        };\r\n    }\r\n  };\r\n\r\n  const styles = getTypeStyles();\r\n\r\n  const toastElement = (\r\n    <div className=\"fixed bottom-6 right-6 z-[9999] animate-in slide-in-from-right-5 duration-500 ease-out\">\r\n      <div className={`\r\n        relative rounded-xl px-4 py-4 pr-10 min-w-[320px] max-w-[400px]\r\n        bg-[#2d2d30] backdrop-blur-md\r\n        border ${styles.border}\r\n        shadow-2xl shadow-black/30\r\n        ${styles.background}\r\n        transition-all duration-200 hover:shadow-3xl\r\n      `}>\r\n        {/* Content */}\r\n        <div className={`text-sm font-medium leading-5 ${styles.text}`}>\r\n          {message}\r\n        </div>\r\n        \r\n        {/* Close Button */}\r\n        <button\r\n          onClick={onDismiss}\r\n          className={`\r\n            absolute top-3 right-3 w-6 h-6 rounded-full \r\n            flex items-center justify-center\r\n            ${styles.text} opacity-60 hover:opacity-100 \r\n            hover:bg-white/10 transition-all duration-200\r\n            focus:outline-none focus:ring-2 focus:ring-white/20\r\n          `}\r\n          aria-label=\"Dismiss notification\"\r\n        >\r\n          <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\">\r\n            <path\r\n              d=\"M9 3L3 9M3 3L9 9\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"1.5\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Render the toast using a portal to bypass parent container constraints\r\n  return createPortal(toastElement, document.body);\r\n};\r\n\r\nexport default Toast;","/**\n * Assignment Grid - Real implementation of the spreadsheet-like assignment interface\n * Replaces the form-based AssignmentForm with a modern grid view\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Assignment, Person, Deliverable, Project } from '@/types/models';\nimport { assignmentsApi, peopleApi, deliverablesApi, projectsApi } from '@/services/api';\nimport Sidebar from '@/components/layout/Sidebar';\nimport Toast from '@/components/ui/Toast';\n\ninterface PersonWithAssignments extends Person {\n  assignments: Assignment[];\n  isExpanded: boolean;\n}\n\n// Get next 12 Monday dates\nconst getNext12Mondays = (): { date: string, display: string, fullDisplay: string }[] => {\n  const today = new Date();\n  const currentMonday = new Date(today);\n  const daysFromMonday = (today.getDay() + 6) % 7;\n  currentMonday.setDate(today.getDate() - daysFromMonday);\n  \n  const mondays: { date: string, display: string, fullDisplay: string }[] = [];\n  for (let i = 0; i < 12; i++) {\n    const monday = new Date(currentMonday);\n    monday.setDate(currentMonday.getDate() + (i * 7));\n    \n    const sunday = new Date(monday);\n    sunday.setDate(monday.getDate() + 6);\n    \n    mondays.push({\n      date: monday.toISOString().split('T')[0],\n      display: `${monday.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}`,\n      fullDisplay: `${monday.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })} - ${sunday.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}`\n    });\n  }\n  return mondays;\n};\n\nconst AssignmentGrid: React.FC = () => {\n  const [people, setPeople] = useState<PersonWithAssignments[]>([]);\n  const [deliverables, setDeliverables] = useState<Deliverable[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isAddingAssignment, setIsAddingAssignment] = useState<number | null>(null);\n  const [newProjectName, setNewProjectName] = useState<string>('');\n  const [selectedProject, setSelectedProject] = useState<Project | null>(null);\n  const [projectSearchResults, setProjectSearchResults] = useState<Project[]>([]);\n  const [showProjectDropdown, setShowProjectDropdown] = useState(false);\n  const [selectedDropdownIndex, setSelectedDropdownIndex] = useState(-1);\n  const [toast, setToast] = useState<{ message: string; type: 'info' | 'success' | 'warning' | 'error' } | null>(null);\n  const [editingCell, setEditingCell] = useState<{ personId: number, assignmentId: number, week: string } | null>(null);\n  const [editingValue, setEditingValue] = useState<string>('');\n  const [selectedCell, setSelectedCell] = useState<{ personId: number, assignmentId: number, week: string } | null>(null);\n  const [selectedCells, setSelectedCells] = useState<{ personId: number, assignmentId: number, week: string }[]>([]);\n  const [selectionStart, setSelectionStart] = useState<{ personId: number, assignmentId: number, week: string } | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const weeks = getNext12Mondays();\n\n  // Helper function to determine if a date falls within a given week\n  const isDateInWeek = (date: string, weekStart: string): boolean => {\n    const deliverableDate = new Date(date);\n    const weekStartDate = new Date(weekStart);\n    const weekEndDate = new Date(weekStart);\n    weekEndDate.setDate(weekStartDate.getDate() + 6); // Week ends on Sunday\n    \n    return deliverableDate >= weekStartDate && deliverableDate <= weekEndDate;\n  };\n\n  // Get deliverables for a specific project and week\n  const getDeliverablesForProjectWeek = (projectId: number, weekStart: string): Deliverable[] => {\n    return deliverables.filter(deliverable => \n      deliverable.project === projectId && \n      deliverable.date && \n      isDateInWeek(deliverable.date, weekStart)\n    );\n  };\n\n  // Smart project search - searches name, client, projectNumber with AND logic\n  const searchProjects = (searchTerm: string): Project[] => {\n    if (!searchTerm.trim()) {\n      return [];\n    }\n\n    const searchWords = searchTerm.trim().toLowerCase().split(/\\s+/);\n    \n    return projects.filter(project => {\n      const searchableText = [\n        project.name || '',\n        project.client || '',\n        project.projectNumber || ''\n      ].join(' ').toLowerCase();\n      \n      // All search words must be found in the combined searchable text\n      return searchWords.every(word => searchableText.includes(word));\n    }).slice(0, 8); // Limit results\n  };\n\n  // Handle project search input changes\n  const handleProjectSearch = (value: string) => {\n    setNewProjectName(value);\n    const results = searchProjects(value);\n    setProjectSearchResults(results);\n    setShowProjectDropdown(results.length > 0);\n    setSelectedProject(null);\n    setSelectedDropdownIndex(-1);\n  };\n\n  // Handle project selection from dropdown\n  const handleProjectSelect = (project: Project) => {\n    setSelectedProject(project);\n    setNewProjectName(project.name);\n    setShowProjectDropdown(false);\n    setProjectSearchResults([]);\n    setSelectedDropdownIndex(-1);\n  };\n\n  // Show toast notification\n  const showToast = (message: string, type: 'info' | 'success' | 'warning' | 'error' = 'info') => {\n    setToast({ message, type });\n  };\n\n\n  // Load data on mount\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  // Global keyboard navigation and direct typing\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // Only handle if we have a selected cell and we're not in edit mode\n      // Also ignore if user is currently adding an assignment (typing in project search)\n      if (!selectedCell || editingCell || isAddingAssignment !== null) return;\n\n      const { personId, assignmentId, week } = selectedCell;\n      const person = people.find(p => p.id === personId);\n      const assignment = person?.assignments.find(a => a.id === assignmentId);\n      \n      if (!person || !assignment) return;\n\n      const currentWeekIndex = weeks.findIndex(w => w.date === week);\n\n      // Handle direct number typing - should clear existing value and start with new number\n      if (/^[0-9.]$/.test(e.key)) {\n        e.preventDefault();\n        // Start editing with the typed character (replaces existing value)\n        setEditingCell({ personId, assignmentId, week });\n        setEditingValue(e.key); // Start fresh with just the typed character\n        return;\n      }\n\n      // Handle Enter key - only when NOT in edit mode (edit mode handles its own Enter)\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        // Move to next week (this should only happen when just selecting, not editing)\n        if (currentWeekIndex < weeks.length - 1) {\n          const nextCell = { personId, assignmentId, week: weeks[currentWeekIndex + 1].date };\n          setSelectedCell(nextCell);\n          setSelectionStart(nextCell);\n          setSelectedCells([]);\n        }\n        return;\n      }\n\n      // Handle Tab key - move to next cell\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        // Move to next week\n        if (currentWeekIndex < weeks.length - 1) {\n          const nextCell = { personId, assignmentId, week: weeks[currentWeekIndex + 1].date };\n          setSelectedCell(nextCell);\n          setSelectionStart(nextCell);\n          setSelectedCells([]);\n        }\n        return;\n      }\n\n      // Handle arrow key navigation\n      let newCell = null;\n      switch (e.key) {\n        case 'ArrowLeft':\n          if (currentWeekIndex > 0) {\n            newCell = { personId, assignmentId, week: weeks[currentWeekIndex - 1].date };\n          }\n          break;\n        case 'ArrowRight':\n          if (currentWeekIndex < weeks.length - 1) {\n            newCell = { personId, assignmentId, week: weeks[currentWeekIndex + 1].date };\n          }\n          break;\n        // Add more navigation logic for up/down arrows if needed\n      }\n\n      if (newCell) {\n        e.preventDefault();\n        \n        if (e.shiftKey && selectionStart) {\n          // Extend selection\n          const startWeekIndex = weeks.findIndex(w => w.date === selectionStart.week);\n          const endWeekIndex = weeks.findIndex(w => w.date === newCell.week);\n          const [minIndex, maxIndex] = [Math.min(startWeekIndex, endWeekIndex), Math.max(startWeekIndex, endWeekIndex)];\n          \n          const newSelectedCells = [];\n          for (let i = minIndex; i <= maxIndex; i++) {\n            newSelectedCells.push({\n              personId: selectionStart.personId,\n              assignmentId: selectionStart.assignmentId,\n              week: weeks[i].date\n            });\n          }\n          setSelectedCells(newSelectedCells);\n        } else {\n          // Single selection\n          setSelectedCells([]);\n          setSelectionStart(newCell);\n        }\n        \n        setSelectedCell(newCell);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [selectedCell, editingCell, people, weeks, selectionStart]);\n\n  // Global mouse up handler for drag selection\n  useEffect(() => {\n    const handleMouseUp = () => {\n      if (isDragging) {\n        setIsDragging(false);\n      }\n    };\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => window.removeEventListener('mouseup', handleMouseUp);\n  }, [isDragging]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const [peopleData, assignmentsData, deliverablesData, projectsData] = await Promise.all([\n        peopleApi.listAll(),\n        assignmentsApi.listAll(),\n        deliverablesApi.listAll(),\n        projectsApi.listAll()\n      ]);\n\n      // Store deliverables and projects in state\n      setDeliverables(deliverablesData);\n      setProjects(projectsData);\n      \n      const peopleWithAssignments: PersonWithAssignments[] = peopleData.map(person => ({\n        ...person,\n        assignments: assignmentsData.filter(assignment => assignment.person === person.id),\n        isExpanded: true\n      }));\n      \n      setPeople(peopleWithAssignments);\n      \n    } catch (err: any) {\n      setError('Failed to load assignment data: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Toggle person expansion\n  const togglePersonExpanded = (personId: number) => {\n    setPeople(prev => prev.map(person => \n      person.id === personId \n        ? { ...person, isExpanded: !person.isExpanded }\n        : person\n    ));\n  };\n\n  // Get person's total hours for a specific week\n  const getPersonTotalHours = (person: PersonWithAssignments, week: string) => {\n    return person.assignments.reduce((total, assignment) => \n      total + (assignment.weeklyHours[week] || 0), 0\n    );\n  };\n\n  // Add new assignment\n  const addAssignment = async (personId: number, project: Project) => {\n    try {\n      const newAssignment = await assignmentsApi.create({\n        person: personId,\n        project: project.id!,\n        weeklyHours: {}\n      });\n      \n      setPeople(prev => prev.map(person => \n        person.id === personId \n          ? { ...person, assignments: [...person.assignments, newAssignment] }\n          : person\n      ));\n\n      // Show notification about assignment creation and potential overallocation risk\n      const person = people.find(p => p.id === personId);\n      if (person) {\n        const projectCount = person.assignments.length + 1; // Include the new assignment\n        \n        if (projectCount >= 3) {\n          showToast(\n            `⚠️ ${person.name} is now assigned to ${projectCount} projects. Monitor workload to avoid overallocation.`,\n            'warning'\n          );\n        } else {\n          showToast(\n            `✓ ${person.name} successfully assigned to ${project.name}`,\n            'success'\n          );\n        }\n      }\n      \n      setIsAddingAssignment(null);\n      setNewProjectName('');\n      setSelectedProject(null);\n      setProjectSearchResults([]);\n      setShowProjectDropdown(false);\n      \n    } catch (err: any) {\n      console.error('Failed to create assignment:', err);\n      alert('Failed to create assignment: ' + err.message);\n    }\n  };\n\n  // Remove assignment\n  const removeAssignment = async (assignmentId: number, personId: number) => {\n    if (!confirm('Are you sure you want to remove this assignment?')) return;\n    \n    try {\n      await assignmentsApi.delete(assignmentId);\n      \n      setPeople(prev => prev.map(person => \n        person.id === personId \n          ? { ...person, assignments: person.assignments.filter(a => a.id !== assignmentId) }\n          : person\n      ));\n      \n    } catch (err: any) {\n      console.error('Failed to delete assignment:', err);\n      alert('Failed to delete assignment: ' + err.message);\n    }\n  };\n\n  // Update assignment hours\n  const updateAssignmentHours = async (personId: number, assignmentId: number, week: string, hours: number) => {\n    try {\n      // Find the assignment to update\n      const person = people.find(p => p.id === personId);\n      const assignment = person?.assignments.find(a => a.id === assignmentId);\n      \n      if (!assignment) return;\n      \n      // Update the weekly hours\n      const updatedWeeklyHours = {\n        ...assignment.weeklyHours,\n        [week]: hours\n      };\n      \n      // Call API to update\n      await assignmentsApi.update(assignmentId, {\n        weeklyHours: updatedWeeklyHours\n      });\n      \n      // Update local state\n      setPeople(prev => prev.map(person => \n        person.id === personId \n          ? {\n              ...person,\n              assignments: person.assignments.map(a =>\n                a.id === assignmentId \n                  ? { ...a, weeklyHours: updatedWeeklyHours }\n                  : a\n              )\n            }\n          : person\n      ));\n      \n    } catch (err: any) {\n      console.error('Failed to update assignment hours:', err);\n      alert('Failed to update hours: ' + err.message);\n    }\n  };\n\n  // Helper function to check if a cell is in the selected cells array\n  const isCellSelected = (personId: number, assignmentId: number, week: string) => {\n    return selectedCells.some(cell => \n      cell.personId === personId && \n      cell.assignmentId === assignmentId && \n      cell.week === week\n    );\n  };\n\n  // Update multiple cells at once (for bulk editing)\n  const updateMultipleCells = async (cells: { personId: number, assignmentId: number, week: string }[], hours: number) => {\n    try {\n      // Group cells by assignment to minimize API calls\n      const assignmentUpdates = new Map();\n      \n      cells.forEach(cell => {\n        const key = `${cell.personId}-${cell.assignmentId}`;\n        if (!assignmentUpdates.has(key)) {\n          const person = people.find(p => p.id === cell.personId);\n          const assignment = person?.assignments.find(a => a.id === cell.assignmentId);\n          if (assignment) {\n            assignmentUpdates.set(key, {\n              personId: cell.personId,\n              assignmentId: cell.assignmentId,\n              weeklyHours: { ...assignment.weeklyHours }\n            });\n          }\n        }\n        \n        const update = assignmentUpdates.get(key);\n        if (update) {\n          update.weeklyHours[cell.week] = hours;\n        }\n      });\n\n      // Execute all updates\n      const promises = Array.from(assignmentUpdates.values()).map(async (update) => {\n        await assignmentsApi.update(update.assignmentId, {\n          weeklyHours: update.weeklyHours\n        });\n        return update;\n      });\n\n      const completedUpdates = await Promise.all(promises);\n\n      // Update local state\n      setPeople(prev => prev.map(person => {\n        const personUpdates = completedUpdates.filter(u => u.personId === person.id);\n        if (personUpdates.length === 0) return person;\n\n        return {\n          ...person,\n          assignments: person.assignments.map(assignment => {\n            const assignmentUpdate = personUpdates.find(u => u.assignmentId === assignment.id);\n            return assignmentUpdate \n              ? { ...assignment, weeklyHours: assignmentUpdate.weeklyHours }\n              : assignment;\n          })\n        };\n      }));\n\n    } catch (err: any) {\n      console.error('Failed to update multiple cells:', err);\n      alert('Failed to update multiple cells: ' + err.message);\n    }\n  };\n\n  // Get utilization badge styling\n  const getUtilizationBadgeStyle = (hours: number, capacity: number) => {\n    if (hours === 0) return 'bg-[#3e3e42] text-[#969696]';\n    const percentage = (hours / capacity) * 100;\n    if (percentage <= 70) return 'bg-emerald-500/20 text-emerald-300 border border-emerald-500/30';\n    if (percentage <= 85) return 'bg-blue-500/20 text-blue-300 border border-blue-500/30';\n    if (percentage <= 100) return 'bg-amber-500/20 text-amber-300 border border-amber-500/30';\n    return 'bg-red-500/20 text-red-300 border border-red-500/30';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#1e1e1e] flex\">\n        <Sidebar />\n        <div className=\"flex-1 flex flex-col min-w-0\">\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"text-[#969696]\">Loading assignments...</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-[#1e1e1e] flex\">\n        <Sidebar />\n        <div className=\"flex-1 flex flex-col min-w-0\">\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"text-red-400\">{error}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#1e1e1e] flex\">\n      <Sidebar />\n      <div className=\"flex-1 flex flex-col min-w-0\">\n        \n        {/* Sticky Header Section */}\n        <div className=\"sticky top-0 bg-[#1e1e1e] border-b border-[#3e3e42] z-30 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-[#cccccc]\">Assignment Grid</h1>\n              <p className=\"text-[#969696] text-sm\">Manage team workload allocation across 12 weeks</p>\n            </div>\n            <div className=\"text-xs text-[#969696]\">\n              {people.length} people • {people.reduce((total, p) => total + p.assignments.length, 0)} assignments\n            </div>\n          </div>\n        </div>\n\n        {/* Sticky Week Header - positioned directly below title */}\n        <div className=\"sticky top-[88px] bg-[#2d2d30] border-b border-[#3e3e42] z-20 overflow-x-auto\">\n          <div className=\"min-w-[1400px]\">\n            <div className=\"grid grid-cols-[280px_40px_repeat(12,70px)] gap-px p-2\">\n              <div className=\"font-medium text-[#cccccc] text-sm px-2 py-1\">Team Member</div>\n              <div className=\"text-center text-xs text-[#969696] px-1\">+/-</div>\n              {weeks.map((week, index) => (\n                <div key={week.date} className=\"text-center px-1\">\n                  <div className=\"text-xs font-medium text-[#cccccc]\">{week.display}</div>\n                  <div className=\"text-[10px] text-[#757575]\">W{index + 1}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Full Width Grid Container */}\n        <div className=\"flex-1 overflow-x-auto bg-[#1e1e1e]\">\n          <div className=\"min-w-[1400px]\">\n\n            {/* Data Rows */}\n            <div>\n              {people.map((person) => (\n                <div key={person.id} className=\"border-b border-[#3e3e42] last:border-b-0\">\n                  \n                  {/* Person Row */}\n                  <div className=\"grid grid-cols-[280px_40px_repeat(12,70px)] gap-px p-2 hover:bg-[#2d2d30]/50 transition-colors\">\n                    \n                    {/* Person Info - Entire area clickable */}\n                    <button\n                      onClick={() => togglePersonExpanded(person.id!)}\n                      className=\"flex items-center gap-2 pl-3 pr-2 py-1 w-full text-left hover:bg-[#3e3e42]/50 transition-all duration-200 rounded-sm\"\n                    >\n                      <div className=\"flex-shrink-0 w-5 h-5 flex items-center justify-center text-[#969696]\">\n                        <svg \n                          width=\"12\" \n                          height=\"12\" \n                          viewBox=\"0 0 12 12\" \n                          className={`transition-transform duration-200 ${person.isExpanded ? 'rotate-90' : 'rotate-0'}`}\n                        >\n                          <path \n                            d=\"M4 2 L8 6 L4 10\" \n                            fill=\"none\" \n                            stroke=\"currentColor\" \n                            strokeWidth=\"1.5\" \n                            strokeLinecap=\"round\" \n                            strokeLinejoin=\"round\"\n                          />\n                        </svg>\n                      </div>\n                      <div className=\"min-w-0 flex-1\">\n                        <div className=\"font-medium text-[#cccccc] text-sm truncate\">{person.name}</div>\n                        <div className=\"text-xs text-[#969696]\">{person.role} • {person.weeklyCapacity}h/wk</div>\n                      </div>\n                    </button>\n\n                    {/* Add Assignment Button */}\n                    <div className=\"flex items-center justify-center\">\n                      <button \n                        className=\"w-7 h-7 rounded text-white hover:text-[#969696] hover:bg-[#3e3e42] transition-colors text-center text-sm font-medium leading-none font-mono\"\n                        style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                        title=\"Add new assignment\"\n                        onClick={() => {\n                          setIsAddingAssignment(person.id!);\n                          setNewProjectName('');\n                        }}\n                      >\n                        +\n                      </button>\n                    </div>\n\n                    {/* Person's Weekly Totals */}\n                    {weeks.map((week) => {\n                      const totalHours = getPersonTotalHours(person, week.date);\n                      \n                      return (\n                        <div key={week.date} className=\"flex items-center justify-center px-1\">\n                          <div className={`px-2 py-1 rounded-full text-xs font-medium min-w-[40px] text-center ${getUtilizationBadgeStyle(totalHours, person.weeklyCapacity!)}`}>\n                            {totalHours > 0 ? `${totalHours}h` : '—'}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n\n                  {/* Assignment Rows */}\n                  {person.isExpanded && person.assignments.map((assignment) => (\n                    <div key={assignment.id} className=\"grid grid-cols-[280px_40px_repeat(12,70px)] gap-px p-1 bg-[#252526] hover:bg-[#2d2d30] transition-colors\">\n                      \n                      {/* Assignment Name */}\n                      <div className=\"flex items-center py-1 pl-[60px] pr-2\">\n                        <div className=\"min-w-0 flex-1\">\n                          <div className=\"text-[#cccccc] text-xs truncate\">{assignment.projectDisplayName}</div>\n                        </div>\n                      </div>\n\n                      {/* Remove Assignment Button */}\n                      <div className=\"flex items-center justify-center\">\n                        <button \n                          className=\"w-7 h-7 rounded text-red-500 hover:text-red-400 hover:bg-red-500/10 transition-colors text-center text-sm font-medium leading-none font-mono\"\n                          style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                          title=\"Remove assignment\"\n                          onClick={() => removeAssignment(assignment.id!, person.id!)}\n                        >\n                          ×\n                        </button>\n                      </div>\n\n                      {/* Hour Cells - Editable with Multi-Select */}\n                      {weeks.map((week) => {\n                        const hours = assignment.weeklyHours?.[week.date] || 0;\n                        const cellKey = { personId: person.id!, assignmentId: assignment.id!, week: week.date };\n                        const isEditing = editingCell?.personId === person.id && \n                                         editingCell?.assignmentId === assignment.id && \n                                         editingCell?.week === week.date;\n                        const isSelected = selectedCell?.personId === person.id && \n                                          selectedCell?.assignmentId === assignment.id && \n                                          selectedCell?.week === week.date;\n                        const isMultiSelected = isCellSelected(person.id!, assignment.id!, week.date);\n                        \n                        // Check for deliverables in this week\n                        const weekDeliverables = assignment.project ? getDeliverablesForProjectWeek(assignment.project, week.date) : [];\n                        const hasDeliverables = weekDeliverables.length > 0;\n\n                        return (\n                          <div key={week.date} className=\"flex items-center justify-center px-1\">\n                            {isEditing ? (\n                              <input\n                                type=\"number\"\n                                min=\"0\"\n                                step=\"0.5\"\n                                value={editingValue}\n                                onChange={(e) => setEditingValue(e.target.value)}\n                                className=\"w-12 h-6 text-xs rounded border bg-[#3e3e42] border-[#3e3e42] text-[#cccccc] text-center focus:border-[#007acc] focus:ring-1 focus:ring-[#007acc] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\n                                onBlur={() => {\n                                  const numValue = parseFloat(editingValue) || 0;\n                                  if (selectedCells.length > 0) {\n                                    updateMultipleCells(selectedCells, numValue);\n                                    setSelectedCells([]);\n                                  } else {\n                                    updateAssignmentHours(person.id!, assignment.id!, week.date, numValue);\n                                  }\n                                  setEditingCell(null);\n                                }}\n                                onKeyDown={(e) => {\n                                  if (e.key === 'Enter' || e.key === 'Tab') {\n                                    e.preventDefault();\n                                    e.stopPropagation(); // Prevent global handler from also running\n                                    const numValue = parseFloat(editingValue) || 0;\n                                    if (selectedCells.length > 0) {\n                                      updateMultipleCells(selectedCells, numValue);\n                                      setSelectedCells([]);\n                                    } else {\n                                      updateAssignmentHours(person.id!, assignment.id!, week.date, numValue);\n                                    }\n                                    setEditingCell(null);\n                                    \n                                    // Move to next cell\n                                    const currentWeekIndex = weeks.findIndex(w => w.date === week.date);\n                                    if (currentWeekIndex < weeks.length - 1) {\n                                      const nextCell = { \n                                        personId: person.id!, \n                                        assignmentId: assignment.id!, \n                                        week: weeks[currentWeekIndex + 1].date \n                                      };\n                                      setSelectedCell(nextCell);\n                                      setSelectionStart(nextCell);\n                                    }\n                                  } else if (e.key === 'Escape') {\n                                    setEditingCell(null);\n                                  }\n                                }}\n                                autoFocus\n                              />\n                            ) : (\n                              <div \n                                className={`w-12 h-6 text-xs rounded flex items-center justify-center cursor-pointer transition-colors ${\n                                  isMultiSelected \n                                    ? 'ring-2 ring-purple-400 bg-purple-500/30 text-[#cccccc]'\n                                    : isSelected \n                                      ? 'ring-2 ring-blue-400 bg-blue-500/20 text-[#cccccc]'\n                                      : hasDeliverables \n                                        ? 'text-[#cccccc] hover:bg-[#3e3e42] ring-1 ring-orange-400/80 bg-orange-500/15'\n                                        : 'text-[#cccccc] hover:bg-[#3e3e42]'\n                                }`}\n                                title={hasDeliverables ? weekDeliverables.map(d => {\n                                  const parts = [];\n                                  if (d.percentage !== null && d.percentage !== undefined) parts.push(`${d.percentage}%`);\n                                  if (d.description) parts.push(d.description);\n                                  return parts.join(' ');\n                                }).join(', ') : undefined}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  // Single click should only select the cell, never start editing\n                                  setSelectedCell(cellKey);\n                                  setSelectionStart(cellKey);\n                                  setSelectedCells([]);\n                                }}\n                                onMouseDown={(e) => {\n                                  // Always allow drag selection to start from any cell\n                                  e.preventDefault();\n                                  setSelectedCell(cellKey);\n                                  setSelectionStart(cellKey);\n                                  setIsDragging(true);\n                                  setSelectedCells([]);\n                                }}\n                                onMouseEnter={() => {\n                                  if (isDragging && selectionStart) {\n                                    // Create selection from start to current cell (horizontal only for now)\n                                    const startWeekIndex = weeks.findIndex(w => w.date === selectionStart.week);\n                                    const currentWeekIndex = weeks.findIndex(w => w.date === week.date);\n                                    \n                                    if (selectionStart.personId === person.id && selectionStart.assignmentId === assignment.id) {\n                                      const [minIndex, maxIndex] = [Math.min(startWeekIndex, currentWeekIndex), Math.max(startWeekIndex, currentWeekIndex)];\n                                      const newSelectedCells = [];\n                                      for (let i = minIndex; i <= maxIndex; i++) {\n                                        newSelectedCells.push({\n                                          personId: person.id!,\n                                          assignmentId: assignment.id!,\n                                          week: weeks[i].date\n                                        });\n                                      }\n                                      setSelectedCells(newSelectedCells);\n                                    }\n                                  }\n                                }}\n                                onMouseUp={() => {\n                                  setIsDragging(false);\n                                }}\n                              >\n                                {hours > 0 ? hours : '—'}\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  ))}\n\n                  {/* Add Assignment Form */}\n                  {person.isExpanded && isAddingAssignment === person.id && (\n                    <div className=\"grid grid-cols-[280px_40px_repeat(12,70px)] gap-px p-1 bg-[#2d2d30] border border-blue-500/30\">\n                      <div className=\"flex items-center py-1 pl-[60px] pr-2 relative\">\n                        <input\n                          type=\"text\"\n                          value={newProjectName}\n                          onChange={(e) => handleProjectSearch(e.target.value)}\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter') {\n                              e.preventDefault();\n                              if (selectedDropdownIndex >= 0 && selectedDropdownIndex < projectSearchResults.length) {\n                                // Select the highlighted project from dropdown\n                                const selectedProject = projectSearchResults[selectedDropdownIndex];\n                                handleProjectSelect(selectedProject);\n                                addAssignment(person.id!, selectedProject);\n                              } else if (selectedProject) {\n                                // Use already selected project\n                                addAssignment(person.id!, selectedProject);\n                              }\n                            } else if (e.key === 'Escape') {\n                              setIsAddingAssignment(null);\n                              setNewProjectName('');\n                              setSelectedProject(null);\n                              setShowProjectDropdown(false);\n                              setSelectedDropdownIndex(-1);\n                            } else if (e.key === 'ArrowDown') {\n                              e.preventDefault();\n                              if (projectSearchResults.length > 0) {\n                                setShowProjectDropdown(true);\n                                setSelectedDropdownIndex(prev => \n                                  prev < projectSearchResults.length - 1 ? prev + 1 : prev\n                                );\n                              }\n                            } else if (e.key === 'ArrowUp') {\n                              e.preventDefault();\n                              if (showProjectDropdown && projectSearchResults.length > 0) {\n                                setSelectedDropdownIndex(prev => prev > -1 ? prev - 1 : -1);\n                              }\n                            }\n                          }}\n                          placeholder=\"Search projects (name, client, number)...\"\n                          className=\"w-full px-2 py-1 text-xs bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] placeholder-[#969696] focus:border-[#007acc] focus:outline-none\"\n                          autoFocus\n                        />\n                        \n                        {/* Project Search Dropdown */}\n                        {showProjectDropdown && projectSearchResults.length > 0 && (\n                          <div className=\"absolute top-full left-0 right-0 mt-1 bg-[#2d2d30] border border-[#3e3e42] rounded shadow-lg z-50 max-h-48 overflow-y-auto\">\n                            {projectSearchResults.map((project, index) => (\n                              <button\n                                key={project.id}\n                                onClick={() => handleProjectSelect(project)}\n                                className={`w-full text-left px-2 py-1 text-xs transition-colors text-[#cccccc] border-b border-[#3e3e42] last:border-b-0 ${\n                                  selectedDropdownIndex === index \n                                    ? 'bg-[#007acc]/30 border-[#007acc]' \n                                    : 'hover:bg-[#3e3e42]'\n                                }`}\n                              >\n                                <div className=\"font-medium\">{project.name}</div>\n                                <div className=\"text-[#969696]\">\n                                  {[project.client, project.projectNumber].filter(Boolean).join(' • ')}\n                                </div>\n                              </button>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"flex items-center justify-center gap-1\">\n                        <button \n                          className=\"w-5 h-5 rounded bg-green-600 hover:bg-green-500 text-white text-xs font-medium transition-colors flex items-center justify-center\"\n                          title=\"Save assignment\"\n                          onClick={() => selectedProject && addAssignment(person.id!, selectedProject)}\n                          disabled={!selectedProject}\n                        >\n                          ✓\n                        </button>\n                        <button \n                          className=\"w-5 h-5 rounded bg-[#3e3e42] hover:bg-[#4e4e52] text-white text-xs font-medium transition-colors flex items-center justify-center\"\n                          title=\"Cancel\"\n                          onClick={() => {\n                            setIsAddingAssignment(null);\n                            setNewProjectName('');\n                            setSelectedProject(null);\n                            setProjectSearchResults([]);\n                            setShowProjectDropdown(false);\n                          }}\n                        >\n                          ✕\n                        </button>\n                      </div>\n                      {weeks.map((week) => (\n                        <div key={week.date} className=\"flex items-center justify-center\">\n                          <div className=\"w-12 h-6 flex items-center justify-center text-[#757575] text-xs\">—</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* Empty State */}\n                  {person.isExpanded && person.assignments.length === 0 && (\n                    <div className=\"grid grid-cols-[280px_40px_repeat(12,70px)] gap-px p-1 bg-[#252526]\">\n                      <div className=\"flex items-center py-1 pl-[60px] pr-2\">\n                        <div className=\"text-[#757575] text-xs italic\">\n                          No assignments\n                        </div>\n                      </div>\n                      <div></div>\n                      {weeks.map((week) => (\n                        <div key={week.date} className=\"flex items-center justify-center\">\n                          <div className=\"w-12 h-6 flex items-center justify-center text-[#757575] text-xs\">—</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Status Bar */}\n        <div className=\"flex justify-between items-center text-xs text-[#969696] px-1\">\n          <div className=\"flex gap-6\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 rounded-full bg-emerald-500\"></div>\n              <span>Available (≤70%)</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 rounded-full bg-blue-500\"></div>\n              <span>Busy (71-85%)</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 rounded-full bg-amber-500\"></div>\n              <span>Full (86-100%)</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 rounded-full bg-red-500\"></div>\n              <span>Overallocated (&gt;100%)</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Toast Notifications */}\n      {toast && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onDismiss={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AssignmentGrid;"],"names":["AssignmentList","navigate","useNavigate","assignments","setAssignments","useState","loading","setLoading","error","setError","useEffect","loadAssignments","response","assignmentsApi","err","handleDelete","id","projectDisplayName","personName","jsx","Layout","Card","jsxs","Button","assignment","UtilizationBadge","getNext12Weeks","today","currentSunday","weeks","i","weekDate","formatWeekDisplay","weekKey","date","endDate","options","getDepartmentName","person","departments","d","AssignmentForm","useParams","isEditing","calculateSkillMatchScore","_person","personSkills","requiredSkills","personStrengths","skill","matches","strength","required","extractSkillsFromText","text","availableSkills","words","word","foundSkills","skillName","trimmed","existing","sortPeopleByDepartmentAndSkills","people","selectedPersonId","peopleSkills","selectedDepartment","p","a","b","aSkills","bSkills","aSkillScore","bSkillScore","aDept","bDept","aDeptName","bDeptName","getSkillWarnings","warnings","personDevelopment","matchedSkills","developmentMatches","dev","unmatchedSkills","matched","setPeople","projects","setProjects","setDepartments","setPeopleSkills","skillTags","setSkillTags","projectSkills","setProjectSkills","availableWeeks","formData","setFormData","skillsInput","setSkillsInput","validationErrors","setValidationErrors","bulkHours","setBulkHours","personSearchText","setPersonSearchText","filteredPeople","setFilteredPeople","showPersonDropdown","setShowPersonDropdown","debouncedPersonSearch","useDebounce","loadPeople","loadProjects","loadDepartments","loadSkillsData","skills","sorted","selectedPerson","peopleList","peopleApi","projectsList","projectsApi","departmentsApi","skillTagsResponse","skillTagsApi","skillsResponse","personSkillsApi","skillsMap","validateForm","errors","sum","hours","week","handleSubmit","e","assignmentData","handleChange","field","value","prev","handleWeeklyHoursChange","weekErrorKey","handleBulkSet","newWeeklyHours","getTotalHours","getSelectedPersonCapacity","handlePersonSearchChange","performPersonSearch","searchText","filtered","selectPerson","isSelectedDepartment","departmentName","personSkillsList","skillScore","prefix","skillInfo","personDept","sameDeptCount","skillWarnings","Fragment","warning","idx","project","selectedProject","sameDeptPeople","weekError","currentHours","capacity","isOverCapacity","Toast","message","type","duration","onDismiss","timer","styles","toastElement","createPortal","getNext12Mondays","currentMonday","daysFromMonday","mondays","monday","sunday","AssignmentGrid","deliverables","setDeliverables","isAddingAssignment","setIsAddingAssignment","newProjectName","setNewProjectName","setSelectedProject","projectSearchResults","setProjectSearchResults","showProjectDropdown","setShowProjectDropdown","selectedDropdownIndex","setSelectedDropdownIndex","toast","setToast","editingCell","setEditingCell","editingValue","setEditingValue","selectedCell","setSelectedCell","selectedCells","setSelectedCells","selectionStart","setSelectionStart","isDragging","setIsDragging","isDateInWeek","weekStart","deliverableDate","weekStartDate","weekEndDate","getDeliverablesForProjectWeek","projectId","deliverable","searchProjects","searchTerm","searchWords","searchableText","handleProjectSearch","results","handleProjectSelect","showToast","loadData","handleKeyDown","personId","assignmentId","currentWeekIndex","w","nextCell","newCell","startWeekIndex","endWeekIndex","minIndex","maxIndex","newSelectedCells","handleMouseUp","peopleData","assignmentsData","deliverablesData","projectsData","deliverablesApi","peopleWithAssignments","togglePersonExpanded","getPersonTotalHours","total","addAssignment","newAssignment","projectCount","removeAssignment","updateAssignmentHours","updatedWeeklyHours","isCellSelected","cell","updateMultipleCells","cells","assignmentUpdates","key","update","promises","completedUpdates","personUpdates","u","assignmentUpdate","getUtilizationBadgeStyle","percentage","Sidebar","index","totalHours","cellKey","isSelected","isMultiSelected","weekDeliverables","hasDeliverables","numValue","parts"],"mappings":"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"}