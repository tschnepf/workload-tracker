{"version":3,"file":"index.tWjhzuQb.js","sources":["../../src/components/skills/SkillsAutocomplete.tsx","../../src/pages/People/PeopleList.tsx","../../src/pages/People/PersonForm.tsx"],"sourcesContent":["/**\r\n * Skills Autocomplete Component - Following existing role autocomplete pattern\r\n * Based on ProjectsList.tsx role search implementation (Line 912-937)\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { SkillTag, PersonSkill } from '@/types/models';\r\nimport { skillTagsApi } from '@/services/api';\r\n\r\ninterface SkillsAutocompleteProps {\r\n  selectedSkills: PersonSkill[];\r\n  onSkillsChange: (skills: PersonSkill[]) => void;\r\n  skillType?: 'strength' | 'development' | 'learning' | 'all';\r\n  placeholder?: string;\r\n  className?: string;\r\n}\r\n\r\nconst SkillsAutocomplete: React.FC<SkillsAutocompleteProps> = ({\r\n  selectedSkills,\r\n  onSkillsChange,\r\n  skillType = 'all',\r\n  placeholder = \"Add skills...\",\r\n  className = \"w-full px-2 py-1 text-xs bg-[#2d2d30] border border-[#3e3e42] rounded text-[#cccccc] placeholder-[#969696] focus:border-[#007acc] focus:outline-none\"\r\n}) => {\r\n  const [skillSearch, setSkillSearch] = useState('');\r\n  const [skillResults, setSkillResults] = useState<SkillTag[]>([]);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [isCreatingSkill, setIsCreatingSkill] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(-1);\r\n\r\n  // Search skills using real API\r\n  const searchSkills = async (searchTerm: string) => {\r\n    if (searchTerm.length < 2) {\r\n      setSkillResults([]);\r\n      setShowDropdown(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await skillTagsApi.list({ search: searchTerm });\r\n      const filtered = response.results.filter(skill =>\r\n        !selectedSkills.some(selected => selected.skillTagName === skill.name)\r\n      ).slice(0, 5);\r\n\r\n      setSkillResults(filtered);\r\n      setShowDropdown(filtered.length > 0);\r\n      setSelectedIndex(-1); // Reset selection when results change\r\n    } catch (error) {\r\n      console.error('Error searching skills:', error);\r\n      setSkillResults([]);\r\n      setShowDropdown(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      searchSkills(skillSearch);\r\n    }, 300); // Debounce search\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [skillSearch, selectedSkills]);\r\n\r\n  const handleSkillSelect = (skill: SkillTag) => {\r\n    const newSkill: PersonSkill = {\r\n      id: 0, // Will be set by backend\r\n      person: 0, // Will be set by parent component\r\n      skillTagId: skill.id,\r\n      skillTagName: skill.name,\r\n      skillType: skillType === 'all' ? 'strength' : skillType,\r\n      proficiencyLevel: 'beginner',\r\n      notes: '',\r\n      lastUsed: null,\r\n      createdAt: '',\r\n      updatedAt: ''\r\n    };\r\n\r\n    onSkillsChange([...selectedSkills, newSkill]);\r\n    setSkillSearch('');\r\n    setShowDropdown(false);\r\n    setSelectedIndex(-1);\r\n  };\r\n\r\n  const handleSkillRemove = (skillToRemove: PersonSkill) => {\r\n    onSkillsChange(selectedSkills.filter(skill => \r\n      skill.skillTagName !== skillToRemove.skillTagName\r\n    ));\r\n  };\r\n\r\n  const createNewSkill = async (skillName: string) => {\r\n    if (!skillName.trim() || isCreatingSkill) return;\r\n\r\n    setIsCreatingSkill(true);\r\n    try {\r\n      // Create new skill tag in the database\r\n      const newSkillTag = await skillTagsApi.create({\r\n        name: skillName.trim(),\r\n        category: '', // Default empty category\r\n        description: ''\r\n      });\r\n\r\n      // Add the new skill to the user's skills\r\n      const newSkill: PersonSkill = {\r\n        id: 0,\r\n        person: 0,\r\n        skillTagId: newSkillTag.id,\r\n        skillTagName: newSkillTag.name,\r\n        skillType: skillType === 'all' ? 'strength' : skillType,\r\n        proficiencyLevel: 'beginner',\r\n        notes: '',\r\n        lastUsed: null,\r\n        createdAt: '',\r\n        updatedAt: ''\r\n      };\r\n\r\n      onSkillsChange([...selectedSkills, newSkill]);\r\n      setSkillSearch('');\r\n      setShowDropdown(false);\r\n      setSelectedIndex(-1);\r\n    } catch (error) {\r\n      console.error('Failed to create new skill:', error);\r\n    } finally {\r\n      setIsCreatingSkill(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    const totalOptions = skillResults.length + (skillSearch.length >= 2 && !skillResults.some(skill => \r\n      skill.name.toLowerCase() === skillSearch.trim().toLowerCase()\r\n    ) ? 1 : 0); // +1 for \"Create new\" option if shown\r\n\r\n    if (e.key === 'ArrowDown') {\r\n      e.preventDefault();\r\n      if (showDropdown || skillSearch.length >= 2) {\r\n        setSelectedIndex(prev => prev < totalOptions - 1 ? prev + 1 : prev);\r\n      }\r\n    } else if (e.key === 'ArrowUp') {\r\n      e.preventDefault();\r\n      if (showDropdown || skillSearch.length >= 2) {\r\n        setSelectedIndex(prev => prev > -1 ? prev - 1 : -1);\r\n      }\r\n    } else if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      if (selectedIndex >= 0 && selectedIndex < skillResults.length) {\r\n        // Select existing skill\r\n        handleSkillSelect(skillResults[selectedIndex]);\r\n      } else if (selectedIndex === skillResults.length && skillSearch.length >= 2) {\r\n        // Create new skill (last option)\r\n        createNewSkill(skillSearch.trim());\r\n      }\r\n    } else if (e.key === 'Escape') {\r\n      setShowDropdown(false);\r\n      setSelectedIndex(-1);\r\n    } else if (e.key === 'Tab' && skillSearch.trim()) {\r\n      e.preventDefault();\r\n      \r\n      // Check if the typed skill already exists (case-insensitive)\r\n      const existingSkill = skillResults.find(skill => \r\n        skill.name.toLowerCase() === skillSearch.trim().toLowerCase()\r\n      );\r\n      \r\n      if (existingSkill) {\r\n        handleSkillSelect(existingSkill);\r\n      } else {\r\n        // Create new skill\r\n        createNewSkill(skillSearch.trim());\r\n      }\r\n    }\r\n  };\r\n\r\n  const getSkillTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case 'strength': return 'bg-emerald-500/20 text-emerald-400 border-emerald-500/30';\r\n      case 'development': return 'bg-amber-500/20 text-amber-400 border-amber-500/30';\r\n      case 'learning': return 'bg-blue-500/20 text-blue-400 border-blue-500/30';\r\n      default: return 'bg-slate-500/20 text-slate-400 border-slate-500/30';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {/* Search Input - Following exact pattern from ProjectsList role search */}\r\n      <div className=\"relative\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={skillSearch}\r\n          onChange={(e) => setSkillSearch(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          disabled={isCreatingSkill}\r\n          className={`${className} ${isCreatingSkill ? 'opacity-50 cursor-wait' : ''}`}\r\n        />\r\n        \r\n        {/* Search Results Dropdown with Create New Option */}\r\n        {(showDropdown && skillResults.length > 0) || (skillSearch.length >= 2 && !isCreatingSkill) ? (\r\n          <div className=\"absolute top-full left-0 right-0 mt-1 bg-[#2d2d30] border border-[#3e3e42] rounded shadow-lg z-50 max-h-32 overflow-y-auto\">\r\n            {/* Existing skills */}\r\n            {skillResults.map((skill, index) => (\r\n              <button\r\n                key={skill.id}\r\n                onClick={() => handleSkillSelect(skill)}\r\n                className={`w-full text-left px-2 py-1 text-xs hover:bg-[#3e3e42] transition-colors text-[#cccccc] border-b border-[#3e3e42] last:border-b-0 ${\r\n                  selectedIndex === index ? 'bg-[#007acc]/30 border-[#007acc]' : ''\r\n                }`}\r\n              >\r\n                <div className=\"font-medium\">{skill.name}</div>\r\n                {skill.category && (\r\n                  <div className=\"text-[#969696]\">{skill.category}</div>\r\n                )}\r\n              </button>\r\n            ))}\r\n            \r\n            {/* Create new skill option - show if no exact match found */}\r\n            {skillSearch.length >= 2 && !skillResults.some(skill => \r\n              skill.name.toLowerCase() === skillSearch.trim().toLowerCase()\r\n            ) && (\r\n              <button\r\n                onClick={() => createNewSkill(skillSearch.trim())}\r\n                className={`w-full text-left px-2 py-1 text-xs hover:bg-[#3e3e42] transition-colors text-[#969696] border-t border-[#3e3e42] bg-[#3e3e42]/30 ${\r\n                  selectedIndex === skillResults.length ? 'bg-[#007acc]/30 border-[#007acc]' : ''\r\n                }`}\r\n                disabled={isCreatingSkill}\r\n              >\r\n                <div className=\"flex items-center gap-1\">\r\n                  <span>+ Create \"{skillSearch.trim()}\"</span>\r\n                  <span className=\"text-xs opacity-75\">(Enter/Tab)</span>\r\n                </div>\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      {/* Selected Skills Tags */}\r\n      <div className=\"flex flex-wrap gap-1\">\r\n        {selectedSkills.map((skill, index) => (\r\n          <div\r\n            key={`${skill.skillTagName}-${index}`}\r\n            className={`px-2 py-1 rounded-full border text-xs font-medium flex items-center gap-1 ${getSkillTypeColor(skill.skillType)}`}\r\n          >\r\n            {skill.skillTagName}\r\n            <button\r\n              onClick={() => handleSkillRemove(skill)}\r\n              className=\"hover:opacity-80 transition-opacity\"\r\n            >\r\n              Ã—\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillsAutocomplete;","/**\n * People List - Split-panel layout following ProjectsList.tsx pattern\n * Left panel: People list with filtering\n * Right panel: Person details with skills management\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person, PersonSkill, SkillTag, Department } from '@/types/models';\nimport { peopleApi, personSkillsApi, skillTagsApi, departmentsApi } from '@/services/api';\nimport Sidebar from '@/components/layout/Sidebar';\nimport SkillsAutocomplete from '@/components/skills/SkillsAutocomplete';\n\nconst PeopleList: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [departments, setDepartments] = useState<Department[]>([]); // Phase 2: Department filter\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [departmentFilter, setDepartmentFilter] = useState<string[]>([]); // Multi-select department filter\n  const [locationFilter, setLocationFilter] = useState<string[]>([]); // Multi-select location filter\n  const [sortBy, setSortBy] = useState<'name' | 'location' | 'department' | 'role'>('name');\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Bulk actions state\n  const [bulkMode, setBulkMode] = useState(false);\n  const [selectedPeopleIds, setSelectedPeopleIds] = useState<Set<number>>(new Set());\n  const [bulkDepartment, setBulkDepartment] = useState<string>('');\n  \n  // Person skills data\n  const [personSkills, setPersonSkills] = useState<PersonSkill[]>([]);\n  const [editingSkills, setEditingSkills] = useState(false);\n  const [editingProficiency, setEditingProficiency] = useState<string | null>(null); // skillTagName-skillType key\n  const [skillsData, setSkillsData] = useState({\n    strengths: [] as PersonSkill[],\n    development: [] as PersonSkill[],\n    learning: [] as PersonSkill[]\n  });\n\n  // Inline editing state for person details\n  const [editingPersonData, setEditingPersonData] = useState<Person | null>(null);\n  const [isUpdatingPerson, setIsUpdatingPerson] = useState(false);\n  \n  // Gear menu state\n  const [showGearMenu, setShowGearMenu] = useState(false);\n  const [editingName, setEditingName] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  \n  // Dropdown states\n  const [showDepartmentDropdown, setShowDepartmentDropdown] = useState(false);\n  const [showLocationDropdown, setShowLocationDropdown] = useState(false);\n\n  const proficiencyLevels = [\n    { value: 'beginner', label: 'Beginner' },\n    { value: 'intermediate', label: 'Intermediate' },\n    { value: 'advanced', label: 'Advanced' },\n    { value: 'expert', label: 'Expert' }\n  ];\n\n  const roleOptions = [\n    'Engineer', 'Senior Engineer', 'Lead Engineer', 'Principal Engineer',\n    'Designer', 'Senior Designer', 'Design Lead',\n    'Product Manager', 'Senior Product Manager',\n    'Project Manager', 'Program Manager',\n    'QA Engineer', 'DevOps Engineer',\n    'Data Scientist', 'Data Analyst',\n    'Marketing Specialist', 'Sales Representative',\n    'Operations Manager', 'HR Specialist',\n    'Consultant', 'Contractor', 'Intern'\n  ];\n\n  useEffect(() => {\n    loadPeople();\n    loadDepartments(); // Phase 2: Load departments for filter\n  }, []);\n\n  // Phase 2: Load departments for filter dropdown\n  const loadDepartments = async () => {\n    try {\n      const departmentsList = await departmentsApi.listAll();\n      setDepartments(departmentsList);\n    } catch (err) {\n      console.error('Error loading departments:', err);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedPerson?.id) {\n      loadPersonSkills(selectedPerson.id);\n    }\n  }, [selectedPerson]);\n\n  // Close dropdowns when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      \n      if (editingProficiency && !target.closest('.proficiency-dropdown')) {\n        setEditingProficiency(null);\n      }\n      \n      if (showGearMenu && !target.closest('.gear-menu')) {\n        setShowGearMenu(false);\n      }\n      \n      if (showDepartmentDropdown && !target.closest('.department-filter')) {\n        setShowDepartmentDropdown(false);\n      }\n      \n      if (showLocationDropdown && !target.closest('.location-filter')) {\n        setShowLocationDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [editingProficiency, showGearMenu, showDepartmentDropdown, showLocationDropdown]);\n\n  const loadPeople = async () => {\n    try {\n      setLoading(true);\n      const peopleList = await peopleApi.listAll();\n      setPeople(peopleList);\n      \n      // Auto-select first person if none selected\n      if (peopleList.length > 0 && !selectedPerson) {\n        setSelectedPerson(peopleList[0]);\n        setSelectedIndex(0);\n        setEditingPersonData({ ...peopleList[0] }); // Initialize editing data\n      }\n    } catch (err: any) {\n      setError('Failed to load people');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadPersonSkills = async (personId: number) => {\n    try {\n      const response = await personSkillsApi.list({ person: personId });\n      const skills = response.results || [];\n      setPersonSkills(skills);\n      \n      // Group skills by type\n      const grouped = {\n        strengths: skills.filter(skill => skill.skillType === 'strength'),\n        development: skills.filter(skill => skill.skillType === 'development'),\n        learning: skills.filter(skill => skill.skillType === 'learning')\n      };\n      setSkillsData(grouped);\n    } catch (err: any) {\n      console.error('Failed to load person skills:', err);\n    }\n  };\n\n  const handlePersonClick = (person: Person, index: number) => {\n    setSelectedPerson(person);\n    setSelectedIndex(index);\n    setEditingPersonData({ ...person }); // Initialize editing data with current person data\n  };\n\n  const handlePersonFieldChange = (field: keyof Person, value: string | number | null) => {\n    if (!editingPersonData) return;\n    setEditingPersonData(prev => ({\n      ...prev!,\n      [field]: value\n    }));\n  };\n\n  const savePersonField = async (field: keyof Person) => {\n    if (!selectedPerson?.id || !editingPersonData || isUpdatingPerson) return;\n\n    try {\n      setIsUpdatingPerson(true);\n      setError(null);\n\n      const updateData = {\n        [field]: editingPersonData[field]\n      };\n\n      // Handle special cases\n      if (field === 'weeklyCapacity') {\n        updateData.weeklyCapacity = Number(editingPersonData.weeklyCapacity) || 36;\n      }\n\n      await peopleApi.update(selectedPerson.id, updateData);\n\n      // Update local state\n      setSelectedPerson(prev => ({ ...prev!, ...updateData }));\n      \n      // Update the people list\n      setPeople(prev => prev.map(person => \n        person.id === selectedPerson.id \n          ? { ...person, ...updateData }\n          : person\n      ));\n\n    } catch (err: any) {\n      setError(`Failed to update ${field}: ${err.message}`);\n      // Reset editing data to original values on error\n      setEditingPersonData({ ...selectedPerson });\n    } finally {\n      setIsUpdatingPerson(false);\n    }\n  };\n\n  const handleNameEdit = () => {\n    setEditingName(true);\n    setShowGearMenu(false);\n  };\n\n  const handleNameSave = async () => {\n    if (!selectedPerson?.id || !editingPersonData?.name?.trim()) {\n      setEditingName(false);\n      return;\n    }\n\n    try {\n      setIsUpdatingPerson(true);\n      await peopleApi.update(selectedPerson.id, { name: editingPersonData.name.trim() });\n      \n      // Update local state\n      setSelectedPerson(prev => ({ ...prev!, name: editingPersonData.name.trim() }));\n      setPeople(prev => prev.map(person => \n        person.id === selectedPerson.id \n          ? { ...person, name: editingPersonData.name.trim() }\n          : person\n      ));\n      \n      setEditingName(false);\n    } catch (err: any) {\n      setError(`Failed to update name: ${err.message}`);\n    } finally {\n      setIsUpdatingPerson(false);\n    }\n  };\n\n  const handleNameCancel = () => {\n    if (selectedPerson) {\n      setEditingPersonData(prev => ({ ...prev!, name: selectedPerson.name }));\n    }\n    setEditingName(false);\n  };\n\n  const handleDeletePerson = async () => {\n    if (!selectedPerson?.id) return;\n\n    try {\n      setIsUpdatingPerson(true);\n      await peopleApi.delete(selectedPerson.id);\n      \n      // Remove from local state\n      const updatedPeople = people.filter(p => p.id !== selectedPerson.id);\n      setPeople(updatedPeople);\n      \n      // Select next person or clear selection\n      if (updatedPeople.length > 0) {\n        const nextIndex = Math.min(selectedIndex, updatedPeople.length - 1);\n        setSelectedPerson(updatedPeople[nextIndex]);\n        setSelectedIndex(nextIndex);\n        setEditingPersonData({ ...updatedPeople[nextIndex] });\n      } else {\n        setSelectedPerson(null);\n        setSelectedIndex(-1);\n        setEditingPersonData(null);\n      }\n      \n      setShowDeleteConfirm(false);\n      setShowGearMenu(false);\n    } catch (err: any) {\n      setError(`Failed to delete person: ${err.message}`);\n    } finally {\n      setIsUpdatingPerson(false);\n    }\n  };\n\n  const handleSkillsEdit = () => {\n    setEditingSkills(true);\n  };\n\n  const handleSkillsSave = async () => {\n    if (!selectedPerson?.id) return;\n\n    try {\n      // Get all current skills for this person\n      const currentSkills = [...skillsData.strengths, ...skillsData.development, ...skillsData.learning];\n      \n      \n      // Delete all existing skills for this person\n      for (const skill of personSkills) {\n        if (skill.id) {\n          await personSkillsApi.delete(skill.id);\n        }\n      }\n      \n      // Create new skills\n      for (const skill of currentSkills) {\n        // Skip skills with invalid skillTagId\n        if (!skill.skillTagId) {\n          continue;\n        }\n        \n        const skillData = {\n          person: selectedPerson.id,\n          skillTagId: skill.skillTagId,\n          skillType: skill.skillType,\n          proficiencyLevel: skill.proficiencyLevel || 'beginner',\n          notes: skill.notes || ''\n        };\n        \n        \n        await personSkillsApi.create(skillData);\n      }\n      \n      // Reload person skills\n      await loadPersonSkills(selectedPerson.id);\n      setEditingSkills(false);\n    } catch (err: any) {\n      setError('Failed to update skills');\n    }\n  };\n\n  const handleSkillsCancel = () => {\n    // Reset to original data\n    if (selectedPerson?.id) {\n      loadPersonSkills(selectedPerson.id);\n    }\n    setEditingSkills(false);\n  };\n\n  const updateSkillsByType = (skillType: 'strengths' | 'development' | 'learning', skills: PersonSkill[]) => {\n    setSkillsData(prev => ({\n      ...prev,\n      [skillType]: skills\n    }));\n  };\n\n  const handleProficiencyClick = (skill: PersonSkill, skillType: string) => {\n    if (editingSkills) return; // Only allow proficiency editing when NOT in skills edit mode\n    const key = `${skill.skillTagName}-${skillType}`;\n    setEditingProficiency(editingProficiency === key ? null : key);\n  };\n\n  const handleProficiencyChange = async (skill: PersonSkill, skillType: 'strengths' | 'development' | 'learning', newProficiency: string) => {\n    if (!selectedPerson?.id) return;\n\n    try {\n      // Find the actual PersonSkill record to update\n      const apiSkillType = skillType === 'strengths' ? 'strength' : skillType.slice(0, -1); // Map to API format\n      const skillToUpdate = personSkills.find(s => \n        s.skillTagName === skill.skillTagName && s.skillType === apiSkillType\n      );\n\n      if (skillToUpdate?.id) {\n        // Update in database immediately\n        await personSkillsApi.update(skillToUpdate.id, {\n          proficiencyLevel: newProficiency\n        });\n\n        // Update local state\n        const updatedSkills = skillsData[skillType].map(s => \n          s.skillTagName === skill.skillTagName \n            ? { ...s, proficiencyLevel: newProficiency }\n            : s\n        );\n        \n        updateSkillsByType(skillType, updatedSkills);\n        \n        // Also update the main personSkills array\n        const updatedPersonSkills = personSkills.map(s => \n          s.id === skillToUpdate.id \n            ? { ...s, proficiencyLevel: newProficiency }\n            : s\n        );\n        setPersonSkills(updatedPersonSkills);\n      }\n    } catch (error) {\n      console.error('Failed to update proficiency level:', error);\n      setError('Failed to update skill proficiency');\n    }\n    \n    setEditingProficiency(null);\n  };\n\n  const handleBulkAssignment = async () => {\n    if (!bulkDepartment || selectedPeopleIds.size === 0) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Update each selected person\n      const updatePromises = Array.from(selectedPeopleIds).map(personId => {\n        const updateData = {\n          department: bulkDepartment === 'unassigned' ? null : parseInt(bulkDepartment)\n        };\n        return peopleApi.update(personId, updateData);\n      });\n\n      await Promise.all(updatePromises);\n\n      // Reload people data to reflect changes\n      await loadPeople();\n      await loadDepartments();\n\n      // Clear bulk selection\n      setSelectedPeopleIds(new Set());\n      setBulkDepartment('');\n\n      // Show success message (could be improved with a proper toast)\n      const departmentName = bulkDepartment === 'unassigned' \n        ? 'removed from departments'\n        : departments.find(d => d.id?.toString() === bulkDepartment)?.name || 'unknown department';\n      \n    } catch (err: any) {\n      setError(`Failed to update department assignments: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Extract unique locations from people data\n  const uniqueLocations = Array.from(new Set(\n    people\n      .map(person => person.location?.trim())\n      .filter(location => location && location !== '')\n  )).sort();\n\n  // Filter and sort people\n  const filteredAndSortedPeople = people\n    .filter(person => {\n      // Enhanced search filter (includes notes/description + location search)\n      const matchesSearch = !searchTerm || \n        person.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        person.role?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        person.departmentName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        person.location?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        person.notes?.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      // Department filter - Multi-select\n      const matchesDepartment = departmentFilter.length === 0 || \n        departmentFilter.includes(person.department?.toString() || '') ||\n        (departmentFilter.includes('unassigned') && !person.department);\n      \n      // Location filter - Multi-select\n      const matchesLocation = locationFilter.length === 0 || \n        locationFilter.includes(person.location?.trim() || '') ||\n        (locationFilter.includes('unspecified') && (!person.location || person.location.trim() === ''));\n      \n      return matchesSearch && matchesDepartment && matchesLocation;\n    })\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'location':\n          const aLoc = a.location?.trim() || 'zzz_unspecified'; // Put unspecified at end\n          const bLoc = b.location?.trim() || 'zzz_unspecified';\n          return aLoc.localeCompare(bLoc);\n        case 'department':\n          const aDept = a.departmentName || 'zzz_unassigned';\n          const bDept = b.departmentName || 'zzz_unassigned';\n          return aDept.localeCompare(bDept);\n        case 'role':\n          const aRole = a.role || 'zzz_no_role';\n          const bRole = b.role || 'zzz_no_role';\n          return aRole.localeCompare(bRole);\n        case 'name':\n        default:\n          return a.name.localeCompare(b.name);\n      }\n    });\n\n  // Auto-select first person from filtered list\n  useEffect(() => {\n    if (filteredAndSortedPeople.length > 0 && !selectedPerson) {\n      setSelectedPerson(filteredAndSortedPeople[0]);\n      setSelectedIndex(0);\n      setEditingPersonData({ ...filteredAndSortedPeople[0] }); // Initialize editing data\n    }\n  }, [filteredAndSortedPeople, selectedPerson]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#1e1e1e] flex items-center justify-center\">\n        <div className=\"text-[#969696]\">Loading people...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#1e1e1e] flex\">\n      <Sidebar />\n      <div className=\"flex-1 flex h-screen bg-[#1e1e1e]\">\n        \n        {/* Left Panel - People List */}\n        <div className=\"w-1/2 border-r border-[#3e3e42] flex flex-col min-w-0\">\n          \n          {/* Header */}\n          <div className=\"p-3 border-b border-[#3e3e42]\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h1 className=\"text-lg font-semibold text-[#cccccc]\">People</h1>\n              <Link to=\"/people/new\">\n                <button className=\"px-2 py-0.5 text-xs rounded border bg-[#3e3e42] border-[#3e3e42] text-[#cccccc] hover:bg-[#4e4e52] hover:text-[#cccccc] transition-colors\">\n                  + New\n                </button>\n              </Link>\n            </div>\n\n            {/* Search and Filters - Phase 2 */}\n            <div className=\"space-y-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Search people (name, role, department, location, notes)\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-3 py-1.5 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] placeholder-[#969696] focus:border-[#007acc] focus:outline-none\"\n              />\n              \n              {/* Department Multi-Select Filter */}\n              <div className=\"department-filter relative\">\n                <div \n                  onClick={() => setShowDepartmentDropdown(!showDepartmentDropdown)}\n                  className=\"w-full px-3 py-1.5 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] min-h-[32px] flex flex-wrap items-center gap-1 cursor-pointer hover:border-[#007acc] focus:border-[#007acc]\"\n                >\n                  {departmentFilter.length === 0 ? (\n                    <span className=\"text-[#969696]\">All Departments</span>\n                  ) : (\n                    <>\n                      {departmentFilter.map((deptId, index) => {\n                        const department = departments.find(d => d.id?.toString() === deptId);\n                        const displayName = deptId === 'unassigned' ? 'Not Assigned' : department?.name || 'Unknown';\n                        return (\n                          <span\n                            key={index}\n                            className=\"inline-flex items-center gap-1 px-2 py-0.5 bg-[#007acc]/20 text-[#007acc] rounded text-xs border border-[#007acc]/30\"\n                          >\n                            {displayName}\n                            <button\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                setDepartmentFilter(prev => prev.filter(d => d !== deptId));\n                              }}\n                              className=\"hover:text-[#007acc] hover:bg-[#007acc]/30 rounded-full w-3 h-3 flex items-center justify-center\"\n                            >\n                              Ã—\n                            </button>\n                          </span>\n                        );\n                      })}\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setDepartmentFilter([]);\n                        }}\n                        className=\"text-xs text-[#969696] hover:text-[#cccccc] ml-1\"\n                      >\n                        Clear All\n                      </button>\n                    </>\n                  )}\n                  <svg className=\"ml-auto w-4 h-4 text-[#969696]\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n                    <path d=\"M6 9l6 6 6-6\"/>\n                  </svg>\n                </div>\n                \n                {/* Department Options Dropdown */}\n                {showDepartmentDropdown && (\n                  <div className=\"absolute top-full left-0 right-0 mt-1 bg-[#2d2d30] border border-[#3e3e42] rounded shadow-lg z-40 max-h-40 overflow-y-auto\">\n                    <button\n                      onClick={() => {\n                        if (!departmentFilter.includes('unassigned')) {\n                          setDepartmentFilter(prev => [...prev, 'unassigned']);\n                        }\n                      }}\n                      className={`w-full text-left px-3 py-2 text-sm hover:bg-[#3e3e42] transition-colors ${\n                        departmentFilter.includes('unassigned') ? 'bg-[#007acc]/20 text-[#007acc]' : 'text-[#cccccc]'\n                      }`}\n                      disabled={departmentFilter.includes('unassigned')}\n                    >\n                      Not Assigned ({people.filter(p => !p.department).length})\n                    </button>\n                    {departments.map((dept) => (\n                      <button\n                        key={dept.id}\n                        onClick={() => {\n                          const deptId = dept.id?.toString() || '';\n                          if (!departmentFilter.includes(deptId)) {\n                            setDepartmentFilter(prev => [...prev, deptId]);\n                          }\n                        }}\n                        className={`w-full text-left px-3 py-2 text-sm hover:bg-[#3e3e42] transition-colors ${\n                          departmentFilter.includes(dept.id?.toString() || '') ? 'bg-[#007acc]/20 text-[#007acc]' : 'text-[#cccccc]'\n                        }`}\n                        disabled={departmentFilter.includes(dept.id?.toString() || '')}\n                      >\n                        {dept.name} ({people.filter(p => p.department === dept.id).length})\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {/* Location Multi-Select Filter */}\n              <div className=\"location-filter relative\">\n                <div \n                  onClick={() => setShowLocationDropdown(!showLocationDropdown)}\n                  className=\"w-full px-3 py-1.5 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] min-h-[32px] flex flex-wrap items-center gap-1 cursor-pointer hover:border-[#007acc] focus:border-[#007acc]\"\n                >\n                  {locationFilter.length === 0 ? (\n                    <span className=\"text-[#969696]\">All Locations</span>\n                  ) : (\n                    <>\n                      {locationFilter.map((location, index) => (\n                        <span\n                          key={index}\n                          className=\"inline-flex items-center gap-1 px-2 py-0.5 bg-[#007acc]/20 text-[#007acc] rounded text-xs border border-[#007acc]/30\"\n                        >\n                          {location === 'unspecified' ? 'Not Specified' : location}\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              setLocationFilter(prev => prev.filter(l => l !== location));\n                            }}\n                            className=\"hover:text-[#007acc] hover:bg-[#007acc]/30 rounded-full w-3 h-3 flex items-center justify-center\"\n                          >\n                            Ã—\n                          </button>\n                        </span>\n                      ))}\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setLocationFilter([]);\n                        }}\n                        className=\"text-xs text-[#969696] hover:text-[#cccccc] ml-1\"\n                      >\n                        Clear All\n                      </button>\n                    </>\n                  )}\n                  <svg className=\"ml-auto w-4 h-4 text-[#969696]\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n                    <path d=\"M6 9l6 6 6-6\"/>\n                  </svg>\n                </div>\n                \n                {/* Location Options Dropdown */}\n                {showLocationDropdown && (\n                  <div className=\"absolute top-full left-0 right-0 mt-1 bg-[#2d2d30] border border-[#3e3e42] rounded shadow-lg z-40 max-h-40 overflow-y-auto\">\n                    <button\n                      onClick={() => {\n                        if (!locationFilter.includes('unspecified')) {\n                          setLocationFilter(prev => [...prev, 'unspecified']);\n                        }\n                      }}\n                      className={`w-full text-left px-3 py-2 text-sm hover:bg-[#3e3e42] transition-colors ${\n                        locationFilter.includes('unspecified') ? 'bg-[#007acc]/20 text-[#007acc]' : 'text-[#cccccc]'\n                      }`}\n                      disabled={locationFilter.includes('unspecified')}\n                    >\n                      Not Specified ({people.filter(p => !p.location || p.location.trim() === '').length})\n                    </button>\n                    {uniqueLocations.map((location) => (\n                      <button\n                        key={location}\n                        onClick={() => {\n                          if (!locationFilter.includes(location)) {\n                            setLocationFilter(prev => [...prev, location]);\n                          }\n                        }}\n                        className={`w-full text-left px-3 py-2 text-sm hover:bg-[#3e3e42] transition-colors ${\n                          locationFilter.includes(location) ? 'bg-[#007acc]/20 text-[#007acc]' : 'text-[#cccccc]'\n                        }`}\n                        disabled={locationFilter.includes(location)}\n                      >\n                        {location} ({people.filter(p => p.location?.trim() === location).length})\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {/* Sort By Dropdown */}\n              <div className=\"flex items-center gap-2\">\n                <label className=\"text-sm text-[#969696] whitespace-nowrap\">Sort by:</label>\n                <select\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value as 'name' | 'location' | 'department' | 'role')}\n                  className=\"flex-1 px-3 py-1.5 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] focus:border-[#007acc] focus:outline-none\"\n                >\n                  <option value=\"name\">Name</option>\n                  <option value=\"location\">Location</option>\n                  <option value=\"department\">Department</option>\n                  <option value=\"role\">Role</option>\n                </select>\n              </div>\n              \n              {/* Bulk Actions Toggle */}\n              <div className=\"flex items-center justify-between\">\n                <button\n                  onClick={() => {\n                    setBulkMode(!bulkMode);\n                    setSelectedPeopleIds(new Set());\n                  }}\n                  className={`px-2 py-1 text-xs rounded border transition-colors ${\n                    bulkMode \n                      ? 'bg-[#007acc] border-[#007acc] text-white' \n                      : 'bg-[#3e3e42] border-[#3e3e42] text-[#cccccc] hover:bg-[#4e4e52]'\n                  }`}\n                >\n                  {bulkMode ? 'Exit Bulk Mode' : 'Bulk Actions'}\n                </button>\n                \n                {bulkMode && selectedPeopleIds.size > 0 && (\n                  <span className=\"text-xs text-[#969696]\">\n                    {selectedPeopleIds.size} selected\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"p-3 bg-red-500/20 border-b border-red-500/50\">\n              <div className=\"text-red-400 text-sm\">{error}</div>\n            </div>\n          )}\n\n          {/* People List */}\n          <div className=\"flex-1 overflow-hidden\">\n            {/* Table Header */}\n            <div className=\"grid grid-cols-12 gap-2 px-2 py-1.5 text-xs text-[#969696] font-medium border-b border-[#3e3e42] bg-[#2d2d30]\">\n              {bulkMode && <div className=\"col-span-1\">SELECT</div>}\n              <div className={bulkMode ? \"col-span-3\" : \"col-span-3\"}>NAME</div>\n              <div className={bulkMode ? \"col-span-2\" : \"col-span-2\"}>DEPARTMENT</div>\n              <div className={bulkMode ? \"col-span-2\" : \"col-span-2\"}>LOCATION</div>\n              <div className={bulkMode ? \"col-span-2\" : \"col-span-2\"}>CAPACITY</div>\n              <div className={bulkMode ? \"col-span-2\" : \"col-span-3\"}>TOP SKILLS</div>\n            </div>\n\n            {/* Table Body */}\n            <div className=\"overflow-y-auto h-full\">\n              {filteredAndSortedPeople.length === 0 ? (\n                <div className=\"flex items-center justify-center py-12\">\n                  <div className=\"text-center text-[#969696]\">\n                    <div className=\"text-lg mb-2\">No people found</div>\n                    <div className=\"text-sm\">Try adjusting your search or create a new person</div>\n                  </div>\n                </div>\n              ) : (\n                filteredAndSortedPeople.map((person, index) => (\n                  <div\n                    key={person.id}\n                    onClick={bulkMode ? undefined : () => handlePersonClick(person, index)}\n                    className={`grid grid-cols-12 gap-2 px-2 py-1.5 text-sm border-b border-[#3e3e42] transition-colors focus:outline-none ${\n                      bulkMode \n                        ? 'hover:bg-[#3e3e42]/30'\n                        : `cursor-pointer hover:bg-[#3e3e42]/50 ${\n                            selectedPerson?.id === person.id ? 'bg-[#007acc]/20 border-[#007acc]' : ''\n                          }`\n                    }`}\n                    tabIndex={0}\n                  >\n                    {/* Bulk Select Checkbox */}\n                    {bulkMode && (\n                      <div className=\"col-span-1 flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedPeopleIds.has(person.id!)}\n                          onChange={(e) => {\n                            const newSelected = new Set(selectedPeopleIds);\n                            if (e.target.checked) {\n                              newSelected.add(person.id!);\n                            } else {\n                              newSelected.delete(person.id!);\n                            }\n                            setSelectedPeopleIds(newSelected);\n                          }}\n                          className=\"w-3 h-3 text-[#007acc] bg-[#3e3e42] border-[#3e3e42] rounded focus:ring-[#007acc] focus:ring-2\"\n                        />\n                      </div>\n                    )}\n                    \n                    {/* Name */}\n                    <div className=\"col-span-3 text-[#cccccc] font-medium\">\n                      {person.name}\n                    </div>\n                    \n                    {/* Department - Phase 2 */}\n                    <div className=\"col-span-2 text-[#969696] text-xs\">\n                      {person.departmentName || 'None'}\n                    </div>\n                    \n                    {/* Location */}\n                    <div className=\"col-span-2 text-[#969696] text-xs\">\n                      {person.location || 'Not specified'}\n                    </div>\n                    \n                    {/* Capacity */}\n                    <div className=\"col-span-2 text-[#969696] text-xs\">\n                      {person.weeklyCapacity || 36}h/week\n                    </div>\n                    \n                    {/* Top Skills Preview */}\n                    <div className={`${bulkMode ? 'col-span-2' : 'col-span-3'} flex flex-wrap gap-1`}>\n                      {/* This will be populated when we load skills */}\n                      <span className=\"text-[#969696] text-xs\">Skills...</span>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          {/* Bulk Actions Panel */}\n          {bulkMode && selectedPeopleIds.size > 0 && (\n            <div className=\"p-3 border-t border-[#3e3e42] bg-[#2d2d30]\">\n              <div className=\"flex items-center gap-3\">\n                <span className=\"text-sm text-[#cccccc] font-medium\">\n                  Assign {selectedPeopleIds.size} people to:\n                </span>\n                <select\n                  value={bulkDepartment}\n                  onChange={(e) => setBulkDepartment(e.target.value)}\n                  className=\"px-3 py-1.5 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] focus:border-[#007acc] focus:outline-none\"\n                >\n                  <option value=\"\">Select Department...</option>\n                  <option value=\"unassigned\">Remove from Department</option>\n                  {departments.map((dept) => (\n                    <option key={dept.id} value={dept.id}>\n                      {dept.name}\n                    </option>\n                  ))}\n                </select>\n                <button\n                  onClick={handleBulkAssignment}\n                  disabled={!bulkDepartment}\n                  className=\"px-3 py-1.5 text-sm rounded bg-[#007acc] text-white hover:bg-[#005fa3] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  Assign\n                </button>\n                <button\n                  onClick={() => setSelectedPeopleIds(new Set())}\n                  className=\"px-3 py-1.5 text-sm rounded border border-[#3e3e42] text-[#969696] hover:text-[#cccccc] hover:bg-[#3e3e42] transition-colors\"\n                >\n                  Clear Selection\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Right Panel - Person Details */}\n        <div className=\"w-1/2 flex flex-col bg-[#2d2d30] min-w-0\">\n          {selectedPerson ? (\n            <>\n              {/* Person Header */}\n              <div className=\"p-4 border-b border-[#3e3e42]\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <div className=\"flex-1\">\n                    {editingName ? (\n                      <div className=\"mb-2\">\n                        <input\n                          type=\"text\"\n                          value={editingPersonData?.name || ''}\n                          onChange={(e) => handlePersonFieldChange('name', e.target.value)}\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter') {\n                              handleNameSave();\n                            } else if (e.key === 'Escape') {\n                              handleNameCancel();\n                            }\n                          }}\n                          onBlur={handleNameSave}\n                          disabled={isUpdatingPerson}\n                          className=\"text-xl font-bold bg-[#3e3e42] border border-[#3e3e42] rounded px-2 py-1 text-[#cccccc] focus:outline-none focus:ring-1 focus:ring-[#007acc] focus:border-transparent disabled:opacity-50 w-full\"\n                          autoFocus\n                        />\n                        <div className=\"text-xs text-[#969696] mt-1\">\n                          Press Enter to save, Escape to cancel\n                        </div>\n                      </div>\n                    ) : (\n                      <h2 className=\"text-xl font-bold text-[#cccccc] mb-2\">\n                        {selectedPerson.name}\n                      </h2>\n                    )}\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      {/* Role Dropdown */}\n                      <div>\n                        <div className=\"text-[#969696] text-xs mb-1\">Role:</div>\n                        <select\n                          value={editingPersonData?.role || ''}\n                          onChange={(e) => {\n                            handlePersonFieldChange('role', e.target.value);\n                            savePersonField('role');\n                          }}\n                          disabled={isUpdatingPerson}\n                          className=\"w-full px-2 py-1 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] focus:outline-none focus:ring-1 focus:ring-[#007acc] focus:border-transparent disabled:opacity-50\"\n                        >\n                          <option value=\"\">Select Role...</option>\n                          {roleOptions.map((role) => (\n                            <option key={role} value={role}>\n                              {role}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      \n                      {/* Weekly Capacity Input */}\n                      <div>\n                        <div className=\"text-[#969696] text-xs mb-1\">Weekly Capacity:</div>\n                        <div className=\"flex items-center gap-1\">\n                          <input\n                            type=\"number\"\n                            min=\"1\"\n                            max=\"80\"\n                            value={editingPersonData?.weeklyCapacity || 36}\n                            onChange={(e) => handlePersonFieldChange('weeklyCapacity', parseInt(e.target.value) || 36)}\n                            onBlur={() => savePersonField('weeklyCapacity')}\n                            disabled={isUpdatingPerson}\n                            className=\"w-16 px-2 py-1 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] focus:outline-none focus:ring-1 focus:ring-[#007acc] focus:border-transparent disabled:opacity-50 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\n                          />\n                          <span className=\"text-[#969696]\">hours/week</span>\n                        </div>\n                      </div>\n                      \n                      {/* Department Dropdown */}\n                      <div>\n                        <div className=\"text-[#969696] text-xs mb-1\">Department:</div>\n                        <select\n                          value={editingPersonData?.department || ''}\n                          onChange={(e) => {\n                            const deptId = e.target.value ? parseInt(e.target.value) : null;\n                            handlePersonFieldChange('department', deptId);\n                            // Also update the department name for display\n                            const selectedDept = departments.find(d => d.id === deptId);\n                            handlePersonFieldChange('departmentName', selectedDept?.name || '');\n                            savePersonField('department');\n                          }}\n                          disabled={isUpdatingPerson}\n                          className=\"w-full px-2 py-1 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] focus:outline-none focus:ring-1 focus:ring-[#007acc] focus:border-transparent disabled:opacity-50\"\n                        >\n                          <option value=\"\">No Department</option>\n                          {departments.map((dept) => (\n                            <option key={dept.id} value={dept.id}>\n                              {dept.name}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      \n                      {/* Location Input */}\n                      <div>\n                        <div className=\"text-[#969696] text-xs mb-1\">Location:</div>\n                        <input\n                          type=\"text\"\n                          value={editingPersonData?.location || ''}\n                          onChange={(e) => handlePersonFieldChange('location', e.target.value)}\n                          onBlur={() => savePersonField('location')}\n                          placeholder=\"e.g., New York, NY or Remote\"\n                          disabled={isUpdatingPerson}\n                          className=\"w-full px-2 py-1 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] placeholder-[#969696] focus:outline-none focus:ring-1 focus:ring-[#007acc] focus:border-transparent disabled:opacity-50\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2 items-start\">\n                    {isUpdatingPerson && (\n                      <div className=\"px-2 py-0.5 text-xs text-[#007acc] flex items-center gap-1\">\n                        <div className=\"w-3 h-3 border border-[#007acc] border-t-transparent rounded-full animate-spin\"></div>\n                        Saving...\n                      </div>\n                    )}\n                    \n                    {/* Gear Icon and Menu */}\n                    <div className=\"gear-menu relative\">\n                      <button\n                        onClick={() => setShowGearMenu(!showGearMenu)}\n                        disabled={isUpdatingPerson}\n                        className=\"p-1 text-[#969696] hover:text-[#cccccc] hover:bg-[#3e3e42] rounded transition-colors disabled:opacity-50\"\n                        title=\"Person options\"\n                      >\n                        <svg className=\"w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n                          <path d=\"M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/>\n                          <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1Z\"/>\n                        </svg>\n                      </button>\n                      \n                      {/* Dropdown Menu */}\n                      {showGearMenu && (\n                        <div className=\"absolute right-0 top-full mt-1 w-48 bg-[#2d2d30] border border-[#3e3e42] rounded shadow-lg z-50\">\n                          <button\n                            onClick={handleNameEdit}\n                            disabled={isUpdatingPerson || editingName}\n                            className=\"w-full text-left px-3 py-2 text-sm text-[#cccccc] hover:bg-[#3e3e42] transition-colors disabled:opacity-50 flex items-center gap-2\"\n                          >\n                            <svg className=\"w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n                              <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n                              <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n                            </svg>\n                            Edit Name\n                          </button>\n                          \n                          <div className=\"border-t border-[#3e3e42]\" />\n                          \n                          <button\n                            onClick={() => setShowDeleteConfirm(true)}\n                            disabled={isUpdatingPerson}\n                            className=\"w-full text-left px-3 py-2 text-sm text-red-400 hover:bg-red-500/20 transition-colors disabled:opacity-50 flex items-center gap-2\"\n                          >\n                            <svg className=\"w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n                              <path d=\"M3 6h18\"/>\n                              <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"/>\n                              <path d=\"M8 6V4c0-1 1-2 2-2h4c-1 0 2 1 2 2v2\"/>\n                              <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n                              <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n                            </svg>\n                            Delete Person\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Delete Confirmation Modal */}\n              {showDeleteConfirm && (\n                <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n                  <div className=\"bg-[#2d2d30] border border-[#3e3e42] rounded-lg p-6 max-w-md mx-4\">\n                    <div className=\"flex items-center gap-3 mb-4\">\n                      <div className=\"w-8 h-8 bg-red-500/20 rounded-full flex items-center justify-center\">\n                        <svg className=\"w-5 h-5 text-red-400\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n                          <path d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"/>\n                        </svg>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-[#cccccc]\">Delete Person</h3>\n                        <p className=\"text-sm text-[#969696]\">This action cannot be undone</p>\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-[#cccccc] mb-6\">\n                      Are you sure you want to delete <strong>{selectedPerson.name}</strong>? \n                      This will permanently remove all their data, assignments, and skills.\n                    </p>\n                    \n                    <div className=\"flex gap-3 justify-end\">\n                      <button\n                        onClick={() => setShowDeleteConfirm(false)}\n                        disabled={isUpdatingPerson}\n                        className=\"px-4 py-2 text-sm border border-[#3e3e42] text-[#cccccc] hover:bg-[#3e3e42] rounded transition-colors disabled:opacity-50\"\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        onClick={handleDeletePerson}\n                        disabled={isUpdatingPerson}\n                        className=\"px-4 py-2 text-sm bg-red-600 hover:bg-red-700 text-white rounded transition-colors disabled:opacity-50 flex items-center gap-2\"\n                      >\n                        {isUpdatingPerson ? (\n                          <>\n                            <div className=\"w-4 h-4 border border-white border-t-transparent rounded-full animate-spin\"></div>\n                            Deleting...\n                          </>\n                        ) : (\n                          'Delete Person'\n                        )}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Skills Section */}\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <h3 className=\"text-lg font-semibold text-[#cccccc]\">Skills & Expertise</h3>\n                  <div className=\"flex gap-2\">\n                    {editingSkills ? (\n                      <>\n                        <button \n                          onClick={handleSkillsSave}\n                          className=\"px-2 py-0.5 text-xs rounded border bg-[#007acc] border-[#007acc] text-white hover:bg-[#005fa3] transition-colors\"\n                        >\n                          Save Skills\n                        </button>\n                        <button \n                          onClick={handleSkillsCancel}\n                          className=\"px-2 py-0.5 text-xs rounded border bg-transparent border-[#3e3e42] text-[#969696] hover:text-[#cccccc] hover:bg-[#3e3e42] transition-colors\"\n                        >\n                          Cancel\n                        </button>\n                      </>\n                    ) : (\n                      <button \n                        onClick={handleSkillsEdit}\n                        className=\"px-2 py-0.5 text-xs rounded border bg-[#007acc] border-[#007acc] text-white hover:bg-[#005fa3] transition-colors\"\n                      >\n                        Edit Skills\n                      </button>\n                    )}\n                  </div>\n                </div>\n\n                {/* Strengths */}\n                <div className=\"bg-[#3e3e42]/50 p-4 rounded-lg border border-[#3e3e42]\">\n                  <h4 className=\"text-sm font-medium text-[#cccccc] mb-3 flex items-center gap-2\">\n                    <span className=\"w-2 h-2 bg-emerald-400 rounded-full\"></span>\n                    Strengths\n                  </h4>\n                  {editingSkills ? (\n                    <SkillsAutocomplete\n                      selectedSkills={skillsData.strengths}\n                      onSkillsChange={(skills) => updateSkillsByType('strengths', skills)}\n                      skillType=\"strength\"\n                      placeholder=\"Add strengths...\"\n                      className=\"w-full px-3 py-2 text-sm bg-[#2d2d30] border border-[#3e3e42] rounded text-[#cccccc] placeholder-[#969696] focus:border-[#007acc] focus:outline-none\"\n                    />\n                  ) : (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {skillsData.strengths.map((skill, index) => {\n                        const proficiencyKey = `${skill.skillTagName}-strengths`;\n                        const isEditingThisProficiency = editingProficiency === proficiencyKey;\n                        \n                        return (\n                          <div key={index} className=\"relative\">\n                            <span className=\"px-3 py-1 rounded-full text-xs bg-emerald-500/20 text-emerald-400 border border-emerald-500/30 flex items-center gap-1\">\n                              {skill.skillTagName}\n                              <span \n                                className={`ml-1 opacity-75 ${!editingSkills ? 'cursor-pointer hover:opacity-100 hover:underline' : ''}`}\n                                onClick={() => handleProficiencyClick(skill, 'strengths')}\n                              >\n                                ({skill.proficiencyLevel})\n                              </span>\n                            </span>\n                            \n                            {/* Proficiency Dropdown */}\n                            {isEditingThisProficiency && !editingSkills && (\n                              <div className=\"proficiency-dropdown absolute top-full left-0 mt-1 bg-[#2d2d30] border border-[#3e3e42] rounded shadow-lg z-50 min-w-32\">\n                                {proficiencyLevels.map((level) => (\n                                  <button\n                                    key={level.value}\n                                    onClick={() => handleProficiencyChange(skill, 'strengths', level.value)}\n                                    className={`w-full text-left px-3 py-1 text-xs hover:bg-[#3e3e42] transition-colors border-b border-[#3e3e42] last:border-b-0 ${\n                                      skill.proficiencyLevel === level.value \n                                        ? 'bg-emerald-500/20 text-emerald-400' \n                                        : 'text-[#cccccc]'\n                                    }`}\n                                  >\n                                    {level.label}\n                                  </button>\n                                ))}\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                      {skillsData.strengths.length === 0 && (\n                        <span className=\"text-[#969696] text-sm\">No strengths listed</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* Development Areas */}\n                <div className=\"bg-[#3e3e42]/50 p-4 rounded-lg border border-[#3e3e42]\">\n                  <h4 className=\"text-sm font-medium text-[#cccccc] mb-3 flex items-center gap-2\">\n                    <span className=\"w-2 h-2 bg-amber-400 rounded-full\"></span>\n                    Areas for Improvement\n                  </h4>\n                  {editingSkills ? (\n                    <SkillsAutocomplete\n                      selectedSkills={skillsData.development}\n                      onSkillsChange={(skills) => updateSkillsByType('development', skills)}\n                      skillType=\"development\"\n                      placeholder=\"Add development areas...\"\n                      className=\"w-full px-3 py-2 text-sm bg-[#2d2d30] border border-[#3e3e42] rounded text-[#cccccc] placeholder-[#969696] focus:border-[#007acc] focus:outline-none\"\n                    />\n                  ) : (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {skillsData.development.map((skill, index) => {\n                        const proficiencyKey = `${skill.skillTagName}-development`;\n                        const isEditingThisProficiency = editingProficiency === proficiencyKey;\n                        \n                        return (\n                          <span key={index} className=\"px-3 py-1 rounded-full text-xs bg-amber-500/20 text-amber-400 border border-amber-500/30\">\n                            {skill.skillTagName}\n                          </span>\n                        );\n                      })}\n                      {skillsData.development.length === 0 && (\n                        <span className=\"text-[#969696] text-sm\">No development areas listed</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* Learning Goals */}\n                <div className=\"bg-[#3e3e42]/50 p-4 rounded-lg border border-[#3e3e42]\">\n                  <h4 className=\"text-sm font-medium text-[#cccccc] mb-3 flex items-center gap-2\">\n                    <span className=\"w-2 h-2 bg-blue-400 rounded-full\"></span>\n                    Currently Learning\n                  </h4>\n                  {editingSkills ? (\n                    <SkillsAutocomplete\n                      selectedSkills={skillsData.learning}\n                      onSkillsChange={(skills) => updateSkillsByType('learning', skills)}\n                      skillType=\"learning\"\n                      placeholder=\"Add learning goals...\"\n                      className=\"w-full px-3 py-2 text-sm bg-[#2d2d30] border border-[#3e3e42] rounded text-[#cccccc] placeholder-[#969696] focus:border-[#007acc] focus:outline-none\"\n                    />\n                  ) : (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {skillsData.learning.map((skill, index) => {\n                        const proficiencyKey = `${skill.skillTagName}-learning`;\n                        const isEditingThisProficiency = editingProficiency === proficiencyKey;\n                        \n                        return (\n                          <span key={index} className=\"px-3 py-1 rounded-full text-xs bg-blue-500/20 text-blue-400 border border-blue-500/30\">\n                            {skill.skillTagName}\n                          </span>\n                        );\n                      })}\n                      {skillsData.learning.length === 0 && (\n                        <span className=\"text-[#969696] text-sm\">No learning goals listed</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"flex-1 flex items-center justify-center\">\n              <div className=\"text-center text-[#969696]\">\n                <div className=\"text-lg mb-2\">Select a person</div>\n                <div className=\"text-sm\">Choose a person from the list to view details</div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PeopleList;","/**\n * Person Form - Create/Edit person with dark mode styling\n * Chunk 2: Only name + weeklyCapacity fields (progressive usage strategy)\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Person, Department } from '@/types/models';\nimport { peopleApi, departmentsApi } from '@/services/api';\nimport Layout from '@/components/layout/Layout';\nimport Button from '@/components/ui/Button';\nimport Input from '@/components/ui/Input';\nimport Card from '@/components/ui/Card';\n\ninterface PersonFormData {\n  name: string;\n  weeklyCapacity: number;\n  department: number | null; // Phase 2: Department assignment\n  location: string; // Location field - city/state or remote\n}\n\nconst PersonForm: React.FC = () => {\n  const navigate = useNavigate();\n  const { id } = useParams<{ id: string }>();\n  const isEditing = !!id;\n\n  const [formData, setFormData] = useState<PersonFormData>({\n    name: '',\n    weeklyCapacity: 36, // Default from master guide\n    department: null, // Phase 2: No department initially\n    location: '', // Location can be empty initially\n  });\n\n  const [departments, setDepartments] = useState<Department[]>([]); // Phase 2: Department list\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    loadDepartments(); // Phase 2: Always load departments\n    if (isEditing && id) {\n      loadPerson(parseInt(id));\n    }\n  }, [isEditing, id]);\n\n  // Phase 2: Load departments for dropdown\n  const loadDepartments = async () => {\n    try {\n      const response = await departmentsApi.list();\n      setDepartments(response.results || []);\n    } catch (err) {\n      console.error('Error loading departments:', err);\n    }\n  };\n\n  const loadPerson = async (personId: number) => {\n    try {\n      setLoading(true);\n      const person = await peopleApi.get(personId);\n      setFormData({\n        name: person.name,\n        weeklyCapacity: person.weeklyCapacity || 36,\n        department: person.department || null, // Phase 2: Load department\n        location: person.location || '', // Load location\n      });\n    } catch (err: any) {\n      setError(err.message || 'Failed to load person');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {};\n\n    if (!formData.name.trim()) {\n      errors.name = 'Name is required';\n    }\n\n    if (formData.weeklyCapacity < 1 || formData.weeklyCapacity > 80) {\n      errors.weeklyCapacity = 'Weekly capacity must be between 1 and 80 hours';\n    }\n\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      if (isEditing && id) {\n        await peopleApi.update(parseInt(id), formData);\n      } else {\n        await peopleApi.create(formData);\n      }\n\n      navigate('/people');\n    } catch (err: any) {\n      setError(err.message || `Failed to ${isEditing ? 'update' : 'create'} person`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (field: keyof PersonFormData, value: string | number | null) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Clear validation error when user starts typing\n    if (validationErrors[field]) {\n      setValidationErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  return (\n    <Layout>\n      <div className=\"max-w-2xl mx-auto\">\n      {/* Header */}\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-[#cccccc]\">\n          {isEditing ? 'Edit Person' : 'Add New Person'}\n        </h1>\n        <p className=\"text-[#969696] mt-1\">\n          {isEditing ? 'Update team member information' : 'Add a new team member to track their workload'}\n        </p>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <Card className=\"bg-red-500/20 border-red-500/50 p-4 mb-6\">\n          <div className=\"text-red-400\">{error}</div>\n        </Card>\n      )}\n\n      {/* Form */}\n      <Card className=\"bg-[#2d2d30] border-[#3e3e42] p-6\">\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          \n          {/* Name Field */}\n          <div>\n            <Input\n              label=\"Full Name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={(e) => handleChange('name', e.target.value)}\n              placeholder=\"Enter full name\"\n              required\n              error={validationErrors.name}\n              className=\"bg-[#3e3e42] border-[#3e3e42] text-[#cccccc]\"\n            />\n            <p className=\"text-[#969696] text-sm mt-1\">\n              This will be displayed in reports and assignments\n            </p>\n          </div>\n\n          {/* Weekly Capacity Field */}\n          <div>\n            <Input\n              label=\"Weekly Capacity (hours)\"\n              name=\"weeklyCapacity\"\n              type=\"number\"\n              value={formData.weeklyCapacity}\n              onChange={(e) => handleChange('weeklyCapacity', parseInt(e.target.value) || 0)}\n              placeholder=\"36\"\n              min=\"1\"\n              max=\"80\"\n              required\n              error={validationErrors.weeklyCapacity}\n              className=\"bg-[#3e3e42] border-[#3e3e42] text-[#cccccc]\"\n            />\n            <p className=\"text-[#969696] text-sm mt-1\">\n              Typical full-time: 40h, Part-time: 20h, Contractor: 36h\n            </p>\n          </div>\n\n          {/* Department Field - Phase 2 */}\n          <div>\n            <label className=\"block text-sm font-medium text-[#cccccc] mb-2\">\n              Department\n            </label>\n            <select\n              value={formData.department || ''}\n              onChange={(e) => handleChange('department', e.target.value ? parseInt(e.target.value) : null)}\n              className=\"w-full px-3 py-2 bg-[#3e3e42] border border-[#3e3e42] rounded-md text-[#cccccc] focus:outline-none focus:ring-2 focus:ring-[#007acc] focus:border-transparent\"\n              disabled={loading}\n            >\n              <option value=\"\">None Assigned</option>\n              {departments.map((dept) => (\n                <option key={dept.id} value={dept.id}>\n                  {dept.name}\n                </option>\n              ))}\n            </select>\n            <p className=\"text-[#969696] text-sm mt-1\">\n              Assign this person to a department for organizational tracking\n            </p>\n          </div>\n\n          {/* Location Field */}\n          <div>\n            <Input\n              label=\"Location\"\n              name=\"location\"\n              value={formData.location}\n              onChange={(e) => handleChange('location', e.target.value)}\n              placeholder=\"e.g., New York, NY or Remote\"\n              className=\"bg-[#3e3e42] border-[#3e3e42] text-[#cccccc]\"\n            />\n            <p className=\"text-[#969696] text-sm mt-1\">\n              City and state, or indicate if remote. Leave blank if not specified.\n            </p>\n          </div>\n\n          {/* Form Actions */}\n          <div className=\"flex justify-between pt-4\">\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              onClick={() => navigate('/people')}\n              disabled={loading}\n            >\n              Cancel\n            </Button>\n            \n            <Button\n              type=\"submit\"\n              variant=\"primary\"\n              disabled={loading}\n            >\n              {loading ? 'Saving...' : (isEditing ? 'Update Person' : 'Add Person')}\n            </Button>\n          </div>\n\n        </form>\n      </Card>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PersonForm;"],"names":["SkillsAutocomplete","selectedSkills","onSkillsChange","skillType","placeholder","className","skillSearch","setSkillSearch","useState","skillResults","setSkillResults","showDropdown","setShowDropdown","isCreatingSkill","setIsCreatingSkill","selectedIndex","setSelectedIndex","searchSkills","searchTerm","filtered","skillTagsApi","skill","selected","error","useEffect","timeoutId","handleSkillSelect","newSkill","handleSkillRemove","skillToRemove","createNewSkill","skillName","newSkillTag","handleKeyDown","e","totalOptions","prev","existingSkill","getSkillTypeColor","type","jsxs","jsx","index","PeopleList","people","setPeople","departments","setDepartments","selectedPerson","setSelectedPerson","setSearchTerm","departmentFilter","setDepartmentFilter","locationFilter","setLocationFilter","sortBy","setSortBy","loading","setLoading","setError","bulkMode","setBulkMode","selectedPeopleIds","setSelectedPeopleIds","bulkDepartment","setBulkDepartment","personSkills","setPersonSkills","editingSkills","setEditingSkills","editingProficiency","setEditingProficiency","skillsData","setSkillsData","editingPersonData","setEditingPersonData","isUpdatingPerson","setIsUpdatingPerson","showGearMenu","setShowGearMenu","editingName","setEditingName","showDeleteConfirm","setShowDeleteConfirm","showDepartmentDropdown","setShowDepartmentDropdown","showLocationDropdown","setShowLocationDropdown","proficiencyLevels","roleOptions","loadPeople","loadDepartments","departmentsList","departmentsApi","err","loadPersonSkills","handleClickOutside","event","target","peopleList","peopleApi","personId","skills","personSkillsApi","grouped","handlePersonClick","person","handlePersonFieldChange","field","value","savePersonField","updateData","handleNameEdit","handleNameSave","handleNameCancel","handleDeletePerson","updatedPeople","p","nextIndex","handleSkillsEdit","handleSkillsSave","currentSkills","skillData","handleSkillsCancel","updateSkillsByType","handleProficiencyClick","key","handleProficiencyChange","newProficiency","apiSkillType","skillToUpdate","s","updatedSkills","updatedPersonSkills","handleBulkAssignment","updatePromises","departmentName","d","uniqueLocations","location","filteredAndSortedPeople","matchesSearch","matchesDepartment","matchesLocation","a","b","aLoc","bLoc","aDept","bDept","aRole","bRole","Sidebar","Link","Fragment","deptId","department","displayName","dept","l","newSelected","role","selectedDept","proficiencyKey","isEditingThisProficiency","level","PersonForm","navigate","useNavigate","id","useParams","isEditing","formData","setFormData","validationErrors","setValidationErrors","loadPerson","response","validateForm","errors","handleSubmit","handleChange","Layout","Card","Input","Button"],"mappings":"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"}