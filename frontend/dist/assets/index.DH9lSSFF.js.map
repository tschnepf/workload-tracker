{"version":3,"file":"index.DH9lSSFF.js","sources":["../../src/pages/Departments/DepartmentForm.tsx","../../src/pages/Departments/DepartmentsList.tsx","../../src/pages/Departments/ManagerDashboard.tsx","../../src/components/departments/DepartmentHierarchy.tsx","../../src/pages/Departments/HierarchyView.tsx","../../src/pages/Departments/ReportsView.tsx"],"sourcesContent":["/**\r\n * Department Form - Create/Edit department modal with VSCode dark theme\r\n * Following PersonForm.tsx structure with proper field mapping\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Department, Person } from '@/types/models';\r\nimport Button from '@/components/ui/Button';\r\nimport Input from '@/components/ui/Input';\r\nimport Card from '@/components/ui/Card';\r\n\r\ninterface DepartmentFormData {\r\n  name: string;\r\n  parentDepartment: number | null;\r\n  manager: number | null;\r\n  description: string;\r\n  isActive: boolean;\r\n}\r\n\r\ninterface DepartmentFormProps {\r\n  department?: Department | null;\r\n  departments: Department[];\r\n  people: Person[];\r\n  onSave: (formData: Partial<Department>) => Promise<void>;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst DepartmentForm: React.FC<DepartmentFormProps> = ({\r\n  department,\r\n  departments,\r\n  people,\r\n  onSave,\r\n  onCancel,\r\n}) => {\r\n  const isEditing = !!department;\r\n\r\n  const [formData, setFormData] = useState<DepartmentFormData>({\r\n    name: '',\r\n    parentDepartment: null,\r\n    manager: null,\r\n    description: '',\r\n    isActive: true,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});\r\n\r\n  useEffect(() => {\r\n    if (department) {\r\n      setFormData({\r\n        name: department.name,\r\n        parentDepartment: department.parentDepartment,\r\n        manager: department.manager,\r\n        description: department.description || '',\r\n        isActive: department.isActive !== false,\r\n      });\r\n    } else {\r\n      setFormData({\r\n        name: '',\r\n        parentDepartment: null,\r\n        manager: null,\r\n        description: '',\r\n        isActive: true,\r\n      });\r\n    }\r\n  }, [department]);\r\n\r\n  const validateForm = (): boolean => {\r\n    const errors: Record<string, string> = {};\r\n\r\n    if (!formData.name.trim()) {\r\n      errors.name = 'Department name is required';\r\n    }\r\n\r\n    // Enhanced circular parent department validation\r\n    if (formData.parentDepartment === department?.id) {\r\n      errors.parentDepartment = 'Department cannot be its own parent';\r\n    } else if (formData.parentDepartment && department?.id) {\r\n      // Check for indirect circular references by walking up the hierarchy\r\n      const checkCircularReference = (parentId: number, visitedIds: Set<number> = new Set()): boolean => {\r\n        if (visitedIds.has(parentId)) return true; // Circular reference detected\r\n        if (visitedIds.size > 10) return true; // Prevent infinite recursion\r\n        \r\n        const parentDept = departments.find(d => d.id === parentId);\r\n        if (!parentDept || !parentDept.parentDepartment) return false;\r\n        \r\n        visitedIds.add(parentId);\r\n        return checkCircularReference(parentDept.parentDepartment, visitedIds);\r\n      };\r\n      \r\n      // Check if setting this parent would create a cycle\r\n      if (checkCircularReference(formData.parentDepartment)) {\r\n        errors.parentDepartment = 'This parent selection would create a circular hierarchy';\r\n      }\r\n    }\r\n\r\n    setValidationErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const updateData = {\r\n        name: formData.name.trim(),\r\n        parentDepartment: formData.parentDepartment,\r\n        manager: formData.manager,\r\n        description: formData.description.trim(),\r\n        isActive: formData.isActive,\r\n      };\r\n\r\n      await onSave(updateData);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to save department');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field: keyof DepartmentFormData, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n    \r\n    // Clear validation error for this field\r\n    if (validationErrors[field]) {\r\n      setValidationErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Filter departments to exclude current department from parent options\r\n  const parentDepartmentOptions = departments.filter(dept => dept.id !== department?.id);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n      <Card className=\"w-full max-w-lg bg-[#2d2d30] border-[#3e3e42] max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h2 className=\"text-xl font-bold text-[#cccccc]\">\r\n              {isEditing ? 'Edit Department' : 'Add Department'}\r\n            </h2>\r\n            <button\r\n              onClick={onCancel}\r\n              className=\"text-[#969696] hover:text-[#cccccc] text-xl\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            {error && (\r\n              <div className=\"p-3 bg-red-900/30 border border-red-600 rounded text-red-400\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-1\">\r\n                Department Name *\r\n              </label>\r\n              <Input\r\n                value={formData.name}\r\n                onChange={(e) => handleInputChange('name', e.target.value)}\r\n                placeholder=\"e.g. Engineering\"\r\n                className={`w-full ${validationErrors.name ? 'border-red-600' : ''}`}\r\n                disabled={loading}\r\n              />\r\n              {validationErrors.name && (\r\n                <p className=\"mt-1 text-sm text-red-400\">{validationErrors.name}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-1\">\r\n                Parent Department\r\n              </label>\r\n              <select\r\n                value={formData.parentDepartment || ''}\r\n                onChange={(e) => handleInputChange('parentDepartment', e.target.value ? parseInt(e.target.value) : null)}\r\n                className={`w-full px-3 py-2 bg-[#3e3e42] border border-[#3e3e42] rounded-md text-[#cccccc] focus:outline-none focus:ring-2 focus:ring-[#007acc] focus:border-transparent ${\r\n                  validationErrors.parentDepartment ? 'border-red-600' : ''\r\n                }`}\r\n                disabled={loading}\r\n              >\r\n                <option value=\"\">None (Top Level)</option>\r\n                {parentDepartmentOptions.map((dept) => (\r\n                  <option key={dept.id} value={dept.id}>\r\n                    {dept.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {validationErrors.parentDepartment && (\r\n                <p className=\"mt-1 text-sm text-red-400\">{validationErrors.parentDepartment}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-1\">\r\n                Manager\r\n              </label>\r\n              <select\r\n                value={formData.manager || ''}\r\n                onChange={(e) => handleInputChange('manager', e.target.value ? parseInt(e.target.value) : null)}\r\n                className=\"w-full px-3 py-2 bg-[#3e3e42] border border-[#3e3e42] rounded-md text-[#cccccc] focus:outline-none focus:ring-2 focus:ring-[#007acc] focus:border-transparent\"\r\n                disabled={loading}\r\n              >\r\n                <option value=\"\">None Assigned</option>\r\n                {people.map((person) => (\r\n                  <option key={person.id} value={person.id}>\r\n                    {person.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-[#cccccc] mb-1\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                value={formData.description}\r\n                onChange={(e) => handleInputChange('description', e.target.value)}\r\n                placeholder=\"Brief description of the department's purpose...\"\r\n                rows={3}\r\n                className=\"w-full px-3 py-2 bg-[#3e3e42] border border-[#3e3e42] rounded-md text-[#cccccc] focus:outline-none focus:ring-2 focus:ring-[#007acc] focus:border-transparent resize-none\"\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"isActive\"\r\n                checked={formData.isActive}\r\n                onChange={(e) => handleInputChange('isActive', e.target.checked)}\r\n                className=\"mr-2 w-4 h-4 text-[#007acc] bg-[#3e3e42] border-[#3e3e42] rounded focus:ring-[#007acc] focus:ring-2\"\r\n                disabled={loading}\r\n              />\r\n              <label htmlFor=\"isActive\" className=\"text-sm text-[#cccccc]\">\r\n                Department is active\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3 pt-4\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"secondary\"\r\n                onClick={onCancel}\r\n                disabled={loading}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? 'Saving...' : (isEditing ? 'Update' : 'Create')}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DepartmentForm;","/**\r\n * Departments List - Department management interface\r\n * Following PeopleList.tsx structure with VSCode dark theme\r\n */\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Department, Person } from '@/types/models';\r\nimport { departmentsApi, peopleApi } from '@/services/api';\r\nimport Sidebar from '@/components/layout/Sidebar';\r\nimport Button from '@/components/ui/Button';\r\nimport Card from '@/components/ui/Card';\r\nimport Input from '@/components/ui/Input';\r\nimport DepartmentForm from './DepartmentForm';\r\n\r\nconst DepartmentsList: React.FC = () => {\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [people, setPeople] = useState<Person[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<Department | null>(null);\r\n  const [selectedIndex, setSelectedIndex] = useState(-1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingDepartment, setEditingDepartment] = useState<Department | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasAutoSelected, setHasAutoSelected] = useState(false); // Track if we've auto-selected\r\n\r\n  useEffect(() => {\r\n    loadDepartments();\r\n    loadPeople();\r\n  }, []);\r\n\r\n  // Filter and sort departments\r\n  const filteredAndSortedDepartments = useMemo(() => {\r\n    const filtered = departments.filter(dept =>\r\n      dept.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (dept.description && dept.description.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    );\r\n    return filtered.sort((a, b) => a.name.localeCompare(b.name));\r\n  }, [departments, searchTerm]);\r\n\r\n  // Auto-select first department when departments are loaded (per R2-REBUILD-STANDARDS.md)\r\n  // Only auto-select once when departments first load, never override manual selections\r\n  useEffect(() => {\r\n    if (filteredAndSortedDepartments.length > 0 && !selectedDepartment && !hasAutoSelected) {\r\n      setSelectedDepartment(filteredAndSortedDepartments[0]);\r\n      setSelectedIndex(0);\r\n      setHasAutoSelected(true);\r\n    }\r\n  }, [filteredAndSortedDepartments, hasAutoSelected]);\r\n\r\n  const loadDepartments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await departmentsApi.list();\r\n      setDepartments(response.results || []);\r\n    } catch (err: any) {\r\n      setError('Failed to load departments');\r\n      console.error('Error loading departments:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadPeople = async () => {\r\n    try {\r\n      const response = await peopleApi.list();\r\n      setPeople(response.results || []);\r\n    } catch (err) {\r\n      console.error('Error loading people:', err);\r\n    }\r\n  };\r\n\r\n  const handleCreateDepartment = () => {\r\n    setEditingDepartment(null);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleEditDepartment = (department: Department) => {\r\n    setEditingDepartment(department);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleSaveDepartment = async (formData: Partial<Department>) => {\r\n    try {\r\n      \r\n      let savedDepartment: Department;\r\n      if (editingDepartment?.id) {\r\n        savedDepartment = await departmentsApi.update(editingDepartment.id, formData);\r\n      } else {\r\n        savedDepartment = await departmentsApi.create(formData as any);\r\n      }\r\n\r\n      // Refresh departments list\r\n      await loadDepartments();\r\n      \r\n      // Select the saved/updated department\r\n      setSelectedDepartment(savedDepartment);\r\n      setShowModal(false);\r\n      setEditingDepartment(null);\r\n    } catch (err: any) {\r\n      console.error('Failed to save department:', err);\r\n      setError(`Failed to save department: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDepartment = async (department: Department) => {\r\n    if (!department.id) return;\r\n    \r\n    const confirmed = window.confirm(`Are you sure you want to delete \"${department.name}\"?`);\r\n    if (!confirmed) return;\r\n\r\n    try {\r\n      await departmentsApi.delete(department.id);\r\n      await loadDepartments();\r\n      \r\n      // Clear selection if deleted department was selected\r\n      if (selectedDepartment?.id === department.id) {\r\n        setSelectedDepartment(null);\r\n        setSelectedIndex(-1);\r\n      }\r\n    } catch (err: any) {\r\n      setError(`Failed to delete department: ${err.message}`);\r\n      console.error('Error deleting department:', err);\r\n    }\r\n  };\r\n\r\n  const getManagerName = (managerId: number | null) => {\r\n    if (!managerId) return 'None';\r\n    const manager = people.find(p => p.id === managerId);\r\n    return manager ? manager.name : 'Unknown';\r\n  };\r\n\r\n  const getParentDepartmentName = (parentId: number | null) => {\r\n    if (!parentId) return 'None';\r\n    const parent = departments.find(d => d.id === parentId);\r\n    return parent ? parent.name : 'Unknown';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex h-screen bg-[#1e1e1e]\">\r\n        <Sidebar />\r\n        <div className=\"flex-1 p-8 text-[#cccccc]\">\r\n          Loading departments...\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-[#1e1e1e]\">\r\n      <Sidebar />\r\n      \r\n      <div className=\"flex-1 overflow-hidden\">\r\n        <div className=\"flex h-full\">\r\n          \r\n          {/* Left Panel - Department List */}\r\n          <div className=\"w-1/3 p-6 border-r border-[#3e3e42] bg-[#252526]\">\r\n            <div className=\"mb-6\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h1 className=\"text-2xl font-bold text-[#cccccc]\">Departments</h1>\r\n                <Button \r\n                  variant=\"primary\" \r\n                  onClick={handleCreateDepartment}\r\n                >\r\n                  Add Department\r\n                </Button>\r\n              </div>\r\n              \r\n              <Input\r\n                placeholder=\"Search departments...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n\r\n            {error && (\r\n              <div className=\"mb-4 p-3 bg-red-900/30 border border-red-600 rounded text-red-400\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-3\">\r\n              {filteredAndSortedDepartments.map((department, index) => (\r\n                <Card\r\n                  key={department.id}\r\n                  className={`p-4 cursor-pointer transition-colors bg-[#2d2d30] border-[#3e3e42] hover:bg-[#3e3e42]/50 ${\r\n                    selectedDepartment?.id === department.id ? 'ring-2 ring-[#007acc]' : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    setSelectedDepartment(department);\r\n                    setSelectedIndex(index);\r\n                  }}\r\n                >\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"font-semibold text-[#cccccc] mb-1\">\r\n                        {department.name}\r\n                      </h3>\r\n                      <p className=\"text-sm text-[#969696] mb-2\">\r\n                        Manager: {department.managerName || 'None'}\r\n                      </p>\r\n                      {department.description && (\r\n                        <p className=\"text-sm text-[#969696] line-clamp-2\">\r\n                          {department.description}\r\n                        </p>\r\n                      )}\r\n                      {department.parentDepartment && (\r\n                        <p className=\"text-xs text-[#969696] mt-1\">\r\n                          Parent: {getParentDepartmentName(department.parentDepartment)}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"ml-4\">\r\n                      <span className={`px-2 py-1 rounded text-xs ${\r\n                        department.isActive \r\n                          ? 'bg-emerald-500/20 text-emerald-400' \r\n                          : 'bg-gray-500/20 text-gray-400'\r\n                      }`}>\r\n                        {department.isActive ? 'Active' : 'Inactive'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n\r\n              {filteredAndSortedDepartments.length === 0 && (\r\n                <div className=\"text-center py-8 text-[#969696]\">\r\n                  {searchTerm ? 'No departments match your search.' : 'No departments found.'}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Panel - Department Details */}\r\n          <div className=\"flex-1 p-6 bg-[#1e1e1e]\">\r\n            {selectedDepartment ? (\r\n              <div>\r\n                <div className=\"flex justify-between items-start mb-6\">\r\n                  <div>\r\n                    <h2 className=\"text-2xl font-bold text-[#cccccc] mb-2\">\r\n                      {selectedDepartment.name}\r\n                    </h2>\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <span className={`px-3 py-1 rounded text-sm ${\r\n                        selectedDepartment.isActive \r\n                          ? 'bg-emerald-500/20 text-emerald-400' \r\n                          : 'bg-gray-500/20 text-gray-400'\r\n                      }`}>\r\n                        {selectedDepartment.isActive ? 'Active' : 'Inactive'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    <Button \r\n                      variant=\"secondary\" \r\n                      onClick={() => handleEditDepartment(selectedDepartment)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button \r\n                      variant=\"danger\" \r\n                      onClick={() => handleDeleteDepartment(selectedDepartment)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\r\n                  <Card className=\"p-6 bg-[#2d2d30] border-[#3e3e42]\">\r\n                    <h3 className=\"font-semibold text-[#cccccc] mb-4\">Department Info</h3>\r\n                    <div className=\"space-y-3\">\r\n                      <div>\r\n                        <span className=\"text-sm text-[#969696]\">Name:</span>\r\n                        <p className=\"text-[#cccccc]\">{selectedDepartment.name}</p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-sm text-[#969696]\">Manager:</span>\r\n                        <p className=\"text-[#cccccc]\">{selectedDepartment.managerName || 'None assigned'}</p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-sm text-[#969696]\">Parent Department:</span>\r\n                        <p className=\"text-[#cccccc]\">\r\n                          {getParentDepartmentName(selectedDepartment.parentDepartment)}\r\n                        </p>\r\n                      </div>\r\n                      {selectedDepartment.description && (\r\n                        <div>\r\n                          <span className=\"text-sm text-[#969696]\">Description:</span>\r\n                          <p className=\"text-[#cccccc] mt-1\">{selectedDepartment.description}</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </Card>\r\n\r\n                  <Card className=\"p-6 bg-[#2d2d30] border-[#3e3e42]\">\r\n                    <h3 className=\"font-semibold text-[#cccccc] mb-4\">System Info</h3>\r\n                    <div className=\"space-y-3\">\r\n                      <div>\r\n                        <span className=\"text-sm text-[#969696]\">Created:</span>\r\n                        <p className=\"text-[#cccccc]\">\r\n                          {selectedDepartment.createdAt ? \r\n                            new Date(selectedDepartment.createdAt).toLocaleDateString() : \r\n                            'Unknown'\r\n                          }\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-sm text-[#969696]\">Updated:</span>\r\n                        <p className=\"text-[#cccccc]\">\r\n                          {selectedDepartment.updatedAt ? \r\n                            new Date(selectedDepartment.updatedAt).toLocaleDateString() : \r\n                            'Unknown'\r\n                          }\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-sm text-[#969696]\">Status:</span>\r\n                        <p className={selectedDepartment.isActive ? 'text-emerald-400' : 'text-gray-400'}>\r\n                          {selectedDepartment.isActive ? 'Active' : 'Inactive'}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex items-center justify-center h-full text-[#969696]\">\r\n                <div className=\"text-center\">\r\n                  <h3 className=\"text-xl mb-2\">Select a Department</h3>\r\n                  <p>Choose a department from the list to view details</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Department Form Modal */}\r\n      {showModal && (\r\n        <DepartmentForm\r\n          department={editingDepartment}\r\n          departments={departments}\r\n          people={people}\r\n          onSave={handleSaveDepartment}\r\n          onCancel={() => {\r\n            setShowModal(false);\r\n            setEditingDepartment(null);\r\n            setError(null);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DepartmentsList;","/**\r\n * Department Manager Dashboard - Specialized view for department managers\r\n * Shows department-specific metrics and team management tools\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Layout from '@/components/layout/Layout';\r\nimport Card from '@/components/ui/Card';\r\nimport UtilizationBadge from '@/components/ui/UtilizationBadge';\r\nimport { dashboardApi, departmentsApi, peopleApi } from '@/services/api';\r\nimport { DashboardData, Department, Person } from '@/types/models';\r\n\r\nconst ManagerDashboard: React.FC = () => {\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<string>('');\r\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\r\n  const [departmentPeople, setDepartmentPeople] = useState<Person[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [weeksPeriod, setWeeksPeriod] = useState<number>(1);\r\n\r\n  useEffect(() => {\r\n    loadDepartments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedDepartment) {\r\n      loadDepartmentData();\r\n      loadDepartmentPeople();\r\n    }\r\n  }, [selectedDepartment, weeksPeriod]);\r\n\r\n  const loadDepartments = async () => {\r\n    try {\r\n      const response = await departmentsApi.list();\r\n      const depts = response.results || [];\r\n      setDepartments(depts);\r\n      \r\n      // Auto-select first department if available\r\n      if (depts.length > 0 && !selectedDepartment) {\r\n        setSelectedDepartment(depts[0].id!.toString());\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading departments:', err);\r\n      setError('Failed to load departments');\r\n    }\r\n  };\r\n\r\n  const loadDepartmentData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await dashboardApi.getDashboard(weeksPeriod, selectedDepartment);\r\n      setDashboardData(response);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to load department data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadDepartmentPeople = async () => {\r\n    try {\r\n      const response = await peopleApi.list();\r\n      const allPeople = response.results || [];\r\n      const deptPeople = allPeople.filter(person => \r\n        person.department?.toString() === selectedDepartment\r\n      );\r\n      setDepartmentPeople(deptPeople);\r\n    } catch (err) {\r\n      console.error('Error loading department people:', err);\r\n    }\r\n  };\r\n\r\n  const selectedDepartmentInfo = departments.find(d => d.id?.toString() === selectedDepartment);\r\n\r\n  if (loading && !dashboardData) {\r\n    return (\r\n      <Layout>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-[#969696]\">Loading manager dashboard...</div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-start\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-[#cccccc]\">\r\n              Manager Dashboard\r\n            </h1>\r\n            <p className=\"text-[#969696] mt-2\">\r\n              Department-focused management and team insights\r\n              {selectedDepartmentInfo && (\r\n                <span className=\"block mt-1 text-[#cccccc]\">\r\n                  Managing: {selectedDepartmentInfo.name}\r\n                </span>\r\n              )}\r\n            </p>\r\n          </div>\r\n          \r\n          {/* Controls */}\r\n          <div className=\"flex items-center gap-6\">\r\n            {/* Department Selector */}\r\n            <div className=\"flex items-center gap-3\">\r\n              <label className=\"text-sm text-[#969696]\">Department:</label>\r\n              <select\r\n                value={selectedDepartment}\r\n                onChange={(e) => setSelectedDepartment(e.target.value)}\r\n                className=\"px-3 py-1.5 text-sm bg-[#3e3e42] border border-[#3e3e42] rounded text-[#cccccc] focus:border-[#007acc] focus:outline-none min-w-[140px]\"\r\n              >\r\n                <option value=\"\">Select Department...</option>\r\n                {departments.map((dept) => (\r\n                  <option key={dept.id} value={dept.id}>\r\n                    {dept.name} {dept.managerName && `(${dept.managerName})`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            {/* Time Period Selector */}\r\n            <div className=\"flex items-center gap-3\">\r\n              <label className=\"text-sm text-[#969696]\">Period:</label>\r\n              <div className=\"flex gap-1\">\r\n                {[1, 2, 4, 8].map((weeks) => (\r\n                  <button\r\n                    key={weeks}\r\n                    onClick={() => setWeeksPeriod(weeks)}\r\n                    className={`px-2 py-1 text-xs rounded transition-colors ${\r\n                      weeksPeriod === weeks\r\n                        ? 'bg-[#007acc] text-white'\r\n                        : 'bg-[#3e3e42] text-[#969696] hover:text-[#cccccc] hover:bg-[#4e4e52]'\r\n                    }`}\r\n                  >\r\n                    {weeks}w\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {error && (\r\n          <Card className=\"bg-red-500/20 border-red-500/50 p-4\">\r\n            <div className=\"text-red-400\">{error}</div>\r\n          </Card>\r\n        )}\r\n\r\n        {!selectedDepartment ? (\r\n          <Card className=\"bg-[#2d2d30] border-[#3e3e42] p-8 text-center\">\r\n            <div className=\"text-[#969696]\">\r\n              <h3 className=\"text-lg mb-2\">Select a Department</h3>\r\n              <p>Choose a department to view management insights and team metrics</p>\r\n            </div>\r\n          </Card>\r\n        ) : dashboardData ? (\r\n          <>\r\n            {/* Department Summary */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n                <div className=\"text-[#969696] text-sm\">Team Members</div>\r\n                <div className=\"text-2xl font-bold text-[#cccccc]\">\r\n                  {dashboardData.summary.total_people}\r\n                </div>\r\n                <div className=\"text-xs text-[#969696] mt-1\">\r\n                  In {selectedDepartmentInfo?.name}\r\n                </div>\r\n              </Card>\r\n              \r\n              <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n                <div className=\"text-[#969696] text-sm\">Department Utilization</div>\r\n                <div className=\"text-2xl font-bold text-blue-400\">\r\n                  {dashboardData.summary.avg_utilization}%\r\n                </div>\r\n                <div className=\"text-xs text-[#969696] mt-1\">\r\n                  {weeksPeriod === 1 ? 'Current week' : `${weeksPeriod}-week average`}\r\n                </div>\r\n              </Card>\r\n              \r\n              <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n                <div className=\"text-[#969696] text-sm\">Active Assignments</div>\r\n                <div className=\"text-2xl font-bold text-[#cccccc]\">\r\n                  {dashboardData.summary.total_assignments}\r\n                </div>\r\n                <div className=\"text-xs text-[#969696] mt-1\">\r\n                  Department projects\r\n                </div>\r\n              </Card>\r\n              \r\n              <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n                <div className=\"text-[#969696] text-sm\">Needs Attention</div>\r\n                <div className=\"text-2xl font-bold text-red-400\">\r\n                  {dashboardData.summary.overallocated_count}\r\n                </div>\r\n                <div className=\"text-xs text-[#969696] mt-1\">\r\n                  Overallocated people\r\n                </div>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Team Overview */}\r\n            <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n              <h3 className=\"text-lg font-semibold text-[#cccccc] mb-4\">\r\n                Team Management Overview\r\n              </h3>\r\n              <div className=\"space-y-3 max-h-96 overflow-y-auto\">\r\n                {dashboardData.team_overview.map(person => (\r\n                  <div key={person.id} className=\"flex items-center justify-between p-3 bg-[#3e3e42]/50 rounded-lg\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"font-medium text-[#cccccc]\">{person.name}</div>\r\n                      <div className=\"text-sm text-[#969696]\">\r\n                        {person.role} • {person.allocated_hours}h / {person.capacity}h\r\n                      </div>\r\n                      {weeksPeriod > 1 && person.peak_utilization_percent !== person.utilization_percent && (\r\n                        <div className=\"text-xs text-amber-400 mt-1\">\r\n                          Peak: {person.peak_utilization_percent}%\r\n                          {person.is_peak_overallocated && ' ⚠️'}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex flex-col items-end gap-1\">\r\n                      <UtilizationBadge percentage={person.utilization_percent} />\r\n                      {person.is_overallocated && (\r\n                        <div className=\"text-xs text-red-400\">\r\n                          Action needed\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {dashboardData.team_overview.length === 0 && (\r\n                  <div className=\"text-center py-8 text-[#969696]\">\r\n                    No team members found in this department\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Card>\r\n\r\n            {/* Manager Actions Panel */}\r\n            <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n              <h3 className=\"text-lg font-semibold text-[#cccccc] mb-4\">\r\n                Quick Actions\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <button className=\"p-4 bg-[#3e3e42]/50 rounded-lg border border-[#3e3e42] hover:bg-[#3e3e42]/70 transition-colors text-left\">\r\n                  <div className=\"text-[#cccccc] font-medium mb-1\">👥 Manage Team</div>\r\n                  <div className=\"text-sm text-[#969696]\">Add, edit, or reassign team members</div>\r\n                </button>\r\n                \r\n                <button className=\"p-4 bg-[#3e3e42]/50 rounded-lg border border-[#3e3e42] hover:bg-[#3e3e42]/70 transition-colors text-left\">\r\n                  <div className=\"text-[#cccccc] font-medium mb-1\">📊 View Reports</div>\r\n                  <div className=\"text-sm text-[#969696]\">Department performance analytics</div>\r\n                </button>\r\n                \r\n                <button className=\"p-4 bg-[#3e3e42]/50 rounded-lg border border-[#3e3e42] hover:bg-[#3e3e42]/70 transition-colors text-left\">\r\n                  <div className=\"text-[#cccccc] font-medium mb-1\">⚖️ Balance Workload</div>\r\n                  <div className=\"text-sm text-[#969696]\">Redistribute assignments</div>\r\n                </button>\r\n              </div>\r\n            </Card>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ManagerDashboard;","/**\r\n * Department Hierarchy Visualization - Organizational chart component\r\n * Shows parent-child department relationships with team information\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Department, Person } from '@/types/models';\r\nimport Card from '@/components/ui/Card';\r\n\r\ninterface DepartmentNode extends Department {\r\n  children: DepartmentNode[];\r\n  people: Person[];\r\n  level: number;\r\n}\r\n\r\ninterface DepartmentHierarchyProps {\r\n  departments: Department[];\r\n  people: Person[];\r\n  onDepartmentClick?: (department: Department) => void;\r\n  selectedDepartmentId?: number;\r\n}\r\n\r\nconst DepartmentHierarchy: React.FC<DepartmentHierarchyProps> = ({\r\n  departments,\r\n  people,\r\n  onDepartmentClick,\r\n  selectedDepartmentId\r\n}) => {\r\n  const [hierarchyTree, setHierarchyTree] = useState<DepartmentNode[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (departments.length > 0) {\r\n      buildHierarchyTree();\r\n    }\r\n  }, [departments, people]);\r\n\r\n  const buildHierarchyTree = () => {\r\n    // Create department nodes with people assigned to each\r\n    const deptNodes: { [key: number]: DepartmentNode } = {};\r\n    \r\n    departments.forEach(dept => {\r\n      const departmentPeople = people.filter(person => person.department === dept.id);\r\n      deptNodes[dept.id!] = {\r\n        ...dept,\r\n        children: [],\r\n        people: departmentPeople,\r\n        level: 0\r\n      };\r\n    });\r\n\r\n    // Build parent-child relationships\r\n    const rootNodes: DepartmentNode[] = [];\r\n    \r\n    departments.forEach(dept => {\r\n      if (dept.parentDepartment && deptNodes[dept.parentDepartment]) {\r\n        // This department has a parent\r\n        deptNodes[dept.parentDepartment].children.push(deptNodes[dept.id!]);\r\n      } else {\r\n        // This is a root department\r\n        rootNodes.push(deptNodes[dept.id!]);\r\n      }\r\n    });\r\n\r\n    // Calculate levels for proper rendering\r\n    const calculateLevels = (nodes: DepartmentNode[], level: number = 0) => {\r\n      nodes.forEach(node => {\r\n        node.level = level;\r\n        calculateLevels(node.children, level + 1);\r\n      });\r\n    };\r\n    \r\n    calculateLevels(rootNodes);\r\n    setHierarchyTree(rootNodes);\r\n  };\r\n\r\n  const DepartmentCard: React.FC<{ node: DepartmentNode }> = ({ node }) => {\r\n    const isSelected = selectedDepartmentId === node.id;\r\n    const hasChildren = node.children.length > 0;\r\n    \r\n    return (\r\n      <div className=\"relative\">\r\n        <Card \r\n          className={`p-4 cursor-pointer transition-all bg-[#2d2d30] border-[#3e3e42] hover:bg-[#3e3e42]/50 ${\r\n            isSelected ? 'ring-2 ring-[#007acc] bg-[#007acc]/10' : ''\r\n          }`}\r\n          onClick={() => onDepartmentClick?.(node)}\r\n        >\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex-1 min-w-0\">\r\n              {/* Department Name */}\r\n              <h3 className=\"font-semibold text-[#cccccc] mb-1 truncate\">\r\n                {node.name}\r\n              </h3>\r\n              \r\n              {/* Manager */}\r\n              <div className=\"text-xs text-[#969696] mb-2\">\r\n                Manager: {node.managerName || 'None assigned'}\r\n              </div>\r\n              \r\n              {/* Team Size */}\r\n              <div className=\"flex items-center gap-4 text-xs\">\r\n                <div className=\"text-blue-400\">\r\n                  👥 {node.people.length} people\r\n                </div>\r\n                \r\n                {hasChildren && (\r\n                  <div className=\"text-emerald-400\">\r\n                    🏢 {node.children.length} sub-dept{node.children.length !== 1 ? 's' : ''}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Description if available */}\r\n              {node.description && (\r\n                <div className=\"text-xs text-[#969696] mt-2 line-clamp-2\">\r\n                  {node.description}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Status Indicator */}\r\n            <div className={`px-2 py-1 rounded text-xs ${\r\n              node.isActive \r\n                ? 'bg-emerald-500/20 text-emerald-400' \r\n                : 'bg-gray-500/20 text-gray-400'\r\n            }`}>\r\n              {node.isActive ? 'Active' : 'Inactive'}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* People Preview */}\r\n          {node.people.length > 0 && (\r\n            <div className=\"mt-3 pt-3 border-t border-[#3e3e42]/50\">\r\n              <div className=\"flex flex-wrap gap-1\">\r\n                {node.people.slice(0, 3).map((person, index) => (\r\n                  <span \r\n                    key={person.id} \r\n                    className=\"px-2 py-1 bg-[#3e3e42]/50 text-xs text-[#cccccc] rounded\"\r\n                  >\r\n                    {person.name}\r\n                  </span>\r\n                ))}\r\n                {node.people.length > 3 && (\r\n                  <span className=\"px-2 py-1 bg-[#3e3e42]/30 text-xs text-[#969696] rounded\">\r\n                    +{node.people.length - 3} more\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Card>\r\n        \r\n        {/* Connection Lines */}\r\n        {hasChildren && (\r\n          <>\r\n            {/* Vertical line down */}\r\n            <div className=\"absolute left-1/2 bottom-0 w-px h-6 bg-[#3e3e42] transform -translate-x-0.5\"></div>\r\n            \r\n            {/* Horizontal line across children */}\r\n            {node.children.length > 1 && (\r\n              <div className=\"absolute top-full left-1/2 mt-6 h-px bg-[#3e3e42] transform -translate-y-0.5\"\r\n                style={{\r\n                  width: `${(node.children.length - 1) * 280 + 200}px`,\r\n                  left: `calc(50% - ${((node.children.length - 1) * 280 + 200) / 2}px)`\r\n                }}\r\n              ></div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderHierarchyLevel = (nodes: DepartmentNode[], level: number = 0): React.ReactNode => {\r\n    if (nodes.length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"space-y-8\">\r\n        <div className={`flex ${nodes.length === 1 ? 'justify-center' : 'justify-center space-x-8'} flex-wrap gap-8`}>\r\n          {nodes.map((node) => (\r\n            <div key={node.id} className=\"flex flex-col items-center relative\">\r\n              {/* Vertical connection line from parent */}\r\n              {level > 0 && (\r\n                <div className=\"w-px h-6 bg-[#3e3e42] mb-2\"></div>\r\n              )}\r\n              \r\n              <div className=\"w-64\">\r\n                <DepartmentCard node={node} />\r\n              </div>\r\n              \r\n              {/* Render children */}\r\n              {node.children.length > 0 && (\r\n                <div className=\"mt-8\">\r\n                  {renderHierarchyLevel(node.children, level + 1)}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (hierarchyTree.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-8 text-[#969696]\">\r\n        <h3 className=\"text-lg mb-2\">No Department Hierarchy</h3>\r\n        <p className=\"text-sm\">Create departments to see the organizational structure</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {/* Legend */}\r\n      <div className=\"mb-6 p-4 bg-[#2d2d30] border border-[#3e3e42] rounded-lg\">\r\n        <h4 className=\"text-sm font-medium text-[#cccccc] mb-2\">Legend</h4>\r\n        <div className=\"flex flex-wrap gap-4 text-xs text-[#969696]\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <div className=\"w-2 h-2 bg-blue-400 rounded\"></div>\r\n            <span>Team members</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-1\">\r\n            <div className=\"w-2 h-2 bg-emerald-400 rounded\"></div>\r\n            <span>Sub-departments</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-1\">\r\n            <div className=\"w-2 h-2 bg-[#007acc] rounded\"></div>\r\n            <span>Selected department</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hierarchy Tree */}\r\n      <div className=\"overflow-x-auto pb-6\">\r\n        <div className=\"min-w-max px-4\">\r\n          {renderHierarchyLevel(hierarchyTree)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DepartmentHierarchy;","/**\r\n * Department Hierarchy View - Full page organizational chart\r\n * Shows complete department structure with navigation and details\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Layout from '@/components/layout/Layout';\r\nimport Card from '@/components/ui/Card';\r\nimport DepartmentHierarchy from '@/components/departments/DepartmentHierarchy';\r\nimport { Department, Person } from '@/types/models';\r\nimport { departmentsApi, peopleApi } from '@/services/api';\r\n\r\nconst HierarchyView: React.FC = () => {\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [people, setPeople] = useState<Person[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<Department | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const [deptResponse, peopleResponse] = await Promise.all([\r\n        departmentsApi.list(),\r\n        peopleApi.list()\r\n      ]);\r\n      \r\n      setDepartments(deptResponse.results || []);\r\n      setPeople(peopleResponse.results || []);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to load data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDepartmentClick = (department: Department) => {\r\n    setSelectedDepartment(department);\r\n  };\r\n\r\n  const getDepartmentStats = (department: Department) => {\r\n    const deptPeople = people.filter(p => p.department === department.id);\r\n    const subDepartments = departments.filter(d => d.parentDepartment === department.id);\r\n    \r\n    return {\r\n      directReports: deptPeople.length,\r\n      subDepartments: subDepartments.length,\r\n      totalTeamSize: deptPeople.length + subDepartments.reduce((total, subDept) => {\r\n        return total + people.filter(p => p.department === subDept.id).length;\r\n      }, 0)\r\n    };\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Layout>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-[#969696]\">Loading organizational structure...</div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-start\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-[#cccccc]\">\r\n              Department Hierarchy\r\n            </h1>\r\n            <p className=\"text-[#969696] mt-2\">\r\n              Organizational structure and team relationships\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"text-right\">\r\n            <div className=\"text-sm text-[#969696]\">\r\n              <div>{departments.length} departments</div>\r\n              <div>{people.length} people</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {error && (\r\n          <Card className=\"bg-red-500/20 border-red-500/50 p-4\">\r\n            <div className=\"text-red-400\">Error: {error}</div>\r\n            <button\r\n              onClick={loadData}\r\n              className=\"mt-2 text-sm text-[#007acc] hover:text-[#1e90ff]\"\r\n            >\r\n              Retry\r\n            </button>\r\n          </Card>\r\n        )}\r\n\r\n        {departments.length === 0 ? (\r\n          <Card className=\"bg-[#2d2d30] border-[#3e3e42] p-8 text-center\">\r\n            <div className=\"text-[#969696]\">\r\n              <h3 className=\"text-lg mb-2\">No Departments</h3>\r\n              <p>Create departments to see the organizational hierarchy</p>\r\n            </div>\r\n          </Card>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 xl:grid-cols-4 gap-6\">\r\n            {/* Hierarchy Visualization */}\r\n            <div className=\"xl:col-span-3\">\r\n              <Card className=\"bg-[#2d2d30] border-[#3e3e42] p-6\">\r\n                <h3 className=\"text-lg font-semibold text-[#cccccc] mb-6\">\r\n                  Organizational Chart\r\n                </h3>\r\n                <DepartmentHierarchy\r\n                  departments={departments}\r\n                  people={people}\r\n                  onDepartmentClick={handleDepartmentClick}\r\n                  selectedDepartmentId={selectedDepartment?.id}\r\n                />\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Department Details Panel */}\r\n            <div className=\"xl:col-span-1\">\r\n              <Card className=\"bg-[#2d2d30] border-[#3e3e42] p-6 sticky top-6\">\r\n                {selectedDepartment ? (\r\n                  <div>\r\n                    <h3 className=\"text-lg font-semibold text-[#cccccc] mb-4\">\r\n                      Department Details\r\n                    </h3>\r\n                    \r\n                    <div className=\"space-y-4\">\r\n                      {/* Basic Info */}\r\n                      <div>\r\n                        <h4 className=\"font-medium text-[#cccccc] mb-2\">\r\n                          {selectedDepartment.name}\r\n                        </h4>\r\n                        <div className=\"space-y-1 text-sm\">\r\n                          <div className=\"text-[#969696]\">\r\n                            Manager: <span className=\"text-[#cccccc]\">\r\n                              {selectedDepartment.managerName || 'None assigned'}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"text-[#969696]\">\r\n                            Status: <span className={selectedDepartment.isActive ? 'text-emerald-400' : 'text-gray-400'}>\r\n                              {selectedDepartment.isActive ? 'Active' : 'Inactive'}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Statistics */}\r\n                      <div>\r\n                        <h4 className=\"font-medium text-[#cccccc] mb-2\">Statistics</h4>\r\n                        {(() => {\r\n                          const stats = getDepartmentStats(selectedDepartment);\r\n                          return (\r\n                            <div className=\"space-y-1 text-sm\">\r\n                              <div className=\"text-[#969696]\">\r\n                                Direct reports: <span className=\"text-[#cccccc]\">{stats.directReports}</span>\r\n                              </div>\r\n                              <div className=\"text-[#969696]\">\r\n                                Sub-departments: <span className=\"text-[#cccccc]\">{stats.subDepartments}</span>\r\n                              </div>\r\n                              <div className=\"text-[#969696]\">\r\n                                Total team size: <span className=\"text-[#cccccc]\">{stats.totalTeamSize}</span>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* Description */}\r\n                      {selectedDepartment.description && (\r\n                        <div>\r\n                          <h4 className=\"font-medium text-[#cccccc] mb-2\">Description</h4>\r\n                          <p className=\"text-sm text-[#969696]\">\r\n                            {selectedDepartment.description}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Team Members */}\r\n                      <div>\r\n                        <h4 className=\"font-medium text-[#cccccc] mb-2\">Team Members</h4>\r\n                        {(() => {\r\n                          const teamMembers = people.filter(p => p.department === selectedDepartment.id);\r\n                          return teamMembers.length > 0 ? (\r\n                            <div className=\"space-y-2\">\r\n                              {teamMembers.map(person => (\r\n                                <div key={person.id} className=\"text-sm\">\r\n                                  <div className=\"text-[#cccccc]\">{person.name}</div>\r\n                                  <div className=\"text-[#969696] text-xs\">\r\n                                    {person.weeklyCapacity}h capacity\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"text-sm text-[#969696]\">No team members assigned</div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-center text-[#969696]\">\r\n                    <h3 className=\"text-lg mb-2\">Select a Department</h3>\r\n                    <p className=\"text-sm\">Click on any department in the hierarchy to view details</p>\r\n                  </div>\r\n                )}\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HierarchyView;","/**\r\n * Department Reports - Comprehensive analytics and reporting\r\n * Provides detailed department performance metrics and insights\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Layout from '@/components/layout/Layout';\r\nimport Card from '@/components/ui/Card';\r\nimport UtilizationBadge from '@/components/ui/UtilizationBadge';\r\nimport { dashboardApi, departmentsApi, peopleApi, personSkillsApi } from '@/services/api';\r\nimport { DashboardData, Department, Person, PersonSkill } from '@/types/models';\r\n\r\ninterface DepartmentReport {\r\n  department: Department;\r\n  metrics: {\r\n    teamSize: number;\r\n    avgUtilization: number;\r\n    peakUtilization: number;\r\n    totalAssignments: number;\r\n    overallocatedCount: number;\r\n    availableHours: number;\r\n    utilizationTrend: 'increasing' | 'decreasing' | 'stable';\r\n  };\r\n  people: Person[];\r\n  dashboardData?: DashboardData;\r\n  skills: {\r\n    totalSkills: number;\r\n    topSkills: Array<{ name: string; count: number }>;\r\n    uniqueSkills: number;\r\n    skillGaps: string[];\r\n  };\r\n}\r\n\r\nconst ReportsView: React.FC = () => {\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [reports, setReports] = useState<DepartmentReport[]>([]);\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<number>(4); // weeks\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [peopleSkills, setPeopleSkills] = useState<PersonSkill[]>([]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [selectedTimeframe]);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Load departments, people, and skills\r\n      const [deptResponse, peopleResponse, skillsResponse] = await Promise.all([\r\n        departmentsApi.list(),\r\n        peopleApi.list(),\r\n        personSkillsApi.list()\r\n      ]);\r\n      \r\n      const allDepartments = deptResponse.results || [];\r\n      const allPeople = peopleResponse.results || [];\r\n      const allSkills = skillsResponse.results || [];\r\n      \r\n      setDepartments(allDepartments);\r\n      setPeopleSkills(allSkills);\r\n\r\n      // Generate reports for each department\r\n      const departmentReports = await Promise.all(\r\n        allDepartments.map(async (dept) => {\r\n          const deptPeople = allPeople.filter(p => p.department === dept.id);\r\n          \r\n          let dashboardData: DashboardData | undefined;\r\n          try {\r\n            dashboardData = await dashboardApi.getDashboard(selectedTimeframe, dept.id?.toString());\r\n          } catch (err) {\r\n            console.error(`Error loading dashboard data for department ${dept.name}:`, err);\r\n          }\r\n\r\n          // Calculate basic metrics\r\n          const totalCapacity = deptPeople.reduce((sum, p) => sum + (p.weeklyCapacity || 36), 0);\r\n          const avgUtilization = dashboardData?.summary.avg_utilization || 0;\r\n          const availableHours = totalCapacity - (totalCapacity * avgUtilization / 100);\r\n\r\n          // Calculate skills analysis\r\n          const deptPeopleIds = deptPeople.map(p => p.id);\r\n          const deptSkills = allSkills.filter(skill => deptPeopleIds.includes(skill.person));\r\n          \r\n          // Count skills by type and name\r\n          const skillCounts = new Map<string, number>();\r\n          const strengthSkills = deptSkills.filter(skill => skill.skillType === 'strength');\r\n          \r\n          strengthSkills.forEach(skill => {\r\n            const skillName = skill.skillTagName || 'Unknown';\r\n            skillCounts.set(skillName, (skillCounts.get(skillName) || 0) + 1);\r\n          });\r\n          \r\n          // Get top skills sorted by count\r\n          const topSkills = Array.from(skillCounts.entries())\r\n            .map(([name, count]) => ({ name, count }))\r\n            .sort((a, b) => b.count - a.count)\r\n            .slice(0, 5);\r\n          \r\n          // Find skill gaps (skills present in other departments but not here)\r\n          const allOtherDeptSkills = allSkills\r\n            .filter(skill => !deptPeopleIds.includes(skill.person) && skill.skillType === 'strength')\r\n            .map(skill => skill.skillTagName || '')\r\n            .filter(name => !skillCounts.has(name));\r\n          \r\n          const skillGaps = [...new Set(allOtherDeptSkills)].slice(0, 3);\r\n\r\n          const report: DepartmentReport = {\r\n            department: dept,\r\n            metrics: {\r\n              teamSize: deptPeople.length,\r\n              avgUtilization,\r\n              peakUtilization: dashboardData?.summary.peak_utilization || 0,\r\n              totalAssignments: dashboardData?.summary.total_assignments || 0,\r\n              overallocatedCount: dashboardData?.summary.overallocated_count || 0,\r\n              availableHours: Math.max(0, availableHours),\r\n              utilizationTrend: 'stable' // TODO: Calculate trend from historical data\r\n            },\r\n            people: deptPeople,\r\n            dashboardData,\r\n            skills: {\r\n              totalSkills: deptSkills.length,\r\n              topSkills,\r\n              uniqueSkills: skillCounts.size,\r\n              skillGaps\r\n            }\r\n          };\r\n          \r\n          return report;\r\n        })\r\n      );\r\n\r\n      setReports(departmentReports);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to load department reports');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getUtilizationColor = (percentage: number): string => {\r\n    if (percentage < 70) return 'text-emerald-400';\r\n    if (percentage <= 85) return 'text-blue-400';\r\n    if (percentage <= 100) return 'text-amber-400';\r\n    return 'text-red-400';\r\n  };\r\n\r\n  const getDepartmentHealthScore = (report: DepartmentReport): { score: number; status: string } => {\r\n    const { metrics } = report;\r\n    let score = 100;\r\n    \r\n    // Penalize for overallocation\r\n    if (metrics.overallocatedCount > 0) {\r\n      score -= (metrics.overallocatedCount / metrics.teamSize) * 30;\r\n    }\r\n    \r\n    // Optimal utilization range is 70-85%\r\n    if (metrics.avgUtilization < 70) {\r\n      score -= (70 - metrics.avgUtilization) * 0.5;\r\n    } else if (metrics.avgUtilization > 85) {\r\n      score -= (metrics.avgUtilization - 85) * 1.5;\r\n    }\r\n    \r\n    // Small teams are riskier\r\n    if (metrics.teamSize < 3) {\r\n      score -= 10;\r\n    }\r\n    \r\n    score = Math.max(0, Math.min(100, score));\r\n    \r\n    let status = 'Excellent';\r\n    if (score < 60) status = 'Needs Attention';\r\n    else if (score < 75) status = 'Fair';\r\n    else if (score < 90) status = 'Good';\r\n    \r\n    return { score: Math.round(score), status };\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Layout>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-[#969696]\">Generating department reports...</div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  const totalPeople = reports.reduce((sum, r) => sum + r.metrics.teamSize, 0);\r\n  const avgUtilization = reports.length > 0 \r\n    ? reports.reduce((sum, r) => sum + r.metrics.avgUtilization, 0) / reports.length \r\n    : 0;\r\n  const totalAvailableHours = reports.reduce((sum, r) => sum + r.metrics.availableHours, 0);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-start\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-[#cccccc]\">\r\n              Department Reports\r\n            </h1>\r\n            <p className=\"text-[#969696] mt-2\">\r\n              Performance analytics and resource insights\r\n            </p>\r\n          </div>\r\n          \r\n          {/* Timeframe Selector */}\r\n          <div className=\"flex items-center gap-3\">\r\n            <label className=\"text-sm text-[#969696]\">Timeframe:</label>\r\n            <div className=\"flex gap-1\">\r\n              {[1, 2, 4, 8, 12].map((weeks) => (\r\n                <button\r\n                  key={weeks}\r\n                  onClick={() => setSelectedTimeframe(weeks)}\r\n                  className={`px-3 py-1 text-sm rounded transition-colors ${\r\n                    selectedTimeframe === weeks\r\n                      ? 'bg-[#007acc] text-white'\r\n                      : 'bg-[#3e3e42] text-[#969696] hover:text-[#cccccc] hover:bg-[#4e4e52]'\r\n                  }`}\r\n                >\r\n                  {weeks}w\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {error && (\r\n          <Card className=\"bg-red-500/20 border-red-500/50 p-4\">\r\n            <div className=\"text-red-400\">Error: {error}</div>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Company-Wide Summary */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n            <div className=\"text-[#969696] text-sm\">Total Departments</div>\r\n            <div className=\"text-2xl font-bold text-[#cccccc]\">{reports.length}</div>\r\n          </Card>\r\n          \r\n          <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n            <div className=\"text-[#969696] text-sm\">Total People</div>\r\n            <div className=\"text-2xl font-bold text-[#cccccc]\">{totalPeople}</div>\r\n          </Card>\r\n          \r\n          <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n            <div className=\"text-[#969696] text-sm\">Avg Utilization</div>\r\n            <div className={`text-2xl font-bold ${getUtilizationColor(avgUtilization)}`}>\r\n              {avgUtilization.toFixed(1)}%\r\n            </div>\r\n          </Card>\r\n          \r\n          <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n            <div className=\"text-[#969696] text-sm\">Available Capacity</div>\r\n            <div className=\"text-2xl font-bold text-emerald-400\">\r\n              {Math.round(totalAvailableHours)}h\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Department Reports Table */}\r\n        <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n          <div className=\"p-6\">\r\n            <h3 className=\"text-lg font-semibold text-[#cccccc] mb-4\">\r\n              Department Performance Overview\r\n            </h3>\r\n            \r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead>\r\n                  <tr className=\"border-b border-[#3e3e42]\">\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Department</th>\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Team Size</th>\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Utilization</th>\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Peak</th>\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Assignments</th>\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Available</th>\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Skills</th>\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Top Skills</th>\r\n                    <th className=\"text-left text-sm font-medium text-[#969696] pb-3\">Health</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {reports.map((report) => {\r\n                    const health = getDepartmentHealthScore(report);\r\n                    return (\r\n                      <tr key={report.department.id} className=\"border-b border-[#3e3e42]/50\">\r\n                        <td className=\"py-3\">\r\n                          <div>\r\n                            <div className=\"font-medium text-[#cccccc]\">{report.department.name}</div>\r\n                            <div className=\"text-xs text-[#969696]\">\r\n                              {report.department.managerName || 'No manager'}\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"py-3 text-[#cccccc]\">\r\n                          {report.metrics.teamSize}\r\n                        </td>\r\n                        <td className=\"py-3\">\r\n                          <UtilizationBadge percentage={report.metrics.avgUtilization} />\r\n                        </td>\r\n                        <td className=\"py-3\">\r\n                          <span className={getUtilizationColor(report.metrics.peakUtilization)}>\r\n                            {report.metrics.peakUtilization.toFixed(1)}%\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"py-3 text-[#cccccc]\">\r\n                          {report.metrics.totalAssignments}\r\n                        </td>\r\n                        <td className=\"py-3 text-emerald-400\">\r\n                          {Math.round(report.metrics.availableHours)}h\r\n                        </td>\r\n                        <td className=\"py-3\">\r\n                          <div className=\"text-sm\">\r\n                            <div className=\"text-[#cccccc]\">{report.skills.uniqueSkills} unique</div>\r\n                            <div className=\"text-[#969696] text-xs\">\r\n                              {report.skills.skillGaps.length > 0 && `${report.skills.skillGaps.length} gaps`}\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"py-3\">\r\n                          <div className=\"flex flex-wrap gap-1\">\r\n                            {report.skills.topSkills.slice(0, 3).map((skill, idx) => (\r\n                              <span key={idx} className=\"px-2 py-1 bg-blue-500/20 text-blue-400 rounded text-xs\">\r\n                                {skill.name} ({skill.count})\r\n                              </span>\r\n                            ))}\r\n                            {report.skills.topSkills.length > 3 && (\r\n                              <span className=\"text-xs text-[#969696]\">\r\n                                +{report.skills.topSkills.length - 3} more\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"py-3\">\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <span className={`text-sm ${\r\n                              health.score >= 90 ? 'text-emerald-400' :\r\n                              health.score >= 75 ? 'text-blue-400' :\r\n                              health.score >= 60 ? 'text-amber-400' : 'text-red-400'\r\n                            }`}>\r\n                              {health.score}\r\n                            </span>\r\n                            <span className=\"text-xs text-[#969696]\">{health.status}</span>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {/* Department Insights */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          {/* Utilization Distribution */}\r\n          <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n            <div className=\"p-6\">\r\n              <h3 className=\"text-lg font-semibold text-[#cccccc] mb-4\">\r\n                Department Utilization Distribution\r\n              </h3>\r\n              <div className=\"space-y-3\">\r\n                {reports.map((report) => (\r\n                  <div key={report.department.id} className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-[#cccccc]\">{report.department.name}</span>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div className=\"w-20 h-2 bg-[#3e3e42] rounded-full overflow-hidden\">\r\n                        <div \r\n                          className={`h-full ${\r\n                            report.metrics.avgUtilization < 70 ? 'bg-emerald-400' :\r\n                            report.metrics.avgUtilization <= 85 ? 'bg-blue-400' :\r\n                            report.metrics.avgUtilization <= 100 ? 'bg-amber-400' : 'bg-red-400'\r\n                          }`}\r\n                          style={{ width: `${Math.min(100, report.metrics.avgUtilization)}%` }}\r\n                        />\r\n                      </div>\r\n                      <span className=\"text-sm text-[#969696] w-12 text-right\">\r\n                        {report.metrics.avgUtilization.toFixed(0)}%\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Resource Availability */}\r\n          <Card className=\"bg-[#2d2d30] border-[#3e3e42]\">\r\n            <div className=\"p-6\">\r\n              <h3 className=\"text-lg font-semibold text-[#cccccc] mb-4\">\r\n                Available Resources\r\n              </h3>\r\n              <div className=\"space-y-3\">\r\n                {reports\r\n                  .filter(r => r.metrics.availableHours > 0)\r\n                  .sort((a, b) => b.metrics.availableHours - a.metrics.availableHours)\r\n                  .map((report) => (\r\n                    <div key={report.department.id} className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-[#cccccc]\">{report.department.name}</span>\r\n                      <div className=\"text-right\">\r\n                        <div className=\"text-sm text-emerald-400 font-medium\">\r\n                          {Math.round(report.metrics.availableHours)}h available\r\n                        </div>\r\n                        <div className=\"text-xs text-[#969696]\">\r\n                          {report.metrics.teamSize} people\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                {reports.filter(r => r.metrics.availableHours > 0).length === 0 && (\r\n                  <div className=\"text-center text-[#969696] py-4\">\r\n                    No departments have available capacity\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ReportsView;"],"names":["DepartmentForm","department","departments","people","onSave","onCancel","isEditing","formData","setFormData","useState","loading","setLoading","error","setError","validationErrors","setValidationErrors","useEffect","validateForm","errors","checkCircularReference","parentId","visitedIds","parentDept","d","handleSubmit","e","updateData","err","handleInputChange","field","value","prev","parentDepartmentOptions","dept","jsx","Card","jsxs","Input","person","Button","DepartmentsList","setDepartments","setPeople","selectedDepartment","setSelectedDepartment","selectedIndex","setSelectedIndex","searchTerm","setSearchTerm","showModal","setShowModal","editingDepartment","setEditingDepartment","hasAutoSelected","setHasAutoSelected","loadDepartments","loadPeople","filteredAndSortedDepartments","useMemo","a","b","response","departmentsApi","peopleApi","handleCreateDepartment","handleEditDepartment","handleSaveDepartment","savedDepartment","handleDeleteDepartment","getParentDepartmentName","parent","Sidebar","index","ManagerDashboard","dashboardData","setDashboardData","departmentPeople","setDepartmentPeople","weeksPeriod","setWeeksPeriod","loadDepartmentData","loadDepartmentPeople","depts","dashboardApi","deptPeople","selectedDepartmentInfo","Layout","weeks","Fragment","UtilizationBadge","DepartmentHierarchy","onDepartmentClick","selectedDepartmentId","hierarchyTree","setHierarchyTree","buildHierarchyTree","deptNodes","rootNodes","calculateLevels","nodes","level","node","DepartmentCard","isSelected","hasChildren","renderHierarchyLevel","HierarchyView","loadData","deptResponse","peopleResponse","handleDepartmentClick","getDepartmentStats","p","subDepartments","total","subDept","stats","teamMembers","ReportsView","reports","setReports","selectedTimeframe","setSelectedTimeframe","peopleSkills","setPeopleSkills","skillsResponse","personSkillsApi","allDepartments","allPeople","allSkills","departmentReports","totalCapacity","sum","avgUtilization","availableHours","deptPeopleIds","deptSkills","skill","skillCounts","skillName","topSkills","name","count","allOtherDeptSkills","skillGaps","getUtilizationColor","percentage","getDepartmentHealthScore","report","metrics","score","status","totalPeople","r","totalAvailableHours","health","idx"],"mappings":"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"}