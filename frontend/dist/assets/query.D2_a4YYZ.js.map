{"version":3,"file":"query.D2_a4YYZ.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@tanstack/react-query/build/modern/isRestoring.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/utils.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/@tanstack/react-query/build/modern/useMutation.js","../../node_modules/@tanstack/react-query-devtools/build/modern/index.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n  return void 0;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nexport {\n  pendingThenable\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = (cb) => setTimeout(cb, 0);\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      if (!this.isFetchingOptimistic) {\n        this.scheduleGc();\n      }\n      this.isFetchingOptimistic = false;\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        if (!this.isFetchingOptimistic) {\n          this.scheduleGc();\n        }\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Map();\n    this.#mutationId = Date.now();\n  }\n  #mutations;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    const scope = scopeFor(mutation);\n    const mutations = this.#mutations.get(scope) ?? [];\n    mutations.push(mutation);\n    this.#mutations.set(scope, mutations);\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    const scope = scopeFor(mutation);\n    if (this.#mutations.has(scope)) {\n      const mutations = this.#mutations.get(scope)?.filter((x) => x !== mutation);\n      if (mutations) {\n        if (mutations.length === 0) {\n          this.#mutations.delete(scope);\n        } else {\n          this.#mutations.set(scope, mutations);\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const firstPendingMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m.state.status === \"pending\");\n    return !firstPendingMutation || firstPendingMutation === mutation;\n  }\n  runNext(mutation) {\n    const foundMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m !== mutation && m.state.isPaused);\n    return foundMutation?.continue() ?? Promise.resolve();\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((mutation) => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return [...this.#mutations.values()].flat();\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id ?? String(mutation.mutationId);\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const cachedData = this.getQueryData(options.queryKey);\n    if (cachedData === void 0)\n      return this.fetchQuery(options);\n    else {\n      const defaultedOptions = this.defaultQueryOptions(options);\n      const query = this.#queryCache.build(this, defaultedOptions);\n      if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n        void this.prefetchQuery(defaultedOptions);\n      }\n      return Promise.resolve(cachedData);\n    }\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters = {}, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters = {}, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters = {}, options) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options?.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.enabled !== true && defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult(notifyOptions);\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    return result;\n  }\n  updateResult(notifyOptions) {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          finalizeThenableIfPossible(prevThenable);\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    this.#currentResult = nextResult;\n    const defaultNotifyOptions = {};\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n    this.#notify({ ...defaultNotifyOptions, ...notifyOptions });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/isRestoring.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=isRestoring.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {\n}\nexport {\n  noop,\n  shouldThrowError\n};\n//# sourceMappingURL=utils.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"./utils.js\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && shouldThrowError(throwOnError, [result.error, query]);\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    if (typeof defaultedOptions.staleTime !== \"number\") {\n      defaultedOptions.staleTime = 1e3;\n    }\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./isRestoring.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nimport { noop } from \"./utils.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryState(options.queryKey);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring ? () => void 0 : observer.subscribe(notifyManager.batchCalls(onStoreChange));\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, isRestoring]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash)\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      if (!observer.hasListeners()) {\n        observer.updateResult();\n      }\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport { MutationObserver, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { noop, shouldThrowError } from \"./utils.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map","\"use client\";\n\n// src/index.ts\nimport * as Devtools from \"./ReactQueryDevtools.js\";\nimport * as DevtoolsPanel from \"./ReactQueryDevtoolsPanel.js\";\nvar ReactQueryDevtools2 = process.env.NODE_ENV !== \"development\" ? function() {\n  return null;\n} : Devtools.ReactQueryDevtools;\nvar ReactQueryDevtoolsPanel2 = process.env.NODE_ENV !== \"development\" ? function() {\n  return null;\n} : DevtoolsPanel.ReactQueryDevtoolsPanel;\nexport {\n  ReactQueryDevtools2 as ReactQueryDevtools,\n  ReactQueryDevtoolsPanel2 as ReactQueryDevtoolsPanel\n};\n//# sourceMappingURL=index.js.map"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","Subscribable","listener","isServer","noop","functionalUpdate","updater","input","isValidTimeout","value","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","options","_","val","isPlainObject","result","key","replaceEqualDeep","array","isPlainArray","aItems","aSize","bItems","bSize","copy","equalItems","i","shallowEqualObjects","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","FocusManager","_a","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","__privateGet","setup","focused","isFocused","focusManager","OnlineManager","_online","onOnline","onlineListener","offlineListener","online","onlineManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","isCancelledError","createRetryer","config","isRetryCancelled","isResolved","continueFn","cancel","cancelOptions","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","error","retry","retryDelay","delay","shouldRetry","createNotifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","cb","schedule","flush","originalQueue","args","fn","notifyManager","Removable","_gcTimeout","newGcTime","Query","_Query_instances","_initialState","_revertState","_cache","_retryer","_defaultOptions","_abortSignalConsumed","getDefaultState","newData","__privateMethod","dispatch_fn","state","setStateOptions","promise","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","context","onError","action","reducer","fetchState","hasData","initialDataUpdatedAt","QueryCache","_queries","client","queryHash","queryInMap","defaultedFilters","queries","event","Mutation","_Mutation_instances","_observers","_mutationCache","variables","restored","isPaused","MutationCache","_mutations","_mutationId","__privateWrapper","scope","scopeFor","mutations","firstPendingMutation","pausedMutations","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","_b","cachedData","defaultedOptions","queryCache","refetchFilters","defaultedCancelOptions","promises","defaults","queryDefault","QueryObserver","_QueryObserver_instances","_client","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","shouldFetchOnMount","executeFetch_fn","updateTimers_fn","shouldFetchOn","clearStaleTimeout_fn","clearRefetchInterval_fn","notifyOptions","prevOptions","prevQuery","updateQuery_fn","mounted","shouldFetchOptionally","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","updateRefetchInterval_fn","shouldAssignObserverCurrentProperties","onPropTracked","trackedResult","prevResult","prevResultState","prevResultOptions","queryInitialState","newState","isPlaceholderData","fetchOnMount","fetchOptionally","errorUpdatedAt","selectError","placeholderData","isFetching","isPending","isError","isLoading","isStale","nextResult","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","notify_fn","nextInterval","shouldLoadOnMount","field","optimisticResult","MutationObserver","_MutationObserver_instances","_currentMutation","_mutateOptions","updateResult_fn","QueryClientContext","React.createContext","useQueryClient","queryClient","React.useContext","QueryClientProvider","children","React.useEffect","jsx","IsRestoringContext","useIsRestoring","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","shouldThrowError","throwError","params","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","getHasError","throwOnError","ensureSuspenseTimers","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","isNewCacheEntry","React.useState","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","useQuery","useMutation","mutate","mutateOptions","ReactQueryDevtools2"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}