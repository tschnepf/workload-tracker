{"version":3,"file":"api.BBwiE9lX.js","sources":["../../src/components/layout/Sidebar.tsx","../../src/services/api.ts"],"sourcesContent":["/**\r\n * Production Sidebar Component - Always collapsed with hover tooltips\r\n * Extracted from working mockup and cleaned for production use\r\n */\r\n\r\nimport React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\n// Reusable Icon Component for navigation\r\nconst IconComponent = ({ type, className = \"w-4 h-4\", isActive = false }: { type: string, className?: string, isActive?: boolean }) => {\r\n  const iconColor = \"currentColor\";\r\n  \r\n  switch (type) {\r\n    case 'dashboard':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"/>\r\n          <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"/>\r\n          <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"/>\r\n          <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"/>\r\n        </svg>\r\n      );\r\n    case 'people':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\"/>\r\n          <circle cx=\"9\" cy=\"7\" r=\"4\"/>\r\n          <path d=\"M22 21v-2a4 4 0 0 0-3-3.87\"/>\r\n          <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\r\n        </svg>\r\n      );\r\n    case 'assignments':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\r\n          <polyline points=\"14,2 14,8 20,8\"/>\r\n          <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"/>\r\n          <line x1=\"9\" y1=\"18\" x2=\"13\" y2=\"18\"/>\r\n        </svg>\r\n      );\r\n    case 'departments':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <path d=\"M3 21h18\"/>\r\n          <path d=\"M5 21V7l8-4v18\"/>\r\n          <path d=\"M19 21V11l-6-4\"/>\r\n        </svg>\r\n      );\r\n    case 'projects':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"/>\r\n        </svg>\r\n      );\r\n    case 'reports':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <polyline points=\"22,12 18,12 15,21 9,3 6,12 2,12\"/>\r\n        </svg>\r\n      );\r\n    case 'skills':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <path d=\"M12 2L2 7v10c0 5.55 3.84 10 9 11 1.16.21 2.76.21 3.92 0C20.16 27 24 22.55 24 17V7l-10-5z\"/>\r\n          <path d=\"M8 11l2 2 4-4\"/>\r\n        </svg>\r\n      );\r\n    case 'hierarchy':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/>\r\n          <path d=\"M16 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/>\r\n          <path d=\"M12 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/>\r\n          <path d=\"M10.5 8.5 9.5 14.5\"/>\r\n          <path d=\"M13.5 8.5 14.5 14.5\"/>\r\n        </svg>\r\n      );\r\n    case 'manager':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <circle cx=\"12\" cy=\"8\" r=\"5\"/>\r\n          <path d=\"M20 21a8 8 0 0 0-16 0\"/>\r\n          <path d=\"M12 13v8\"/>\r\n          <path d=\"M8 17l4-4 4 4\"/>\r\n        </svg>\r\n      );\r\n    case 'settings':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <path d=\"M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/>\r\n          <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1Z\"/>\r\n        </svg>\r\n      );\r\n    case 'help':\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n          <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/>\r\n          <circle cx=\"12\" cy=\"17\" r=\"1\"/>\r\n        </svg>\r\n      );\r\n    default:\r\n      return (\r\n        <svg className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke={iconColor} strokeWidth=\"1.5\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n        </svg>\r\n      );\r\n  }\r\n};\r\n\r\n// Tooltip Component for hover labels\r\nconst Tooltip = ({ children, title, description }: { children: React.ReactNode, title: string, description: string }) => (\r\n  <div className=\"group/tooltip relative\">\r\n    {children}\r\n    <div className=\"absolute left-full top-1/2 -translate-y-1/2 ml-2 px-3 py-2 bg-[#2d2d30] border border-[#3e3e42] rounded-md shadow-lg z-50 opacity-0 invisible group-hover/tooltip:opacity-100 group-hover/tooltip:visible transition-all duration-200 pointer-events-none min-w-[180px]\">\r\n      <div className=\"text-[#cccccc] text-sm font-medium mb-1\">\r\n        {title}\r\n      </div>\r\n      <div className=\"text-[#969696] text-xs\">\r\n        {description}\r\n      </div>\r\n      {/* Arrow pointing to the icon */}\r\n      <div className=\"absolute right-full top-1/2 -translate-y-1/2 border-4 border-transparent border-r-[#3e3e42]\" />\r\n      <div className=\"absolute right-full top-1/2 -translate-y-1/2 translate-x-px border-4 border-transparent border-r-[#2d2d30]\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  const menuItems = [\r\n    { \r\n      path: '/dashboard', \r\n      icon: 'dashboard', \r\n      label: 'Dashboard',\r\n      description: 'Overview and metrics'\r\n    },\r\n    { \r\n      path: '/people', \r\n      icon: 'people', \r\n      label: 'People',\r\n      description: 'Team management'\r\n    },\r\n    { \r\n      path: '/departments', \r\n      icon: 'departments', \r\n      label: 'Departments',\r\n      description: 'Organization structure'\r\n    },\r\n    { \r\n      path: '/assignments', \r\n      icon: 'assignments', \r\n      label: 'Assignments',\r\n      description: 'Workload allocation'\r\n    },\r\n    { \r\n      path: '/projects', \r\n      icon: 'projects', \r\n      label: 'Projects',\r\n      description: 'Project tracking'\r\n    },\r\n    { \r\n      path: '/skills', \r\n      icon: 'skills', \r\n      label: 'Skills',\r\n      description: 'Team skills analysis'\r\n    }\r\n  ];\r\n\r\n  // Advanced department features\r\n  const departmentItems = [\r\n    { \r\n      path: '/departments/manager', \r\n      icon: 'manager', \r\n      label: 'Manager View',\r\n      description: 'Department management dashboard'\r\n    },\r\n    { \r\n      path: '/departments/hierarchy', \r\n      icon: 'hierarchy', \r\n      label: 'Org Chart',\r\n      description: 'Department hierarchy visualization'\r\n    },\r\n    { \r\n      path: '/departments/reports', \r\n      icon: 'reports', \r\n      label: 'Reports',\r\n      description: 'Department analytics and insights'\r\n    }\r\n  ];\r\n\r\n  const systemItems = [\r\n    { \r\n      path: '/settings', \r\n      icon: 'settings', \r\n      label: 'Settings',\r\n      description: 'System configuration'\r\n    }\r\n  ];\r\n\r\n\r\n  const isActive = (path: string) => location.pathname === path || location.pathname.startsWith(path + '/');\r\n\r\n  return (\r\n    <div className=\"bg-[#2d2d30] border-r border-[#3e3e42] flex-shrink-0 w-16\">\r\n      \r\n      {/* Header */}\r\n      <div className=\"h-16 flex items-center border-b border-[#3e3e42] relative\">\r\n        <Tooltip title=\"Workload Tracker\" description=\"Resource Management System\">\r\n          <div className=\"w-full h-full flex items-center justify-center\">\r\n            <div className=\"w-8 h-8 bg-[#007acc] rounded flex items-center justify-center\">\r\n              <span className=\"text-white text-sm font-bold\">WT</span>\r\n            </div>\r\n          </div>\r\n        </Tooltip>\r\n      </div>\r\n\r\n      {/* Navigation Menu */}\r\n      <nav className=\"flex-1 py-4\">\r\n        <div className=\"space-y-1 px-3\">\r\n          {menuItems.map((item) => (\r\n            <Tooltip key={item.path} title={item.label} description={item.description}>\r\n              <Link\r\n                to={item.path}\r\n                className={`\r\n                  group flex items-center rounded-md text-sm transition-all duration-200 px-3 py-2.5 justify-center\r\n                  ${isActive(item.path) \r\n                    ? 'bg-[#007acc]/10 border-r-2 border-[#007acc] text-[#007acc]' \r\n                    : 'text-[#969696] hover:text-[#cccccc] hover:bg-[#3e3e42]/50'\r\n                  }\r\n                `}\r\n              >\r\n                <div className=\"flex-shrink-0\">\r\n                  <IconComponent \r\n                    type={item.icon} \r\n                    className=\"w-4 h-4\" \r\n                    isActive={isActive(item.path)}\r\n                  />\r\n                </div>\r\n              </Link>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Department Advanced Features */}\r\n        <div className=\"my-4 mx-6 border-t border-[#3e3e42]\" />\r\n        <div className=\"space-y-1 px-3\">\r\n          {departmentItems.map((item) => (\r\n            <Tooltip key={item.path} title={item.label} description={item.description}>\r\n              <Link\r\n                to={item.path}\r\n                className={`\r\n                  group flex items-center rounded-md text-sm transition-all duration-200 px-3 py-2.5 justify-center\r\n                  ${isActive(item.path) \r\n                    ? 'bg-[#007acc]/10 border-r-2 border-[#007acc] text-[#007acc]' \r\n                    : 'text-[#969696] hover:text-[#cccccc] hover:bg-[#3e3e42]/50'\r\n                  }\r\n                `}\r\n              >\r\n                <div className=\"flex-shrink-0\">\r\n                  <IconComponent \r\n                    type={item.icon} \r\n                    className=\"w-4 h-4\" \r\n                    isActive={isActive(item.path)}\r\n                  />\r\n                </div>\r\n              </Link>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n\r\n        {/* System Items */}\r\n        <div className=\"my-4 mx-6 border-t border-[#3e3e42]\" />\r\n        <div className=\"space-y-1 px-3\">\r\n          {systemItems.map((item) => (\r\n            <Tooltip key={item.path} title={item.label} description={item.description}>\r\n              <Link\r\n                to={item.path}\r\n                className={`\r\n                  group flex items-center rounded-md text-sm transition-all duration-200 px-3 py-2.5 justify-center\r\n                  ${isActive(item.path) \r\n                    ? 'bg-[#007acc]/10 border-r-2 border-[#007acc] text-[#007acc]' \r\n                    : 'text-[#969696] hover:text-[#cccccc] hover:bg-[#3e3e42]/50'\r\n                  }\r\n                `}\r\n              >\r\n                <div className=\"flex-shrink-0\">\r\n                  <IconComponent \r\n                    type={item.icon} \r\n                    className=\"w-4 h-4\" \r\n                    isActive={isActive(item.path)}\r\n                  />\r\n                </div>\r\n              </Link>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n\r\n\r\n        {/* Separator */}\r\n        <div className=\"my-6 mx-6 border-t border-[#3e3e42]\" />\r\n\r\n        {/* Bottom Section */}\r\n        <div className=\"px-3 space-y-1\">\r\n          {/* User Profile */}\r\n          <Tooltip title=\"User Profile\" description=\"Account settings\">\r\n            <div className=\"flex items-center rounded-md hover:bg-[#3e3e42]/50 cursor-pointer transition-colors px-3 py-2.5 justify-center\">\r\n              <div className=\"w-6 h-6 bg-[#007acc] rounded-full flex items-center justify-center flex-shrink-0\">\r\n                <svg className=\"w-3 h-3 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\r\n                  <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"/>\r\n                  <circle cx=\"12\" cy=\"7\" r=\"4\"/>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </Tooltip>\r\n\r\n          {/* Help */}\r\n          <Tooltip title=\"Help & Support\" description=\"Documentation and assistance\">\r\n            <Link\r\n              to=\"/help\"\r\n              className=\"flex items-center rounded-md text-[#969696] hover:text-[#cccccc] hover:bg-[#3e3e42]/50 transition-colors px-3 py-2.5 justify-center\"\r\n            >\r\n              <div className=\"flex-shrink-0\">\r\n                <IconComponent type=\"help\" className=\"w-4 h-4\" />\r\n              </div>\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","/**\r\n * API service layer - handles all backend communication\r\n * Uses naming prevention: frontend camelCase <-> backend snake_case\r\n */\r\n\r\nimport { Person, Project, Assignment, Department, Deliverable, PersonUtilization, ApiResponse, PaginatedResponse, DashboardData, SkillTag, PersonSkill, AssignmentConflictResponse } from '@/types/models';\r\n\r\nconst API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8000/api';\r\n\r\nclass ApiError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public status: number,\r\n    public response?: any\r\n  ) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\nasync function fetchApi<T>(\r\n  endpoint: string,\r\n  options: RequestInit = {}\r\n): Promise<T> {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  try {\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      let errorMessage = `HTTP ${response.status}`;\r\n      let errorData = null;\r\n      try {\r\n        errorData = await response.json();\r\n        errorMessage = errorData.message || errorData.detail || errorMessage;\r\n      } catch (e) {\r\n        // If JSON parsing fails, use status text\r\n        errorMessage = response.statusText || errorMessage;\r\n      }\r\n      throw new ApiError(errorMessage, response.status, errorData);\r\n    }\r\n\r\n    // Handle empty responses (like DELETE operations)\r\n    const contentType = response.headers.get('content-type');\r\n    if (!contentType || !contentType.includes('application/json')) {\r\n      return undefined as T;\r\n    }\r\n\r\n    // Check if response body is empty\r\n    const text = await response.text();\r\n    if (!text) {\r\n      return undefined as T;\r\n    }\r\n\r\n    return JSON.parse(text);\r\n  } catch (error) {\r\n    console.error('Fetch error:', error);\r\n    if (error instanceof TypeError && error.message.includes('fetch')) {\r\n      throw new ApiError('Network error - unable to reach server', 0);\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n// People API\r\nexport const peopleApi = {\r\n  // Get all people with pagination support\r\n  list: (params?: { page?: number; page_size?: number; search?: string }) => {\r\n    const queryParams = new URLSearchParams();\r\n    if (params?.page) queryParams.set('page', params.page.toString());\r\n    if (params?.page_size) queryParams.set('page_size', params.page_size.toString());\r\n    if (params?.search) queryParams.set('search', params.search);\r\n    const queryString = queryParams.toString() ? `?${queryParams.toString()}` : '';\r\n    return fetchApi<PaginatedResponse<Person>>(`/people/${queryString}`);\r\n  },\r\n\r\n  // Get all people (bulk API - Phase 2 optimization)\r\n  listAll: async (): Promise<Person[]> => {\r\n    return fetchApi<Person[]>(`/people/?all=true`);\r\n  },\r\n\r\n  // Get single person\r\n  get: (id: number) => \r\n    fetchApi<Person>(`/people/${id}/`),\r\n\r\n  // Create person\r\n  create: (data: Omit<Person, 'id' | 'createdAt' | 'updatedAt'>) => \r\n    fetchApi<Person>('/people/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Update person\r\n  update: (id: number, data: Partial<Person>) => \r\n    fetchApi<Person>(`/people/${id}/`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Delete person\r\n  delete: (id: number) => \r\n    fetchApi<void>(`/people/${id}/`, {\r\n      method: 'DELETE',\r\n    }),\r\n\r\n  // Get people for autocomplete (name and basic info)\r\n  getForAutocomplete: async (): Promise<Array<{ id: number; name: string; department?: number; weeklyCapacity?: number }>> => {\r\n    const allPeople = await peopleApi.listAll();\r\n    return allPeople.map(person => ({\r\n      id: person.id!,\r\n      name: person.name,\r\n      department: person.department,\r\n      weeklyCapacity: person.weeklyCapacity\r\n    }));\r\n  },\r\n\r\n  // Get person utilization for specific week (optimized to prevent N+1 queries)\r\n  getPersonUtilization: async (personId: number, week?: string): Promise<PersonUtilization> => {\r\n    const queryParams = new URLSearchParams();\r\n    if (week) queryParams.set('week', week);\r\n    const queryString = queryParams.toString() ? `?${queryParams.toString()}` : '';\r\n    return fetchApi<PersonUtilization>(`/people/${personId}/utilization/${queryString}`);\r\n  },\r\n};\r\n\r\n// Projects API\r\nexport const projectsApi = {\r\n  // Get all projects with pagination support\r\n  list: (params?: { page?: number; page_size?: number }) => {\r\n    const queryParams = new URLSearchParams();\r\n    if (params?.page) queryParams.set('page', params.page.toString());\r\n    if (params?.page_size) queryParams.set('page_size', params.page_size.toString());\r\n    const queryString = queryParams.toString() ? `?${queryParams.toString()}` : '';\r\n    return fetchApi<PaginatedResponse<Project>>(`/projects/${queryString}`);\r\n  },\r\n\r\n  // Get all projects (bulk API - Phase 2 optimization)\r\n  listAll: async (): Promise<Project[]> => {\r\n    return fetchApi<Project[]>(`/projects/?all=true`);\r\n  },\r\n\r\n  // Get single project\r\n  get: (id: number) => \r\n    fetchApi<Project>(`/projects/${id}/`),\r\n\r\n  // Create project\r\n  create: (data: Omit<Project, 'id' | 'createdAt' | 'updatedAt'>) => \r\n    fetchApi<Project>('/projects/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Update project\r\n  update: (id: number, data: Partial<Project>) => \r\n    fetchApi<Project>(`/projects/${id}/`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Delete project\r\n  delete: (id: number) => \r\n    fetchApi<void>(`/projects/${id}/`, {\r\n      method: 'DELETE',\r\n    }),\r\n\r\n  // Get unique clients for autocomplete\r\n  getClients: async (): Promise<string[]> => {\r\n    const allProjects = await projectsApi.listAll();\r\n    const clients = [...new Set(allProjects.map(p => p.client).filter(Boolean))];\r\n    return clients.sort();\r\n  },\r\n};\r\n\r\n// Departments API\r\nexport const departmentsApi = {\r\n  // Get all departments with pagination support\r\n  list: (params?: { page?: number; page_size?: number }) => {\r\n    const queryParams = new URLSearchParams();\r\n    if (params?.page) queryParams.set('page', params.page.toString());\r\n    if (params?.page_size) queryParams.set('page_size', params.page_size.toString());\r\n    const queryString = queryParams.toString() ? `?${queryParams.toString()}` : '';\r\n    return fetchApi<PaginatedResponse<Department>>(`/departments/${queryString}`);\r\n  },\r\n\r\n  // Get all departments (bulk API - Phase 2 optimization)\r\n  listAll: async (): Promise<Department[]> => {\r\n    return fetchApi<Department[]>(`/departments/?all=true`);\r\n  },\r\n\r\n  // Get single department\r\n  get: (id: number) => \r\n    fetchApi<Department>(`/departments/${id}/`),\r\n\r\n  // Create department\r\n  create: (data: Omit<Department, 'id' | 'managerName' | 'createdAt' | 'updatedAt'>) => \r\n    fetchApi<Department>('/departments/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Update department\r\n  update: (id: number, data: Partial<Department>) => \r\n    fetchApi<Department>(`/departments/${id}/`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Delete department\r\n  delete: (id: number) => \r\n    fetchApi<void>(`/departments/${id}/`, {\r\n      method: 'DELETE',\r\n    }),\r\n};\r\n\r\n// Assignment API\r\nexport const assignmentsApi = {\r\n  // Get all assignments with pagination support\r\n  list: (params?: { page?: number; page_size?: number }) => {\r\n    const queryParams = new URLSearchParams();\r\n    if (params?.page) queryParams.set('page', params.page.toString());\r\n    if (params?.page_size) queryParams.set('page_size', params.page_size.toString());\r\n    const queryString = queryParams.toString() ? `?${queryParams.toString()}` : '';\r\n    return fetchApi<PaginatedResponse<Assignment>>(`/assignments/${queryString}`);\r\n  },\r\n\r\n  // Get all assignments (bulk API - Phase 2 optimization)\r\n  listAll: async (): Promise<Assignment[]> => {\r\n    return fetchApi<Assignment[]>(`/assignments/?all=true`);\r\n  },\r\n\r\n  // Get assignments for specific person\r\n  byPerson: (personId: number) => \r\n    fetchApi<Assignment[]>(`/assignments/by_person/?person_id=${personId}`),\r\n\r\n  // Create assignment\r\n  create: (data: Omit<Assignment, 'id' | 'createdAt' | 'updatedAt' | 'personName'>) => \r\n    fetchApi<Assignment>('/assignments/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Update assignment\r\n  update: (id: number, data: Partial<Assignment>) => \r\n    fetchApi<Assignment>(`/assignments/${id}/`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Delete assignment\r\n  delete: (id: number) => \r\n    fetchApi<void>(`/assignments/${id}/`, {\r\n      method: 'DELETE',\r\n    }),\r\n\r\n  // Check assignment conflicts (optimized to prevent N+1 queries)\r\n  checkConflicts: async (\r\n    personId: number, \r\n    projectId: number, \r\n    weekKey: string, \r\n    proposedHours: number\r\n  ): Promise<AssignmentConflictResponse> => {\r\n    return fetchApi<AssignmentConflictResponse>('/assignments/check_conflicts/', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        personId,\r\n        projectId,\r\n        weekKey,\r\n        proposedHours\r\n      }),\r\n    });\r\n  },\r\n};\r\n\r\n// Person utilization API\r\nexport const utilizationApi = {\r\n  // Get person utilization\r\n  getPersonUtilization: (personId: number) =>\r\n    fetchApi<PersonUtilization>(`/people/${personId}/utilization/`),\r\n};\r\n\r\n// Deliverables API - STANDARDS COMPLIANT\r\nexport const deliverablesApi = {\r\n  // Get all deliverables or filter by project with pagination support\r\n  list: (projectId?: number, params?: { page?: number; page_size?: number }) => {\r\n    const queryParams = new URLSearchParams();\r\n    if (projectId) queryParams.set('project', projectId.toString());\r\n    if (params?.page) queryParams.set('page', params.page.toString());\r\n    if (params?.page_size) queryParams.set('page_size', params.page_size.toString());\r\n    const queryString = queryParams.toString() ? `?${queryParams.toString()}` : '';\r\n    return fetchApi<PaginatedResponse<Deliverable>>(`/deliverables/${queryString}`);\r\n  },\r\n\r\n  // Get all deliverables (bulk API - Phase 2 optimization)\r\n  listAll: async (projectId?: number): Promise<Deliverable[]> => {\r\n    const queryParams = new URLSearchParams();\r\n    if (projectId) queryParams.set('project', projectId.toString());\r\n    queryParams.set('all', 'true');\r\n    const queryString = queryParams.toString();\r\n    return fetchApi<Deliverable[]>(`/deliverables/?${queryString}`);\r\n  },\r\n\r\n  // Get single deliverable  \r\n  get: (id: number) =>\r\n    fetchApi<Deliverable>(`/deliverables/${id}/`),\r\n\r\n  // Create deliverable\r\n  create: (data: Omit<Deliverable, 'id' | 'createdAt' | 'updatedAt'>) =>\r\n    fetchApi<Deliverable>('/deliverables/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Update deliverable\r\n  update: (id: number, data: Partial<Deliverable>) =>\r\n    fetchApi<Deliverable>(`/deliverables/${id}/`, {\r\n      method: 'PATCH', \r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Delete deliverable\r\n  delete: (id: number) =>\r\n    fetchApi<void>(`/deliverables/${id}/`, {\r\n      method: 'DELETE',\r\n    }),\r\n\r\n  // Bulk fetch deliverables for multiple projects (Phase 2 optimization)\r\n  bulkList: async (projectIds: number[]): Promise<{ [projectId: string]: Deliverable[] }> => {\r\n    if (projectIds.length === 0) return {};\r\n    \r\n    const projectIdsString = projectIds.join(',');\r\n    return fetchApi<{ [projectId: string]: Deliverable[] }>(`/deliverables/bulk/?project_ids=${projectIdsString}`);\r\n  },\r\n\r\n  // Reorder deliverables for a project\r\n  reorder: (projectId: number, deliverableIds: number[]) =>\r\n    fetchApi<void>('/deliverables/reorder/', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \r\n        project: projectId, \r\n        deliverable_ids: deliverableIds \r\n      }),\r\n    }),\r\n};\r\n\r\n// Dashboard API\r\nexport const dashboardApi = {\r\n  // Get dashboard data with optional weeks and department parameters\r\n  getDashboard: (weeks?: number, department?: string) => {\r\n    const params = new URLSearchParams();\r\n    if (weeks && weeks !== 1) params.set('weeks', weeks.toString());\r\n    if (department) params.set('department', department);\r\n    const queryString = params.toString() ? `?${params.toString()}` : '';\r\n    return fetchApi<DashboardData>(`/dashboard/${queryString}`);\r\n  },\r\n};\r\n\r\n// Skills API\r\nexport const skillTagsApi = {\r\n  // List skill tags\r\n  list: (params?: { search?: string }) => {\r\n    const queryParams = params ? new URLSearchParams(\r\n      Object.entries(params).filter(([_, value]) => value !== undefined && value !== '')\r\n        .map(([key, value]) => [key, String(value)])\r\n    ).toString() : '';\r\n    const url = queryParams ? `/skills/skill-tags/?${queryParams}` : '/skills/skill-tags/';\r\n    return fetchApi<PaginatedResponse<SkillTag>>(url);\r\n  },\r\n\r\n  // Get skill tag\r\n  get: (id: number) =>\r\n    fetchApi<SkillTag>(`/skills/skill-tags/${id}/`),\r\n\r\n  // Create skill tag\r\n  create: (data: Omit<SkillTag, 'id' | 'isActive' | 'createdAt' | 'updatedAt'>) =>\r\n    fetchApi<SkillTag>('/skills/skill-tags/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Update skill tag\r\n  update: (id: number, data: Partial<SkillTag>) =>\r\n    fetchApi<SkillTag>(`/skills/skill-tags/${id}/`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Delete skill tag\r\n  delete: (id: number) =>\r\n    fetchApi<void>(`/skills/skill-tags/${id}/`, {\r\n      method: 'DELETE',\r\n    }),\r\n};\r\n\r\nexport const personSkillsApi = {\r\n  // List person skills\r\n  list: (params?: { person?: number; skill_type?: string }) => {\r\n    const queryParams = params ? new URLSearchParams(\r\n      Object.entries(params).filter(([_, value]) => value !== undefined && value !== '')\r\n        .map(([key, value]) => [key, String(value)])\r\n    ).toString() : '';\r\n    const url = queryParams ? `/skills/person-skills/?${queryParams}` : '/skills/person-skills/';\r\n    return fetchApi<PaginatedResponse<PersonSkill>>(url);\r\n  },\r\n\r\n  // Get person skill\r\n  get: (id: number) =>\r\n    fetchApi<PersonSkill>(`/skills/person-skills/${id}/`),\r\n\r\n  // Create person skill\r\n  create: (data: Omit<PersonSkill, 'id' | 'skillTagName' | 'createdAt' | 'updatedAt'>) =>\r\n    fetchApi<PersonSkill>('/skills/person-skills/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Update person skill\r\n  update: (id: number, data: Partial<PersonSkill>) =>\r\n    fetchApi<PersonSkill>(`/skills/person-skills/${id}/`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(data),\r\n    }),\r\n\r\n  // Delete person skill\r\n  delete: (id: number) =>\r\n    fetchApi<void>(`/skills/person-skills/${id}/`, {\r\n      method: 'DELETE',\r\n    }),\r\n\r\n  // Get skill summary for a person\r\n  summary: (personId: number) =>\r\n    fetchApi<{\r\n      strengths: Array<{ skillTagName: string; skillType: string; proficiencyLevel: string }>;\r\n      development: Array<{ skillTagName: string; skillType: string; proficiencyLevel: string }>;\r\n      learning: Array<{ skillTagName: string; skillType: string; proficiencyLevel: string }>;\r\n    }>(`/skills/person-skills/summary/?person=${personId}`),\r\n};\r\n\r\nexport { ApiError };"],"names":["IconComponent","type","className","isActive","iconColor","jsxs","jsx","Tooltip","children","title","description","Sidebar","location","useLocation","menuItems","departmentItems","systemItems","path","item","Link","API_BASE_URL","ApiError","message","status","response","fetchApi","endpoint","options","url","errorMessage","errorData","contentType","text","error","peopleApi","params","queryParams","queryString","id","data","person","personId","week","projectsApi","allProjects","p","departmentsApi","assignmentsApi","projectId","weekKey","proposedHours","deliverablesApi","projectIds","projectIdsString","deliverableIds","dashboardApi","weeks","department","skillTagsApi","_","value","key","personSkillsApi"],"mappings":"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"}