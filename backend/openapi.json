openapi: 3.0.3
info:
  title: Workload Tracker API
  version: 0.1.0
  description: OpenAPI schema for Workload Tracker (People, Projects, Assignments,
    Deliverables, Departments).
paths:
  /api/assignments/:
    get:
      operationId: assignments_list
      description: |-
        Get all assignments with person details and optional project
        filtering.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssignmentList'
          description: ''
    post:
      operationId: assignments_create
      description: Create assignment with validation
      tags:
      - assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
  /api/assignments/{id}/:
    get:
      operationId: assignments_retrieve
      description: |-
        Assignment CRUD API with utilization tracking
        Uses AutoMapped serializer for automatic snake_case -> camelCase conversion
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this assignment.
        required: true
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
    put:
      operationId: assignments_update
      description: |-
        Assignment CRUD API with utilization tracking
        Uses AutoMapped serializer for automatic snake_case -> camelCase conversion
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this assignment.
        required: true
      tags:
      - assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
    patch:
      operationId: assignments_partial_update
      description: |-
        Assignment CRUD API with utilization tracking
        Uses AutoMapped serializer for automatic snake_case -> camelCase conversion
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this assignment.
        required: true
      tags:
      - assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
    delete:
      operationId: assignments_destroy
      description: |-
        Assignment CRUD API with utilization tracking
        Uses AutoMapped serializer for automatic snake_case -> camelCase conversion
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this assignment.
        required: true
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/assignments/analytics_by_client/:
    get:
      operationId: assignments_analytics_by_client_retrieve
      description: |-
        Assigned hours aggregated by client for N weeks ahead.

        Response: { clients: [{ label: string, hours: number }] }
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks (1-26), default 12
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignedHoursByClientResponse'
          description: ''
  /api/assignments/analytics_client_projects/:
    get:
      operationId: assignments_analytics_client_projects_retrieve
      description: |-
        Assigned hours aggregated by project for a given client over N weeks ahead.

        Response: { projects: [{ id: number, name: string, hours: number }] }
      parameters:
      - in: query
        name: client
        schema:
          type: string
        required: true
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks (1-26), default 12
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignedHoursClientProjectsResponse'
          description: ''
  /api/assignments/analytics_deliverable_timeline/:
    get:
      operationId: assignments_analytics_deliverable_timeline_retrieve
      description: |-
        Assigned hours weekly timeline aggregated by deliverable phase for N weeks ahead.

        Uses shared classification (forward-select next deliverable, Monday exception, 'active_ca' override to 'ca' when no next deliverable). Controlled vocabulary: sd, dd, ifp, masterplan, bulletins, ca, other. 'extras' retained for compatibility and is typically empty.
        Classification rules: explicit phase in description (SD/DD/IFP) wins; otherwise map by percentage: 0-39%→SD, 40-80%→DD, 81-100%→IFP; unknown→other.
        Also groups any description containing 'Bulletin' or 'Addendum' into Bulletins/Addendums. Non-matching items are returned in 'extras' by label (desc or percent). No generic 'other' bucket is included in the series.
        Response: { weekKeys: [..], series: { sd, dd, ifp, bulletins }, extras: [{label, values[]}], totalByWeek }
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_active_ca
        schema:
          type: integer
        description: 0|1 include active_ca status in addition to active (default 0)
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks (1-26), default 12
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignedHoursDeliverableTimelineResponse'
          description: ''
  /api/assignments/analytics_status_timeline/:
    get:
      operationId: assignments_analytics_status_timeline_retrieve
      description: |-
        Assigned hours weekly timeline aggregated by project status for N weeks ahead.

        Categories reflect Project.status controlled vocabulary: 'active', 'active_ca', and 'other'.
        Response: { weekKeys: [..], series: { active: number[], active_ca: number[], other: number[] }, totalByWeek: number[] }
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks (1-26), default 12
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignedHoursStatusTimelineResponse'
          description: ''
  /api/assignments/bulk_update_hours/:
    patch:
      operationId: assignments_bulk_update_hours_partial_update
      description: Bulk update weekly hours for multiple assignments in a single transaction.
      tags:
      - assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBulkUpdateHoursRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBulkUpdateHoursRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBulkUpdateHoursRequestRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateHoursResponse'
          description: ''
  /api/assignments/by_person/:
    get:
      operationId: assignments_by_person_retrieve
      description: Get assignments grouped by person
      parameters:
      - in: query
        name: person_id
        schema:
          type: integer
        description: Filter by person id
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
  /api/assignments/check_conflicts/:
    post:
      operationId: assignments_check_conflicts_create
      description: |-
        Check assignment conflicts for a person in a specific week.
        Optimized to prevent N+1 queries by fetching all person assignments
        in a single query.
      tags:
      - assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
  /api/assignments/experience_by_client/:
    get:
      operationId: assignments_experience_by_client_retrieve
      description: |-
        Experience by Client: list people with totals and role aggregates in a date window.

        Params: client?, department?, include_children? (0|1), start?, end?, min_weeks?
      parameters:
      - in: query
        name: client
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: end
        schema:
          type: string
        description: YYYY-MM-DD
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: min_weeks
        schema:
          type: integer
      - in: query
        name: start
        schema:
          type: string
        description: YYYY-MM-DD
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceByClientResponse'
          description: ''
  /api/assignments/grid_snapshot/:
    get:
      operationId: assignments_grid_snapshot_retrieve
      description: |-
        Return compact pre-aggregated grid data for N weeks ahead (default 12).

        Response shape: { weekKeys: [YYYY-MM-DD], people: [{id, name, weeklyCapacity, department}], hoursByPerson: { <personId>: { <weekKey>: hours } } }
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks (1-26), default 12
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GridSnapshotResponse'
          description: ''
  /api/assignments/grid_snapshot_async/:
    get:
      operationId: assignments_grid_snapshot_async_retrieve
      description: Start async grid snapshot job and return task ID for polling.
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks (1-26), default 12
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GridSnapshotAsyncResponse'
          description: ''
  /api/assignments/person_experience_profile/:
    get:
      operationId: assignments_person_experience_profile_retrieve
      description: 'Person Experience Profile: breakdown by client and project with
        role/phase aggregates, plus eventsCount.'
      parameters:
      - in: query
        name: end
        schema:
          type: string
      - in: query
        name: person
        schema:
          type: integer
        required: true
      - in: query
        name: start
        schema:
          type: string
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonExperienceProfileResponse'
          description: ''
  /api/assignments/person_project_timeline/:
    get:
      operationId: assignments_person_project_timeline_retrieve
      description: Person-Project timeline with coverage blocks, events, and derived
        role changes.
      parameters:
      - in: query
        name: end
        schema:
          type: string
      - in: query
        name: person
        schema:
          type: integer
        required: true
      - in: query
        name: project
        schema:
          type: integer
        required: true
      - in: query
        name: start
        schema:
          type: string
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonProjectTimelineResponse'
          description: ''
  /api/assignments/project_grid_snapshot/:
    get:
      operationId: assignments_project_grid_snapshot_retrieve
      description: |-
        Project-centric aggregate snapshot for N weeks ahead (default 12).

        Response shape: { weekKeys: [YYYY-MM-DD], projects: [{id,name,client,status}],
        hoursByProject: { <projectId>: { <weekKey>: hours } },
        deliverablesByProjectWeek: { <projectId>: { <weekKey>: count } },
        hasFutureDeliverablesByProject: { <projectId>: boolean },
        metrics: { projectsCount, peopleAssignedCount, totalHours } }
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: has_future_deliverables
        schema:
          type: integer
        description: 0|1
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: project_ids
        schema:
          type: string
        description: CSV of project IDs to scope totals (optional)
      - in: query
        name: status_in
        schema:
          type: string
        description: CSV of project status filters
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks (1-26), default 12
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGridSnapshotResponse'
          description: ''
  /api/assignments/project_staffing_timeline/:
    get:
      operationId: assignments_project_staffing_timeline_retrieve
      description: 'Project Staffing Timeline: aggregates per role and people lists
        with events.'
      parameters:
      - in: query
        name: end
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        required: true
      - in: query
        name: start
        schema:
          type: string
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStaffingTimelineResponse'
          description: ''
  /api/assignments/project_totals/:
    get:
      operationId: assignments_project_totals_retrieve
      description: Return authoritative totals for specific projects over current
        horizon.
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: project_ids
        schema:
          type: string
        description: CSV of project IDs
        required: true
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks (1-26), default 12
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTotalsResponse'
          description: ''
  /api/assignments/rebalance_suggestions/:
    get:
      operationId: assignments_rebalance_suggestions_retrieve
      description: |-
        Suggest non-destructive rebalancing ideas across the next N weeks
        (default 12).

            Heuristic:
            - Overallocated: utilization > 100% (based on 1-week snapshot)
            - Underutilized: utilization < 70%
            - Pair over with under and propose shifting 4–8 hours
            Returns at most 20 suggestions.
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
  /api/assignments/run_weekly_snapshot/:
    post:
      operationId: assignments_run_weekly_snapshot_create
      description: |-
        Run weekly assignment snapshot writer manually for a given Sunday week.

        If 'week' is omitted, uses the current week's Sunday. Returns writer summary.
      parameters:
      - in: query
        name: week
        schema:
          type: string
        description: YYYY-MM-DD (Sunday)
      tags:
      - assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunWeeklySnapshotResponse'
          description: ''
  /api/auth/admin_audit/:
    get:
      operationId: auth_admin_audit_list
      description: Read-only endpoint for recent admin audit logs (admin only).
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminAuditLog'
          description: ''
  /api/auth/change_password/:
    post:
      operationId: auth_change_password_create
      description: Change password for the authenticated user.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/create_user/:
    post:
      operationId: auth_create_user_create
      description: Create a new user (staff only) and optionally link to a Person.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUserRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUserRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/invite/:
    post:
      operationId: auth_invite_create
      description: |-
        Invite a user by email.

        - If the user exists, sends a password set/reset link.
        - If not, creates an account with an unusable password and sends the link.
        - Optionally assigns role and links to a Person.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InviteUserRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InviteUserRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/link_person/:
    post:
      operationId: auth_link_person_create
      description: Link or unlink the current user's profile to a Person.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkPersonRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkPersonRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkPersonRequestRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/me/:
    get:
      operationId: auth_me_retrieve
      description: Return the current user's profile with settings and optional person
        link.
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/notification-preferences/:
    get:
      operationId: auth_notification_preferences_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreferences'
          description: ''
    put:
      operationId: auth_notification_preferences_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPreferencesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationPreferencesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationPreferencesRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreferences'
          description: ''
  /api/auth/password_reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Request a password reset by email. Always returns 204.

        If a user with the email exists, sends a reset link with uid/token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/password_reset_confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: Confirm password reset with uid/token and set a new password.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/set_password/:
    post:
      operationId: auth_set_password_create
      description: Set password for a target user (staff only).
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/settings/:
    patch:
      operationId: auth_settings_partial_update
      description: Update settings for the current user's profile (partial).
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSettingsPatchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSettingsPatchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSettingsPatchRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/users/:
    get:
      operationId: auth_users_list
      description: List all users with role and linked person (admin only).
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserListItem'
          description: ''
  /api/auth/users/{user_id}/:
    delete:
      operationId: auth_users_destroy
      description: Delete a user account (admin only).
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/{user_id}/link_person/:
    post:
      operationId: auth_users_link_person_create
      description: Link or unlink a target user to a Person (admin only).
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLinkUserPersonRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminLinkUserPersonRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminLinkUserPersonRequestRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListItem'
          description: ''
  /api/auth/users/{user_id}/role/:
    post:
      operationId: auth_users_role_create
      description: |-
        Set role for a target user (admin only).

        Accepts one of: {'role': 'admin' | 'manager' | 'user'}
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserRoleRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUserRoleRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUserRoleRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListItem'
          description: ''
  /api/backups/:
    get:
      operationId: backups_retrieve
      tags:
      - backups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: backups_create
      tags:
      - backups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/backups/{id}/:
    delete:
      operationId: backups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - backups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/backups/{id}/download/:
    get:
      operationId: backups_download_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - backups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/backups/{id}/restore/:
    post:
      operationId: backups_restore_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - backups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/backups/status/:
    get:
      operationId: backups_status_retrieve
      tags:
      - backups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/backups/upload-restore/:
    post:
      operationId: backups_upload_restore_create
      tags:
      - backups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/capabilities/:
    get:
      operationId: capabilities_retrieve
      description: |-
        Advertise backend feature capabilities (requires authentication).

        Returns booleans and simple settings for aggregate endpoints, async jobs, and cache TTL hints.
      tags:
      - capabilities
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/core/department_project_roles/:
    get:
      operationId: core_department_project_roles_retrieve
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: core_department_project_roles_create
      tags:
      - core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeptProjectRoleCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeptProjectRoleCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeptProjectRoleCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeptProjectRoleCreateResponse'
          description: ''
  /api/core/department_project_roles/{department}/{role_id}/:
    delete:
      operationId: core_department_project_roles_destroy
      parameters:
      - in: path
        name: department
        schema:
          type: integer
        required: true
      - in: path
        name: role_id
        schema:
          type: integer
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/core/department_project_roles/map/:
    get:
      operationId: core_department_project_roles_map_retrieve
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/core/pre-deliverable-global-settings/:
    get:
      operationId: core_pre_deliverable_global_settings_list
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreDeliverableGlobalSettingsItem'
          description: ''
    put:
      operationId: core_pre_deliverable_global_settings_update
      tags:
      - core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSettingsUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GlobalSettingsUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GlobalSettingsUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreDeliverableGlobalSettingsItem'
          description: ''
  /api/core/project_roles/:
    get:
      operationId: core_project_roles_retrieve
      description: |-
        List/add project roles for suggestions/settings.

        - GET: returns union of catalog roles and distinct existing assignment roles.
        - POST: admin-only; adds a role to the catalog.
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: core_project_roles_create
      description: |-
        List/add project roles for suggestions/settings.

        - GET: returns union of catalog roles and distinct existing assignment roles.
        - POST: admin-only; adds a role to the catalog.
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: core_project_roles_destroy
      description: |-
        Remove a project role from the catalog and clear assignments using it.

        Behavior:
        - Admin only.
        - Accepts role name via query param (?name=...) or JSON body { name }.
        - Clears `Assignment.role_on_project` wherever it matches (case-insensitive).
        - If a catalog ProjectRole exists for that normalized name, it is deleted.
        - DepartmentProjectRole mappings cascade-delete via FK on ProjectRole.
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/core/utilization_scheme/:
    get:
      operationId: core_utilization_scheme_retrieve
      description: |-
        Singleton endpoint for utilization scheme.

        - GET: returns the current scheme with ETag/Last-Modified. Requires auth.
        - PUT: admin-only, requires If-Match ETag; increments version on success.
        - When feature flag is disabled: GET returns defaults; PUT returns 403.
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilizationScheme'
          description: ''
    put:
      operationId: core_utilization_scheme_update
      description: |-
        Singleton endpoint for utilization scheme.

        - GET: returns the current scheme with ETag/Last-Modified. Requires auth.
        - PUT: admin-only, requires If-Match ETag; increments version on success.
        - When feature flag is disabled: GET returns defaults; PUT returns 403.
      tags:
      - core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilizationSchemeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UtilizationSchemeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UtilizationSchemeRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilizationScheme'
          description: ''
  /api/dashboard/:
    get:
      operationId: dashboard_retrieve
      description: Team dashboard with utilization metrics and overview
      parameters:
      - in: query
        name: department
        schema:
          type: integer
        description: Filter by department id
      - in: query
        name: weeks
        schema:
          type: integer
        description: Number of weeks to aggregate (1-12)
      tags:
      - dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
          description: ''
  /api/deliverables/:
    get:
      operationId: deliverables_list
      description: Get deliverables with bulk loading support (Phase 2 optimization)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeliverableList'
          description: ''
    post:
      operationId: deliverables_create
      description: |-
        CRUD operations for deliverables
        Supports filtering by project and manual reordering
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliverableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliverableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliverableRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deliverable'
          description: ''
  /api/deliverables/{id}/:
    get:
      operationId: deliverables_retrieve
      description: |-
        CRUD operations for deliverables
        Supports filtering by project and manual reordering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable.
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deliverable'
          description: ''
    put:
      operationId: deliverables_update
      description: |-
        CRUD operations for deliverables
        Supports filtering by project and manual reordering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable.
        required: true
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliverableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliverableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliverableRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deliverable'
          description: ''
    patch:
      operationId: deliverables_partial_update
      description: |-
        PATCH deliverable. If date changes and feature flag enabled, reallocate hours.

        Response includes optional 'reallocation' summary with keys:
        { deltaWeeks, assignmentsChanged, touchedWeekKeys }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable.
        required: true
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeliverableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeliverableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeliverableRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deliverable'
          description: ''
    delete:
      operationId: deliverables_destroy
      description: |-
        CRUD operations for deliverables
        Supports filtering by project and manual reordering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable.
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/deliverables/{id}/staffing_summary/:
    get:
      operationId: deliverables_staffing_summary_retrieve
      description: |-
        Return derived staffing for a deliverable from Assignment.weekly_hours.

        Default window: 6 weeks prior OR between previous and current deliverable (exclusive→inclusive).
        Optional override: ?weeks=6 to force a fixed lookback window.

        Returns array items per person with >0 hours in window on the deliverable's project:
        { linkId|null, personId, personName, roleOnMilestone|null, totalHours, weekBreakdown }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable.
        required: true
      - in: query
        name: weeks
        schema:
          type: integer
        description: Lookback window in weeks
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliverableStaffingSummaryItem'
          description: ''
  /api/deliverables/assignments/:
    get:
      operationId: deliverables_assignments_list
      description: CRUD and filter endpoints for deliverable-person weekly hour links.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeliverableAssignmentList'
          description: ''
    post:
      operationId: deliverables_assignments_create
      description: CRUD and filter endpoints for deliverable-person weekly hour links.
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliverableAssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliverableAssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliverableAssignmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliverableAssignment'
          description: ''
  /api/deliverables/assignments/{id}/:
    get:
      operationId: deliverables_assignments_retrieve
      description: CRUD and filter endpoints for deliverable-person weekly hour links.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable assignment.
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliverableAssignment'
          description: ''
    put:
      operationId: deliverables_assignments_update
      description: CRUD and filter endpoints for deliverable-person weekly hour links.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable assignment.
        required: true
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliverableAssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliverableAssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliverableAssignmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliverableAssignment'
          description: ''
    patch:
      operationId: deliverables_assignments_partial_update
      description: CRUD and filter endpoints for deliverable-person weekly hour links.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable assignment.
        required: true
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeliverableAssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeliverableAssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeliverableAssignmentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliverableAssignment'
          description: ''
    delete:
      operationId: deliverables_assignments_destroy
      description: CRUD and filter endpoints for deliverable-person weekly hour links.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deliverable assignment.
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/deliverables/assignments/by_deliverable/:
    get:
      operationId: deliverables_assignments_by_deliverable_list
      description: CRUD and filter endpoints for deliverable-person weekly hour links.
      parameters:
      - in: query
        name: deliverable
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeliverableAssignmentList'
          description: ''
  /api/deliverables/assignments/by_person/:
    get:
      operationId: deliverables_assignments_by_person_list
      description: CRUD and filter endpoints for deliverable-person weekly hour links.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: person
        schema:
          type: integer
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeliverableAssignmentList'
          description: ''
  /api/deliverables/bulk/:
    get:
      operationId: deliverables_bulk_retrieve
      description: |-
        Bulk fetch deliverables for multiple projects
        GET /api/deliverables/bulk/?project_ids=1,2,3,4

        Returns: { "1": [...], "2": [...], "3": [...], "4": [...] }
      parameters:
      - in: query
        name: project_ids
        schema:
          type: string
        description: Comma-separated project IDs
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/deliverables/calendar/:
    get:
      operationId: deliverables_calendar_list
      description: |-
        Read-only calendar endpoint returning deliverables within a date range
        with assignmentCount. Missing params tolerated (returns all dated items).

        GET /api/deliverables/calendar?start=YYYY-MM-DD&end=YYYY-MM-DD
      parameters:
      - in: query
        name: end
        schema:
          type: string
        description: YYYY-MM-DD
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: start
        schema:
          type: string
        description: YYYY-MM-DD
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeliverableCalendarItemList'
          description: ''
  /api/deliverables/calendar_with_pre_items/:
    get:
      operationId: deliverables_calendar_with_pre_items_retrieve
      description: |-
        Calendar view returning deliverables and pre-deliverable items.

        Semantics:
        - When mine_only=true, scope results to the union of:
          (a) deliverables directly linked to the current user via DeliverableAssignment,
          (b) deliverables on projects where the current user has an active project-level Assignment.
        - Duplicates are eliminated via a distinct ID subquery strategy; counts use distinct=True.
        - Optional filters: start, end (dates) and type_id (pre-deliverable type).
      parameters:
      - in: query
        name: end
        schema:
          type: string
        description: YYYY-MM-DD
      - in: query
        name: mine_only
        schema:
          type: boolean
      - in: query
        name: start
        schema:
          type: string
        description: YYYY-MM-DD
      - in: query
        name: type_id
        schema:
          type: integer
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deliverable'
          description: ''
  /api/deliverables/personal_pre_deliverables/:
    get:
      operationId: deliverables_personal_pre_deliverables_retrieve
      description: Upcoming pre-deliverable items for the authenticated user (default
        14 days).
      parameters:
      - in: query
        name: days_ahead
        schema:
          type: integer
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deliverable'
          description: ''
  /api/deliverables/pre_deliverable_items/:
    get:
      operationId: deliverables_pre_deliverable_items_list
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPreDeliverableItemList'
          description: ''
    post:
      operationId: deliverables_pre_deliverable_items_create
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreDeliverableItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PreDeliverableItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PreDeliverableItemRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreDeliverableItem'
          description: ''
  /api/deliverables/pre_deliverable_items/{id}/:
    get:
      operationId: deliverables_pre_deliverable_items_retrieve
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pre-Deliverable Item.
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreDeliverableItem'
          description: ''
    put:
      operationId: deliverables_pre_deliverable_items_update
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pre-Deliverable Item.
        required: true
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreDeliverableItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PreDeliverableItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PreDeliverableItemRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreDeliverableItem'
          description: ''
    patch:
      operationId: deliverables_pre_deliverable_items_partial_update
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pre-Deliverable Item.
        required: true
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPreDeliverableItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPreDeliverableItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPreDeliverableItemRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreDeliverableItem'
          description: ''
    delete:
      operationId: deliverables_pre_deliverable_items_destroy
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pre-Deliverable Item.
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/deliverables/pre_deliverable_items/{id}/complete/:
    post:
      operationId: deliverables_pre_deliverable_items_complete_create
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pre-Deliverable Item.
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreDeliverableItem'
          description: ''
  /api/deliverables/pre_deliverable_items/{id}/uncomplete/:
    post:
      operationId: deliverables_pre_deliverable_items_uncomplete_create
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pre-Deliverable Item.
        required: true
      tags:
      - deliverables
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreDeliverableItem'
          description: ''
  /api/deliverables/pre_deliverable_items/backfill/:
    post:
      operationId: deliverables_pre_deliverable_items_backfill_create
      description: |-
        Staff-only: backfill or regenerate pre-items for a project/date window.

        If ASYNC_JOBS is enabled and Celery task is available, enqueues background job and
        returns 202 with job metadata. Otherwise, runs synchronously and returns a summary.
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreItemsBackfillRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PreItemsBackfillRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PreItemsBackfillRequestRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreItemsBackfillResponse'
          description: ''
  /api/deliverables/pre_deliverable_items/bulk_complete/:
    post:
      operationId: deliverables_pre_deliverable_items_bulk_complete_create
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCompleteRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkCompleteRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkCompleteRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCompleteResponse'
          description: ''
  /api/deliverables/reorder/:
    post:
      operationId: deliverables_reorder_create
      description: |-
        Manually reorder deliverables for a project
        Expected payload: {
            "project": project_id,
            "deliverable_ids": [id1, id2, id3, ...]
        }
      tags:
      - deliverables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliverableReorderRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliverableReorderRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliverableReorderRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliverableReorderResponse'
          description: ''
  /api/departments/:
    get:
      operationId: departments_list
      description: Get all departments with bulk loading support
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - departments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentList'
          description: ''
    post:
      operationId: departments_create
      tags:
      - departments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/departments/{id}/:
    get:
      operationId: departments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    put:
      operationId: departments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    patch:
      operationId: departments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    delete:
      operationId: departments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{job_id}/:
    get:
      operationId: jobs_retrieve
      description: |-
        Return status and metadata for a Celery job.

        Response fields:
        - id: task id
        - state: PENDING|STARTED|PROGRESS|SUCCESS|FAILURE
        - progress: 0-100 if available
        - message: optional status message
        - downloadReady: bool
        - downloadUrl: present when a file is available to download
        - result: task result when not file-based (e.g., import summary)
        - error: error message if failed
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
        description: Background job id
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  state:
                    type: string
                    enum:
                    - PENDING
                    - STARTED
                    - PROGRESS
                    - SUCCESS
                    - FAILURE
                  progress:
                    type: integer
                  message:
                    type: string
                    nullable: true
                  downloadReady:
                    type: boolean
                  downloadUrl:
                    type: string
                    nullable: true
                  result: {}
                  error:
                    type: string
                    nullable: true
                required:
                - id
                - state
                - progress
                - downloadReady
          description: ''
        '503':
          content:
            application/json:
              schema:
                description: Async jobs not available
          description: ''
        '409':
          content:
            application/json:
              schema:
                description: Job not completed
          description: ''
  /api/jobs/{job_id}/download/:
    get:
      operationId: jobs_download_retrieve
      description: Stream the file produced by a completed job (if any).
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
        description: Background job id
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: File content
        '404':
          content:
            application/json:
              schema:
                description: No file associated with this job
          description: ''
        '409':
          content:
            application/json:
              schema:
                description: Job not completed
          description: ''
        '503':
          content:
            application/json:
              schema:
                description: Async jobs not available
          description: ''
  /api/people/:
    get:
      operationId: people_list
      description: Get all people with conditional request support (ETag/Last-Modified)
        and bulk loading
      parameters:
      - in: query
        name: all
        schema:
          type: string
        description: Return all items without pagination when true
      - in: query
        name: department
        schema:
          type: integer
        description: Filter by department id
      - in: query
        name: include_children
        schema:
          type: integer
        description: Include child departments (0|1)
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Page size
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
          description: ''
    post:
      operationId: people_create
      description: |-
        Person CRUD API with utilization calculations
        Uses AutoMapped serializer for automatic snake_case â†” camelCase conversion
      tags:
      - people
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/people/{id}/:
    get:
      operationId: people_retrieve
      description: |-
        Person CRUD API with utilization calculations
        Uses AutoMapped serializer for automatic snake_case â†” camelCase conversion
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    put:
      operationId: people_update
      description: |-
        Person CRUD API with utilization calculations
        Uses AutoMapped serializer for automatic snake_case â†” camelCase conversion
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - people
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    patch:
      operationId: people_partial_update
      description: |-
        Person CRUD API with utilization calculations
        Uses AutoMapped serializer for automatic snake_case â†” camelCase conversion
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - people
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPersonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPersonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPersonRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    delete:
      operationId: people_destroy
      description: |-
        Delete a person by primary key.

        Note: bypass get_queryset() filtering so deletes work even if the record
        is inactive or excluded from the default list queryset.
        Still enforces object-level permissions before deletion.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/people/{id}/utilization/:
    get:
      operationId: people_utilization_retrieve
      description: Get detailed utilization breakdown for a person - Chunk 3
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/people/autocomplete/:
    get:
      operationId: people_autocomplete_retrieve
      description: |-
        Lightweight autocomplete for active people.

        Query params:
        - search or q: optional substring of name
        - limit: max results (default 20)
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Max results (1-50)
      - in: query
        name: q
        schema:
          type: string
        description: Alias for search
      - in: query
        name: search
        schema:
          type: string
        description: Substring of name
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleAutocompleteItem'
          description: ''
  /api/people/capacity_heatmap/:
    get:
      operationId: people_capacity_heatmap_list
      description: Return per-person week summaries for the next N weeks (default
        12).
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: weeks
        schema:
          type: integer
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonCapacityHeatmapItemList'
          description: ''
  /api/people/export_excel/:
    get:
      operationId: people_export_excel_retrieve
      description: Export people to Excel with streaming response for large datasets
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/people/find_available/:
    get:
      operationId: people_find_available_list
      description: |-
        Person CRUD API with utilization calculations
        Uses AutoMapped serializer for automatic snake_case â†” camelCase conversion
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: limit
        schema:
          type: integer
        description: Max results (1-200), default 100
      - in: query
        name: minAvailableHours
        schema:
          type: number
          format: double
        description: Filter to people with at least this many hours free
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: skills
        schema:
          type: string
        description: Comma-separated skill names
      - in: query
        name: week
        schema:
          type: string
        description: YYYY-MM-DD (Monday) week key
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSkillMatchResultItemList'
          description: ''
  /api/people/import_excel/:
    post:
      operationId: people_import_excel_create
      description: Import people from Excel with progress tracking
      tags:
      - people
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/people/search/:
    get:
      operationId: people_search_retrieve
      description: |-
        Server-side typeahead for People.

        Params:
        - q: required search query (min length 2)
        - limit: optional, default 20, max 50
        Returns minimal projection: id, name, department
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Max results (1-50)
      - in: query
        name: q
        schema:
          type: string
        description: Search query (min length 2)
        required: true
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleSearchItem'
          description: ''
  /api/people/skill_match/:
    get:
      operationId: people_skill_match_list
      description: |-
        Rank people by skills (and optionally availability for a given week).

        Returns an array of items: { personId, name, score, matchedSkills[], missingSkills[], departmentId, roleName }.
        Score is based on percent of required skills matched (case-insensitive contains) and optionally blended with availability when `week` is provided.
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: limit
        schema:
          type: integer
        description: Max results (1-200), default 50
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: skills
        schema:
          type: string
        description: Comma-separated skill names
        required: true
      - in: query
        name: week
        schema:
          type: string
        description: YYYY-MM-DD (Monday) for availability-aware scoring
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSkillMatchResultItemList'
          description: ''
  /api/people/skill_match_async/:
    get:
      operationId: people_skill_match_async_retrieve
      description: Start async skill match job and return task ID for polling.
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - in: query
        name: limit
        schema:
          type: integer
        description: Max results (1-200), default 50
      - in: query
        name: skills
        schema:
          type: string
        description: Comma-separated skill names
        required: true
      - in: query
        name: week
        schema:
          type: string
        description: YYYY-MM-DD (Monday) for availability-aware scoring
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillMatchAsyncResponse'
          description: ''
  /api/people/workload_forecast/:
    get:
      operationId: people_workload_forecast_list
      description: |-
        Aggregate team capacity vs allocated for N weeks ahead (default 8).

        Response array items:
        { weekStart, totalCapacity, totalAllocated, teamUtilization, peopleOverallocated[] }
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: include_children
        schema:
          type: integer
        description: 0|1
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: weeks
        schema:
          type: integer
      tags:
      - people
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkloadForecastItemList'
          description: ''
  /api/personal/work/:
    get:
      operationId: personal_work_retrieve
      tags:
      - personal
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/projects/:
    get:
      operationId: projects_list
      description: Get all projects with conditional request support (ETag/Last-Modified)
        and bulk loading
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: projects_create
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: projects_retrieve
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{id}/availability/:
    get:
      operationId: projects_availability_list
      description: |-
        Return availability snapshot for people relevant to the project context.

        Response items: { personId, personName, totalHours, capacity, availableHours, utilizationPercent }
        Uses Sunday as canonical week key; exact JSON key lookup (no tolerance).
      parameters:
      - in: query
        name: candidates_only
        schema:
          type: integer
        description: Limit to departments already staffing this project (0|1)
      - in: query
        name: department
        schema:
          type: integer
        description: Filter people by department id
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: query
        name: include_children
        schema:
          type: integer
        description: Include child departments (0|1)
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: week
        schema:
          type: string
        description: YYYY-MM-DD (Sunday key)
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectAvailabilityItemList'
          description: ''
  /api/projects/{id}/pre-deliverable-settings/:
    get:
      operationId: projects_pre_deliverable_settings_retrieve
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPreDeliverableSettingsResponse'
          description: ''
    put:
      operationId: projects_pre_deliverable_settings_update
      description: |-
        Adds ETag on detail GET and optional If-Match handling on mutations.

        - Detail GET (retrieve): returns ETag (and Last-Modified if available). Honors If-None-Match with 304.
        - Mutations (update/partial_update/destroy): when If-Match is present and does not match current ETag, returns 412.
          When If-Match is absent, proceeds (frontend can adopt conditionals progressively).
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPreDeliverableSettingsResponse'
          description: ''
  /api/projects/export_excel/:
    get:
      operationId: projects_export_excel_retrieve
      description: Export projects to Excel with streaming response for large datasets
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/export_template/:
    get:
      operationId: projects_export_template_retrieve
      description: Export Excel import template with examples
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/filter-metadata/:
    get:
      operationId: projects_filter_metadata_retrieve
      description: |-
        Get optimized filter metadata for all projects.

        Returns camelCase keys for direct frontend consumption:
        {
          "projectFilters": {
            "<projectId>": {
              "assignmentCount": number,
              "hasFutureDeliverables": boolean,
              "status": string
            }, ...
          }
        }
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFilterMetadataResponse'
          description: ''
  /api/projects/import_excel/:
    post:
      operationId: projects_import_excel_create
      description: Import projects from Excel with progress tracking
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/project-roles/:
    get:
      operationId: projects_project_roles_list
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRoleItem'
          description: ''
    post:
      operationId: projects_project_roles_create
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRoleCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRoleCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRoleCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRoleItem'
          description: ''
  /api/projects/project-roles/{id}/:
    patch:
      operationId: projects_project_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRoleUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRoleUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRoleUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRoleItem'
          description: ''
    delete:
      operationId: projects_project_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/reports/pre-deliverable-completion/:
    get:
      operationId: reports_pre_deliverable_completion_retrieve
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/reports/pre-deliverable-team-performance/:
    get:
      operationId: reports_pre_deliverable_team_performance_retrieve
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/roles/:
    get:
      operationId: roles_list
      description: |-
        Role ViewSet providing CRUD operations
        - List all roles (paginated)
        - Create new role
        - Retrieve specific role
        - Update role
        - Delete role
        - Bulk list (for autocomplete)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - roles
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ''
    post:
      operationId: roles_create
      description: |-
        Role ViewSet providing CRUD operations
        - List all roles (paginated)
        - Create new role
        - Retrieve specific role
        - Update role
        - Delete role
        - Bulk list (for autocomplete)
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/roles/{id}/:
    get:
      operationId: roles_retrieve
      description: |-
        Role ViewSet providing CRUD operations
        - List all roles (paginated)
        - Create new role
        - Retrieve specific role
        - Update role
        - Delete role
        - Bulk list (for autocomplete)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Role.
        required: true
      tags:
      - roles
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: roles_update
      description: |-
        Role ViewSet providing CRUD operations
        - List all roles (paginated)
        - Create new role
        - Retrieve specific role
        - Update role
        - Delete role
        - Bulk list (for autocomplete)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Role.
        required: true
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: roles_partial_update
      description: |-
        Role ViewSet providing CRUD operations
        - List all roles (paginated)
        - Create new role
        - Retrieve specific role
        - Update role
        - Delete role
        - Bulk list (for autocomplete)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Role.
        required: true
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoleRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: roles_destroy
      description: Override destroy to check for role usage before deletion
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Role.
        required: true
      tags:
      - roles
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/roles/bulk/:
    get:
      operationId: roles_bulk_list
      description: |-
        Return all roles without pagination for autocomplete/dropdowns
        Access via: GET /api/roles/bulk/
      parameters:
      - in: query
        name: include_inactive
        schema:
          type: boolean
        description: Include inactive roles when present
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - roles
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ''
  /api/skills/person-skills/:
    get:
      operationId: skills_person_skills_list
      description: CRUD operations for person skills
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - skills
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonSkillList'
          description: ''
    post:
      operationId: skills_person_skills_create
      description: CRUD operations for person skills
      tags:
      - skills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonSkillRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonSkillRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonSkillRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonSkill'
          description: ''
  /api/skills/person-skills/{id}/:
    get:
      operationId: skills_person_skills_retrieve
      description: CRUD operations for person skills
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Person Skill.
        required: true
      tags:
      - skills
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonSkill'
          description: ''
    put:
      operationId: skills_person_skills_update
      description: CRUD operations for person skills
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Person Skill.
        required: true
      tags:
      - skills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonSkillRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonSkillRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonSkillRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonSkill'
          description: ''
    patch:
      operationId: skills_person_skills_partial_update
      description: CRUD operations for person skills
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Person Skill.
        required: true
      tags:
      - skills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPersonSkillRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPersonSkillRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPersonSkillRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonSkill'
          description: ''
    delete:
      operationId: skills_person_skills_destroy
      description: CRUD operations for person skills
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Person Skill.
        required: true
      tags:
      - skills
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/skills/person-skills/summary/:
    get:
      operationId: skills_person_skills_summary_retrieve
      description: Get skill summary for a person
      parameters:
      - in: query
        name: person
        schema:
          type: integer
        description: Person id
        required: true
      tags:
      - skills
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonSkillSummaryGrouped'
          description: ''
  /api/skills/skill-tags/:
    get:
      operationId: skills_skill_tags_list
      description: CRUD operations for skill tags
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - skills
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSkillTagList'
          description: ''
    post:
      operationId: skills_skill_tags_create
      description: CRUD operations for skill tags
      tags:
      - skills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SkillTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SkillTagRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillTag'
          description: ''
  /api/skills/skill-tags/{id}/:
    get:
      operationId: skills_skill_tags_retrieve
      description: CRUD operations for skill tags
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Skill Tag.
        required: true
      tags:
      - skills
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillTag'
          description: ''
    put:
      operationId: skills_skill_tags_update
      description: CRUD operations for skill tags
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Skill Tag.
        required: true
      tags:
      - skills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SkillTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SkillTagRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillTag'
          description: ''
    patch:
      operationId: skills_skill_tags_partial_update
      description: CRUD operations for skill tags
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Skill Tag.
        required: true
      tags:
      - skills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSkillTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSkillTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSkillTagRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillTag'
          description: ''
    delete:
      operationId: skills_skill_tags_destroy
      description: CRUD operations for skill tags
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Skill Tag.
        required: true
      tags:
      - skills
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameOrEmailTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameOrEmailTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameOrEmailTokenObtainPairRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/token/logout/:
    post:
      operationId: token_logout_create
      description: Clears the refresh cookie in cookie mode. Body is ignored.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AdminAuditLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        action:
          type: string
          readOnly: true
        detail:
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        actor:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
        targetUser:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
      required:
      - action
      - actor
      - created_at
      - detail
      - id
      - targetUser
    AdminLinkUserPersonRequestRequest:
      type: object
      properties:
        personId:
          type: integer
          nullable: true
    AssignedHoursByClientResponse:
      type: object
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/ClientTotal'
      required:
      - clients
    AssignedHoursClientProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTotal'
      required:
      - projects
    AssignedHoursDeliverableTimelineResponse:
      type: object
      properties:
        weekKeys:
          type: array
          items:
            type: string
        series:
          $ref: '#/components/schemas/DeliverableSeries'
        extras:
          type: array
          items:
            $ref: '#/components/schemas/ExtraSeries'
          nullable: true
          description: 'deprecated: kept for backward compatibility; typically empty'
        totalByWeek:
          type: array
          items:
            type: number
            format: double
      required:
      - series
      - totalByWeek
      - weekKeys
    AssignedHoursStatusTimelineResponse:
      type: object
      properties:
        weekKeys:
          type: array
          items:
            type: string
        series:
          $ref: '#/components/schemas/StatusSeries'
        totalByWeek:
          type: array
          items:
            type: number
            format: double
      required:
      - series
      - totalByWeek
      - weekKeys
    Assignment:
      type: object
      description: Assignment serializer with weekly hours support
      properties:
        id:
          type: integer
          readOnly: true
        person:
          type: integer
        personName:
          type: string
          readOnly: true
        personWeeklyCapacity:
          type: integer
          readOnly: true
        personDepartmentId:
          type: integer
          readOnly: true
        personSkills:
          type: array
          items:
            $ref: '#/components/schemas/PersonSkillSummary'
          readOnly: true
        projectName:
          type: string
          maxLength: 200
        project:
          type: integer
          nullable: true
        projectDisplayName:
          type: string
          readOnly: true
        roleOnProjectId:
          type: integer
          nullable: true
        roleName:
          type: string
          readOnly: true
          nullable: true
        weeklyHours: {}
        allocationPercentage:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - allocationPercentage
      - createdAt
      - id
      - person
      - personDepartmentId
      - personName
      - personSkills
      - personWeeklyCapacity
      - projectDisplayName
      - roleName
      - updatedAt
      - weeklyHours
    AssignmentHoursUpdateRequest:
      type: object
      properties:
        assignmentId:
          type: integer
        weeklyHours:
          type: object
          additionalProperties:
            type: number
            format: double
      required:
      - assignmentId
      - weeklyHours
    AssignmentRequest:
      type: object
      description: Assignment serializer with weekly hours support
      properties:
        person:
          type: integer
        projectName:
          type: string
          minLength: 1
          maxLength: 200
        project:
          type: integer
          nullable: true
        roleOnProjectId:
          type: integer
          nullable: true
        weeklyHours: {}
      required:
      - person
      - weeklyHours
    AvailablePerson:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        available_hours:
          type: number
          format: double
        utilization_percent:
          type: number
          format: double
      required:
      - available_hours
      - id
      - name
      - utilization_percent
    BulkCompleteRequestRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
      required:
      - ids
    BulkCompleteResponse:
      type: object
      properties:
        success:
          type: boolean
        updatedCount:
          type: integer
        failed:
          type: array
          items:
            type: integer
      required:
      - failed
      - success
      - updatedCount
    BulkUpdateHoursResponse:
      type: object
      properties:
        success:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkUpdateResultItem'
      required:
      - results
      - success
    BulkUpdateResultItem:
      type: object
      properties:
        assignmentId:
          type: integer
        status:
          type: string
        etag:
          type: string
      required:
      - assignmentId
      - etag
      - status
    ChangePasswordRequestRequest:
      type: object
      properties:
        currentPassword:
          type: string
          minLength: 1
        newPassword:
          type: string
          minLength: 1
      required:
      - currentPassword
      - newPassword
    ClientTotal:
      type: object
      properties:
        label:
          type: string
        hours:
          type: number
          format: double
      required:
      - hours
      - label
    CoverageBlock:
      type: object
      properties:
        roleId:
          type: integer
        start:
          type: string
        end:
          type: string
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - end
      - hours
      - roleId
      - start
      - weeks
    CreateUserRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        email:
          type: string
        password:
          type: string
          minLength: 1
        personId:
          type: integer
          nullable: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - password
      - username
    DashboardResponse:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/DashboardSummary'
        utilization_distribution:
          $ref: '#/components/schemas/UtilizationDistribution'
        team_overview:
          type: array
          items:
            $ref: '#/components/schemas/TeamOverviewItem'
        available_people:
          type: array
          items:
            $ref: '#/components/schemas/AvailablePerson'
        recent_assignments:
          type: array
          items:
            $ref: '#/components/schemas/RecentAssignment'
      required:
      - available_people
      - recent_assignments
      - summary
      - team_overview
      - utilization_distribution
    DashboardSummary:
      type: object
      properties:
        total_people:
          type: integer
        avg_utilization:
          type: number
          format: double
        peak_utilization:
          type: number
          format: double
        peak_person:
          type: string
          nullable: true
        total_assignments:
          type: integer
        overallocated_count:
          type: integer
      required:
      - avg_utilization
      - overallocated_count
      - peak_utilization
      - total_assignments
      - total_people
    Deliverable:
      type: object
      description: Deliverable serializer with snake_case -> camelCase field mapping
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        percentage:
          type: integer
          maximum: 100
          minimum: 0
          nullable: true
          description: Completion percentage (0-100)
        description:
          type: string
          description: Brief description (e.g., SD, DD, IFP, IFC)
          maxLength: 200
        date:
          type: string
          format: date
          nullable: true
        notes:
          type: string
          description: Additional details, owner info, requirements, etc.
        sortOrder:
          type: integer
        isCompleted:
          type: boolean
        completedDate:
          type: string
          format: date
          nullable: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        preItems:
          type: string
          readOnly: true
      required:
      - createdAt
      - id
      - preItems
      - project
      - updatedAt
    DeliverableAssignment:
      type: object
      description: Serializer for linking people to deliverables with weekly hours.
      properties:
        id:
          type: integer
          readOnly: true
        deliverable:
          type: integer
        person:
          type: integer
        roleOnMilestone:
          type: string
          nullable: true
        is_active:
          type: boolean
        personName:
          type: string
          readOnly: true
        projectId:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - createdAt
      - deliverable
      - id
      - person
      - personName
      - projectId
      - updatedAt
    DeliverableAssignmentRequest:
      type: object
      description: Serializer for linking people to deliverables with weekly hours.
      properties:
        deliverable:
          type: integer
        person:
          type: integer
        roleOnMilestone:
          type: string
          nullable: true
        is_active:
          type: boolean
      required:
      - deliverable
      - person
    DeliverableCalendarItem:
      type: object
      description: |-
        Serializer for calendar items (aggregate), camelCase API fields.

        Accepts Deliverable instances annotated with assignmentCount.
      properties:
        id:
          type: integer
        project:
          type: integer
        projectName:
          type: string
          nullable: true
        projectClient:
          type: string
          nullable: true
        title:
          type: string
          readOnly: true
        date:
          type: string
          format: date
          nullable: true
        isCompleted:
          type: boolean
        assignmentCount:
          type: integer
      required:
      - assignmentCount
      - date
      - id
      - isCompleted
      - project
      - projectName
      - title
    DeliverablePhaseEnum:
      enum:
      - sd
      - dd
      - ifp
      - masterplan
      - bulletins
      - ca
      - other
      type: string
      description: |-
        * `sd` - SD
        * `dd` - DD
        * `ifp` - IFP
        * `masterplan` - Masterplan
        * `bulletins` - Bulletins
        * `ca` - CA
        * `other` - Other
    DeliverableReorderRequestRequest:
      type: object
      properties:
        project:
          type: integer
        deliverable_ids:
          type: array
          items:
            type: integer
      required:
      - deliverable_ids
      - project
    DeliverableReorderResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    DeliverableRequest:
      type: object
      description: Deliverable serializer with snake_case -> camelCase field mapping
      properties:
        project:
          type: integer
        percentage:
          type: integer
          maximum: 100
          minimum: 0
          nullable: true
          description: Completion percentage (0-100)
        description:
          type: string
          description: Brief description (e.g., SD, DD, IFP, IFC)
          maxLength: 200
        date:
          type: string
          format: date
          nullable: true
        notes:
          type: string
          description: Additional details, owner info, requirements, etc.
        sortOrder:
          type: integer
        isCompleted:
          type: boolean
        completedDate:
          type: string
          format: date
          nullable: true
      required:
      - project
    DeliverableSeries:
      type: object
      properties:
        sd:
          type: array
          items:
            type: number
            format: double
        dd:
          type: array
          items:
            type: number
            format: double
        ifp:
          type: array
          items:
            type: number
            format: double
        masterplan:
          type: array
          items:
            type: number
            format: double
        bulletins:
          type: array
          items:
            type: number
            format: double
        ca:
          type: array
          items:
            type: number
            format: double
        other:
          type: array
          items:
            type: number
            format: double
      required:
      - bulletins
      - ca
      - dd
      - ifp
      - masterplan
      - other
      - sd
    DeliverableStaffingSummaryItem:
      type: object
      properties:
        linkId:
          type: integer
          nullable: true
        personId:
          type: integer
        personName:
          type: string
        roleOnMilestone:
          type: string
          nullable: true
        totalHours:
          type: number
          format: double
        weekBreakdown:
          type: object
          additionalProperties: {}
      required:
      - personId
      - personName
      - totalHours
      - weekBreakdown
    Department:
      type: object
      description: Department serializer with explicit camelCase field mapping
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        parentDepartment:
          type: integer
          nullable: true
        manager:
          type: integer
          nullable: true
        managerName:
          type: string
          readOnly: true
        description:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - createdAt
      - id
      - isActive
      - managerName
      - name
      - updatedAt
    DepartmentRequest:
      type: object
      description: Department serializer with explicit camelCase field mapping
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        parentDepartment:
          type: integer
          nullable: true
        manager:
          type: integer
          nullable: true
        description:
          type: string
        isActive:
          type: boolean
      required:
      - isActive
      - name
    DeptProjectRoleCreateRequest:
      type: object
      properties:
        department:
          type: integer
        name:
          type: string
          minLength: 1
      required:
      - department
      - name
    DeptProjectRoleCreateResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
    EBCPRoleAgg:
      type: object
      properties:
        roleId:
          type: integer
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - hours
      - roleId
      - weeks
    EBCPTotals:
      type: object
      properties:
        weeks:
          type: integer
        hours:
          type: number
          format: double
        projectsCount:
          type: integer
      required:
      - hours
      - projectsCount
      - weeks
    EventTypeEnum:
      enum:
      - joined
      - left
      type: string
      description: |-
        * `joined` - Joined
        * `left` - Left
    ExperienceByClientPerson:
      type: object
      properties:
        personId:
          type: integer
        personName:
          type: string
        departmentId:
          type: integer
          nullable: true
        totals:
          $ref: '#/components/schemas/EBCPTotals'
        roles:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EBCPRoleAgg'
      required:
      - personId
      - personName
      - roles
      - totals
    ExperienceByClientResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExperienceByClientPerson'
        count:
          type: integer
      required:
      - count
      - results
    ExtraSeries:
      type: object
      properties:
        label:
          type: string
        values:
          type: array
          items:
            type: number
            format: double
      required:
      - label
      - values
    GlobalSettingsUpdateRequest:
      type: object
      properties:
        settings:
          type: array
          items:
            $ref: '#/components/schemas/PreDeliverableGlobalSettingsUpdateRequest'
      required:
      - settings
    GridSnapshotAsyncResponse:
      type: object
      properties:
        jobId:
          type: string
      required:
      - jobId
    GridSnapshotPerson:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        weeklyCapacity:
          type: integer
        department:
          type: integer
          nullable: true
      required:
      - department
      - id
      - name
      - weeklyCapacity
    GridSnapshotResponse:
      type: object
      properties:
        weekKeys:
          type: array
          items:
            type: string
        people:
          type: array
          items:
            $ref: '#/components/schemas/GridSnapshotPerson'
        hoursByPerson:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: number
              format: double
      required:
      - hoursByPerson
      - people
      - weekKeys
    InviteUserRequestRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        username:
          type: string
        personId:
          type: integer
          nullable: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - email
    LinkPersonRequestRequest:
      type: object
      properties:
        person_id:
          type: integer
          nullable: true
    MembershipEvent:
      type: object
      properties:
        week_start:
          type: string
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        deliverable_phase:
          $ref: '#/components/schemas/DeliverablePhaseEnum'
        hours_before:
          type: number
          format: double
        hours_after:
          type: number
          format: double
      required:
      - deliverable_phase
      - event_type
      - hours_after
      - hours_before
      - week_start
    ModeEnum:
      enum:
      - absolute_hours
      - percent
      type: string
      description: |-
        * `absolute_hours` - Absolute Hours
        * `percent` - Percent
    NotificationPreferences:
      type: object
      properties:
        emailPreDeliverableReminders:
          type: boolean
        reminderDaysBefore:
          type: integer
          minimum: 0
        dailyDigest:
          type: boolean
      required:
      - dailyDigest
      - emailPreDeliverableReminders
      - reminderDaysBefore
    NotificationPreferencesRequest:
      type: object
      properties:
        emailPreDeliverableReminders:
          type: boolean
        reminderDaysBefore:
          type: integer
          minimum: 0
        dailyDigest:
          type: boolean
      required:
      - dailyDigest
      - emailPreDeliverableReminders
      - reminderDaysBefore
    PEPClient:
      type: object
      properties:
        client:
          type: string
        weeks:
          type: integer
        hours:
          type: number
          format: double
        roles:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PEPClientRole'
        phases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PEPClientPhase'
      required:
      - client
      - hours
      - phases
      - roles
      - weeks
    PEPClientPhase:
      type: object
      properties:
        phase:
          $ref: '#/components/schemas/PhaseEnum'
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - hours
      - phase
      - weeks
    PEPClientRole:
      type: object
      properties:
        roleId:
          type: integer
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - hours
      - roleId
      - weeks
    PEPProject:
      type: object
      properties:
        projectId:
          type: integer
        projectName:
          type: string
        client:
          type: string
        weeks:
          type: integer
        hours:
          type: number
          format: double
        roles:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PEPProjectRole'
        phases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PEPProjectPhase'
      required:
      - client
      - hours
      - phases
      - projectId
      - projectName
      - roles
      - weeks
    PEPProjectPhase:
      type: object
      properties:
        phase:
          $ref: '#/components/schemas/PhaseEnum'
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - hours
      - phase
      - weeks
    PEPProjectRole:
      type: object
      properties:
        roleId:
          type: integer
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - hours
      - roleId
      - weeks
    PSTEvent:
      type: object
      properties:
        week_start:
          type: string
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
      required:
      - event_type
      - week_start
    PSTPerson:
      type: object
      properties:
        personId:
          type: integer
        personName:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PSTPersonRole'
        events:
          type: array
          items:
            $ref: '#/components/schemas/PSTEvent'
      required:
      - events
      - personId
      - personName
      - roles
    PSTPersonRole:
      type: object
      properties:
        roleId:
          type: integer
          nullable: true
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - hours
      - roleId
      - weeks
    PSTRoleAgg:
      type: object
      properties:
        roleId:
          type: integer
          nullable: true
        peopleCount:
          type: integer
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - hours
      - peopleCount
      - roleId
      - weeks
    PaginatedAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
    PaginatedDeliverableAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeliverableAssignment'
    PaginatedDeliverableCalendarItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeliverableCalendarItem'
    PaginatedDeliverableList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Deliverable'
    PaginatedDepartmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Department'
    PaginatedPersonCapacityHeatmapItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonCapacityHeatmapItem'
    PaginatedPersonList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    PaginatedPersonSkillList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonSkill'
    PaginatedPreDeliverableItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PreDeliverableItem'
    PaginatedProjectAvailabilityItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectAvailabilityItem'
    PaginatedProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedRoleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    PaginatedSkillMatchResultItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SkillMatchResultItem'
    PaginatedSkillTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SkillTag'
    PaginatedWorkloadForecastItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadForecastItem'
    PasswordResetConfirmRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        newPassword:
          type: string
          minLength: 1
      required:
      - newPassword
      - token
      - uid
    PasswordResetRequestRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedAssignmentRequest:
      type: object
      description: Assignment serializer with weekly hours support
      properties:
        person:
          type: integer
        projectName:
          type: string
          minLength: 1
          maxLength: 200
        project:
          type: integer
          nullable: true
        roleOnProjectId:
          type: integer
          nullable: true
        weeklyHours: {}
    PatchedBulkUpdateHoursRequestRequest:
      type: object
      properties:
        updates:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentHoursUpdateRequest'
    PatchedDeliverableAssignmentRequest:
      type: object
      description: Serializer for linking people to deliverables with weekly hours.
      properties:
        deliverable:
          type: integer
        person:
          type: integer
        roleOnMilestone:
          type: string
          nullable: true
        is_active:
          type: boolean
    PatchedDeliverableRequest:
      type: object
      description: Deliverable serializer with snake_case -> camelCase field mapping
      properties:
        project:
          type: integer
        percentage:
          type: integer
          maximum: 100
          minimum: 0
          nullable: true
          description: Completion percentage (0-100)
        description:
          type: string
          description: Brief description (e.g., SD, DD, IFP, IFC)
          maxLength: 200
        date:
          type: string
          format: date
          nullable: true
        notes:
          type: string
          description: Additional details, owner info, requirements, etc.
        sortOrder:
          type: integer
        isCompleted:
          type: boolean
        completedDate:
          type: string
          format: date
          nullable: true
    PatchedDepartmentRequest:
      type: object
      description: Department serializer with explicit camelCase field mapping
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        parentDepartment:
          type: integer
          nullable: true
        manager:
          type: integer
          nullable: true
        description:
          type: string
        isActive:
          type: boolean
    PatchedPersonRequest:
      type: object
      description: Person serializer with department and role integration
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        weeklyCapacity:
          type: integer
          default: 36
        role:
          type: integer
          nullable: true
          description: Person's role in the organization
        department:
          type: integer
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
    PatchedPersonSkillRequest:
      type: object
      description: Person skill serializer with camelCase field names and related
        data
      properties:
        person:
          type: integer
        skillTagId:
          type: integer
        skillType:
          type: string
          minLength: 1
        proficiencyLevel:
          type: string
          minLength: 1
        notes:
          type: string
        lastUsed:
          type: string
          format: date
          nullable: true
    PatchedPreDeliverableItemRequest:
      type: object
      properties:
        deliverable:
          type: integer
        preDeliverableTypeId:
          type: integer
        generatedDate:
          type: string
          format: date
        daysBefore:
          type: integer
        isCompleted:
          type: boolean
        completedDate:
          type: string
          format: date
          nullable: true
        notes:
          type: string
        isActive:
          type: boolean
    PatchedProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        status:
          $ref: '#/components/schemas/StatusEnum'
        client:
          type: string
          maxLength: 100
        description:
          type: string
        projectNumber:
          type: string
          nullable: true
        startDate:
          type: string
          format: date
          nullable: true
        endDate:
          type: string
          format: date
          nullable: true
        estimatedHours:
          type: integer
          nullable: true
        isActive:
          type: boolean
          default: true
    PatchedProjectRoleUpdateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        isActive:
          type: boolean
        sortOrder:
          type: integer
    PatchedRoleRequest:
      type: object
      description: Role serializer with camelCase field transformation
      properties:
        name:
          type: string
          minLength: 1
          description: Role name (e.g., Senior Engineer, Product Manager)
          maxLength: 100
        description:
          type: string
          description: Optional description of the role responsibilities
        isActive:
          type: boolean
          description: Whether this role is currently available for assignment
    PatchedSkillTagRequest:
      type: object
      description: Skill tag serializer with camelCase field names
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        category:
          type: string
          maxLength: 50
        description:
          type: string
    PatchedUserSettingsPatchRequest:
      type: object
      properties:
        settings:
          type: object
          additionalProperties: {}
    PeopleAutocompleteItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        department:
          type: integer
          nullable: true
      required:
      - id
      - name
    PeopleSearchItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        department:
          type: integer
          nullable: true
      required:
      - id
      - name
    Person:
      type: object
      description: Person serializer with department and role integration
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        weeklyCapacity:
          type: integer
          default: 36
        role:
          type: integer
          nullable: true
          description: Person's role in the organization
        roleName:
          type: string
          readOnly: true
        department:
          type: integer
          nullable: true
        departmentName:
          type: string
          readOnly: true
        location:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - createdAt
      - departmentName
      - id
      - name
      - roleName
      - updatedAt
    PersonCapacityHeatmapItem:
      type: object
      description: Serializer for capacity heatmap items returned by capacity_heatmap
        action.
      properties:
        id:
          type: integer
        name:
          type: string
        weeklyCapacity:
          type: integer
        department:
          type: string
          nullable: true
        weekKeys:
          type: array
          items:
            type: string
        weekTotals:
          type: object
          additionalProperties:
            type: number
            format: double
        peak:
          type: object
          additionalProperties:
            type: number
            format: double
        averagePercentage:
          type: number
          format: double
        percentByWeek:
          type: object
          additionalProperties:
            type: number
            format: double
        availableByWeek:
          type: object
          additionalProperties:
            type: number
            format: double
      required:
      - averagePercentage
      - id
      - name
      - peak
      - weekKeys
      - weekTotals
      - weeklyCapacity
    PersonExperienceProfileResponse:
      type: object
      properties:
        byClient:
          type: array
          items:
            $ref: '#/components/schemas/PEPClient'
        byProject:
          type: array
          items:
            $ref: '#/components/schemas/PEPProject'
        eventsCount:
          type: integer
      required:
      - byClient
      - byProject
      - eventsCount
    PersonProjectTimelineResponse:
      type: object
      properties:
        weeksSummary:
          $ref: '#/components/schemas/WeeksSummary'
        coverageBlocks:
          type: array
          items:
            $ref: '#/components/schemas/CoverageBlock'
        events:
          type: array
          items:
            $ref: '#/components/schemas/MembershipEvent'
        roleChanges:
          type: array
          items:
            $ref: '#/components/schemas/RoleChange'
        weeklyHours:
          type: object
          additionalProperties:
            type: number
            format: double
      required:
      - coverageBlocks
      - events
      - roleChanges
      - weeklyHours
      - weeksSummary
    PersonRequest:
      type: object
      description: Person serializer with department and role integration
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        weeklyCapacity:
          type: integer
          default: 36
        role:
          type: integer
          nullable: true
          description: Person's role in the organization
        department:
          type: integer
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
      required:
      - name
    PersonSkill:
      type: object
      description: Person skill serializer with camelCase field names and related
        data
      properties:
        id:
          type: integer
          readOnly: true
        person:
          type: integer
        skillTagId:
          type: integer
        skillTagName:
          type: string
          readOnly: true
        skillType:
          type: string
        proficiencyLevel:
          type: string
        notes:
          type: string
        lastUsed:
          type: string
          format: date
          nullable: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - createdAt
      - id
      - person
      - proficiencyLevel
      - skillTagId
      - skillTagName
      - skillType
      - updatedAt
    PersonSkillRequest:
      type: object
      description: Person skill serializer with camelCase field names and related
        data
      properties:
        person:
          type: integer
        skillTagId:
          type: integer
        skillType:
          type: string
          minLength: 1
        proficiencyLevel:
          type: string
          minLength: 1
        notes:
          type: string
        lastUsed:
          type: string
          format: date
          nullable: true
      required:
      - person
      - proficiencyLevel
      - skillTagId
      - skillType
    PersonSkillSummary:
      type: object
      description: Lightweight serializer for person skill summaries
      properties:
        skillTagName:
          type: string
          readOnly: true
        skillType:
          type: string
          readOnly: true
        proficiencyLevel:
          type: string
          readOnly: true
      required:
      - proficiencyLevel
      - skillTagName
      - skillType
    PersonSkillSummaryGrouped:
      type: object
      properties:
        strengths:
          type: array
          items:
            $ref: '#/components/schemas/PersonSkillSummary'
        development:
          type: array
          items:
            $ref: '#/components/schemas/PersonSkillSummary'
        learning:
          type: array
          items:
            $ref: '#/components/schemas/PersonSkillSummary'
      required:
      - development
      - learning
      - strengths
    PhaseEnum:
      enum:
      - sd
      - dd
      - ifp
      - masterplan
      - bulletins
      - ca
      - other
      type: string
      description: |-
        * `sd` - SD
        * `dd` - DD
        * `ifp` - IFP
        * `masterplan` - Masterplan
        * `bulletins` - Bulletins
        * `ca` - CA
        * `other` - Other
    PreDeliverableGlobalSettingsItem:
      type: object
      properties:
        typeId:
          type: integer
        typeName:
          type: string
        defaultDaysBefore:
          type: integer
        isEnabledByDefault:
          type: boolean
        sortOrder:
          type: integer
        isActive:
          type: boolean
      required:
      - defaultDaysBefore
      - isEnabledByDefault
      - typeId
      - typeName
    PreDeliverableGlobalSettingsUpdateRequest:
      type: object
      properties:
        typeId:
          type: integer
        defaultDaysBefore:
          type: integer
          minimum: 0
        isEnabledByDefault:
          type: boolean
      required:
      - defaultDaysBefore
      - isEnabledByDefault
      - typeId
    PreDeliverableItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        deliverable:
          type: integer
        preDeliverableTypeId:
          type: integer
        typeName:
          type: string
          readOnly: true
        generatedDate:
          type: string
          format: date
        daysBefore:
          type: integer
        isCompleted:
          type: boolean
        completedDate:
          type: string
          format: date
          nullable: true
        completedBy:
          type: string
          readOnly: true
        notes:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        displayName:
          type: string
          readOnly: true
        isOverdue:
          type: string
          readOnly: true
        parentDeliverable:
          type: string
          readOnly: true
        assignedPeople:
          type: string
          readOnly: true
        itemType:
          type: string
          readOnly: true
      required:
      - assignedPeople
      - completedBy
      - createdAt
      - daysBefore
      - deliverable
      - displayName
      - generatedDate
      - id
      - isActive
      - isCompleted
      - isOverdue
      - itemType
      - parentDeliverable
      - preDeliverableTypeId
      - typeName
      - updatedAt
    PreDeliverableItemRequest:
      type: object
      properties:
        deliverable:
          type: integer
        preDeliverableTypeId:
          type: integer
        generatedDate:
          type: string
          format: date
        daysBefore:
          type: integer
        isCompleted:
          type: boolean
        completedDate:
          type: string
          format: date
          nullable: true
        notes:
          type: string
        isActive:
          type: boolean
      required:
      - daysBefore
      - deliverable
      - generatedDate
      - isActive
      - isCompleted
      - preDeliverableTypeId
    PreItemsBackfillRequestRequest:
      type: object
      properties:
        projectId:
          type: integer
        start:
          type: string
          format: date
        end:
          type: string
          format: date
        regenerate:
          type: boolean
    PreItemsBackfillResponse:
      type: object
      properties:
        enqueued:
          type: boolean
        jobId:
          type: string
        statusUrl:
          type: string
        result:
          type: object
          additionalProperties: {}
      required:
      - enqueued
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        status:
          $ref: '#/components/schemas/StatusEnum'
        client:
          type: string
          maxLength: 100
        description:
          type: string
        projectNumber:
          type: string
          nullable: true
        startDate:
          type: string
          format: date
          nullable: true
        endDate:
          type: string
          format: date
          nullable: true
        estimatedHours:
          type: integer
          nullable: true
        isActive:
          type: boolean
          default: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - createdAt
      - id
      - name
      - updatedAt
    ProjectAvailabilityItem:
      type: object
      description: Availability snapshot item for a person in project context.
      properties:
        personId:
          type: integer
        personName:
          type: string
        totalHours:
          type: number
          format: double
        capacity:
          type: number
          format: double
        availableHours:
          type: number
          format: double
        utilizationPercent:
          type: number
          format: double
      required:
      - availableHours
      - capacity
      - personId
      - personName
      - totalHours
      - utilizationPercent
    ProjectFilterItem:
      type: object
      properties:
        assignmentCount:
          type: integer
        hasFutureDeliverables:
          type: boolean
        status:
          type: string
      required:
      - assignmentCount
      - hasFutureDeliverables
      - status
    ProjectFilterMetadataResponse:
      type: object
      properties:
        projectFilters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProjectFilterItem'
      required:
      - projectFilters
    ProjectGridSnapshotResponse:
      type: object
      properties:
        weekKeys:
          type: array
          items:
            type: string
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectLite'
        hoursByProject:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: number
              format: double
        deliverablesByProjectWeek:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
        hasFutureDeliverablesByProject:
          type: object
          additionalProperties:
            type: boolean
        metrics:
          $ref: '#/components/schemas/ProjectSnapshotMetrics'
      required:
      - deliverablesByProjectWeek
      - hasFutureDeliverablesByProject
      - hoursByProject
      - metrics
      - projects
      - weekKeys
    ProjectLite:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        client:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
      required:
      - id
      - name
    ProjectPreDeliverableSettingsResponse:
      type: object
      properties:
        projectId:
          type: integer
        settings:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTypeSetting'
      required:
      - projectId
      - settings
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        status:
          $ref: '#/components/schemas/StatusEnum'
        client:
          type: string
          maxLength: 100
        description:
          type: string
        projectNumber:
          type: string
          nullable: true
        startDate:
          type: string
          format: date
          nullable: true
        endDate:
          type: string
          format: date
          nullable: true
        estimatedHours:
          type: integer
          nullable: true
        isActive:
          type: boolean
          default: true
      required:
      - name
    ProjectRoleCreateRequest:
      type: object
      properties:
        department:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 100
        sortOrder:
          type: integer
          nullable: true
      required:
      - department
      - name
    ProjectRoleItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_active:
          type: boolean
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        department_id:
          type: integer
          readOnly: true
      required:
      - department_id
      - id
      - name
    ProjectSnapshotMetrics:
      type: object
      properties:
        projectsCount:
          type: integer
        peopleAssignedCount:
          type: integer
        totalHours:
          type: number
          format: double
      required:
      - peopleAssignedCount
      - projectsCount
      - totalHours
    ProjectStaffingTimelineResponse:
      type: object
      properties:
        people:
          type: array
          items:
            $ref: '#/components/schemas/PSTPerson'
        roleAggregates:
          type: array
          items:
            $ref: '#/components/schemas/PSTRoleAgg'
      required:
      - people
      - roleAggregates
    ProjectTotal:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        hours:
          type: number
          format: double
      required:
      - hours
      - id
      - name
    ProjectTotalsResponse:
      type: object
      properties:
        hoursByProject:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: number
              format: double
      required:
      - hoursByProject
    ProjectTypeSetting:
      type: object
      properties:
        typeId:
          type: integer
        typeName:
          type: string
        isEnabled:
          type: boolean
        daysBefore:
          type: integer
          nullable: true
        source:
          $ref: '#/components/schemas/SourceEnum'
      required:
      - daysBefore
      - isEnabled
      - source
      - typeId
      - typeName
    RecentAssignment:
      type: object
      properties:
        person:
          type: string
        project:
          type: string
        created:
          type: string
      required:
      - created
      - person
      - project
    Role:
      type: object
      description: Role serializer with camelCase field transformation
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Role name (e.g., Senior Engineer, Product Manager)
          maxLength: 100
        description:
          type: string
          description: Optional description of the role responsibilities
        isActive:
          type: boolean
          description: Whether this role is currently available for assignment
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - createdAt
      - id
      - name
      - updatedAt
    RoleChange:
      type: object
      properties:
        week_start:
          type: string
        roleFromId:
          type: integer
        roleToId:
          type: integer
      required:
      - roleFromId
      - roleToId
      - week_start
    RoleEnum:
      enum:
      - admin
      - manager
      - user
      type: string
      description: |-
        * `admin` - admin
        * `manager` - manager
        * `user` - user
    RoleRequest:
      type: object
      description: Role serializer with camelCase field transformation
      properties:
        name:
          type: string
          minLength: 1
          description: Role name (e.g., Senior Engineer, Product Manager)
          maxLength: 100
        description:
          type: string
          description: Optional description of the role responsibilities
        isActive:
          type: boolean
          description: Whether this role is currently available for assignment
      required:
      - name
    RunWeeklySnapshotResponse:
      type: object
      properties:
        week_start:
          type: string
        lock_acquired:
          type: boolean
        examined:
          type: integer
        inserted:
          type: integer
        updated:
          type: integer
        skipped:
          type: integer
        events_inserted:
          type: integer
        skipped_due_to_lock:
          type: boolean
      required:
      - lock_acquired
      - week_start
    SetPasswordRequestRequest:
      type: object
      properties:
        userId:
          type: integer
        newPassword:
          type: string
          minLength: 1
      required:
      - newPassword
      - userId
    SetUserRoleRequestRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - role
    SkillMatchAsyncResponse:
      type: object
      properties:
        jobId:
          type: string
      required:
      - jobId
    SkillMatchResultItem:
      type: object
      description: Result item for people skill match scoring.
      properties:
        personId:
          type: integer
        name:
          type: string
        score:
          type: number
          format: double
          description: 0-100
        matchedSkills:
          type: array
          items:
            type: string
        missingSkills:
          type: array
          items:
            type: string
        departmentId:
          type: integer
          nullable: true
        roleName:
          type: string
          nullable: true
      required:
      - departmentId
      - matchedSkills
      - missingSkills
      - name
      - personId
      - score
    SkillTag:
      type: object
      description: Skill tag serializer with camelCase field names
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        category:
          type: string
          maxLength: 50
        description:
          type: string
        isActive:
          type: boolean
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - createdAt
      - id
      - isActive
      - name
      - updatedAt
    SkillTagRequest:
      type: object
      description: Skill tag serializer with camelCase field names
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        category:
          type: string
          maxLength: 50
        description:
          type: string
      required:
      - name
    SourceEnum:
      enum:
      - project
      - global
      - default
      type: string
      description: |-
        * `project` - project
        * `global` - global
        * `default` - default
    StatusEnum:
      enum:
      - planning
      - active
      - active_ca
      - on_hold
      - completed
      - cancelled
      type: string
      description: |-
        * `planning` - Planning
        * `active` - Active
        * `active_ca` - Active CA
        * `on_hold` - On Hold
        * `completed` - Completed
        * `cancelled` - Cancelled
    StatusSeries:
      type: object
      properties:
        active:
          type: array
          items:
            type: number
            format: double
        active_ca:
          type: array
          items:
            type: number
            format: double
        other:
          type: array
          items:
            type: number
            format: double
      required:
      - active
      - active_ca
      - other
    TeamOverviewItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        role:
          type: string
        utilization_percent:
          type: number
          format: double
        allocated_hours:
          type: number
          format: double
        capacity:
          type: integer
        is_overallocated:
          type: boolean
        peak_utilization_percent:
          type: number
          format: double
        peak_week:
          type: string
        is_peak_overallocated:
          type: boolean
      required:
      - allocated_hours
      - capacity
      - id
      - is_overallocated
      - is_peak_overallocated
      - name
      - peak_utilization_percent
      - peak_week
      - role
      - utilization_percent
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    UserListItem:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        groups:
          type: array
          items:
            type: string
        role:
          type: string
        person:
          allOf:
          - $ref: '#/components/schemas/UserListPerson'
          nullable: true
      required:
      - groups
      - id
      - is_staff
      - is_superuser
      - role
      - username
    UserListPerson:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          additionalProperties: {}
          readOnly: true
        person:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
        settings: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - person
      - updated_at
      - user
    UsernameOrEmailTokenObtainPairRequest:
      type: object
      description: |-
        Allow login with either username or email.

        If the incoming 'username' field looks like an email or uniquely matches a
        user email (case-insensitive), rewrite it to that user's username before
        delegating to the base serializer.
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    UtilizationDistribution:
      type: object
      properties:
        underutilized:
          type: integer
        optimal:
          type: integer
        high:
          type: integer
        overallocated:
          type: integer
      required:
      - high
      - optimal
      - overallocated
      - underutilized
    UtilizationScheme:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ModeEnum'
        blue_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        blue_max:
          type: integer
          maximum: 2147483647
          minimum: 0
        green_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        green_max:
          type: integer
          maximum: 2147483647
          minimum: 0
        orange_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        orange_max:
          type: integer
          maximum: 2147483647
          minimum: 0
        red_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        zero_is_blank:
          type: boolean
        version:
          type: integer
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - updated_at
      - version
    UtilizationSchemeRequest:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ModeEnum'
        blue_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        blue_max:
          type: integer
          maximum: 2147483647
          minimum: 0
        green_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        green_max:
          type: integer
          maximum: 2147483647
          minimum: 0
        orange_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        orange_max:
          type: integer
          maximum: 2147483647
          minimum: 0
        red_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        zero_is_blank:
          type: boolean
    WeeksSummary:
      type: object
      properties:
        weeks:
          type: integer
        hours:
          type: number
          format: double
      required:
      - hours
      - weeks
    WorkloadForecastItem:
      type: object
      description: Serializer for workload forecast items returned by workload_forecast
        action.
      properties:
        weekStart:
          type: string
        totalCapacity:
          type: number
          format: double
        totalAllocated:
          type: number
          format: double
        teamUtilization:
          type: number
          format: double
        peopleOverallocated:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadForecastOverallocatedItem'
      required:
      - peopleOverallocated
      - teamUtilization
      - totalAllocated
      - totalCapacity
      - weekStart
    WorkloadForecastOverallocatedItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
